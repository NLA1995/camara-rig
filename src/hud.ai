%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 24.1.1
%%For: (Natalia Luna) ()
%%Title: (hud.ai)
%%CreationDate: 9/12/2023 5:20 PM
%%Canvassize: 16383
%%BoundingBox: 1 -70 169 -1
%%HiResBoundingBox: 1.40991 -69.7424 168.875 -1.20634
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 400.5 -400.5 400.5 -400.5
%AI3_TileBox: 103.36 -786.88 696.64 -13.12
%AI3_DocumentPreview: None
%AI5_ArtSize: 800 800
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -107 40.75 4 2216 914 18 0 0 46 121 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 -700
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 52 8
%%BeginData: 6083 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A87DFD0BA87DA8FD0FFFA87DFD16A8FFA8FD0FFF7DFD17A87DFFFD
%0DA8FFA8FD10FF7DFD0DFFA8FD0FFFA8FD0DFFA8FFFFFFA8FFA8FFA8FFFD
%05A8FD0BFFA8A8FD18FF7DFFA8FD05FFA8FFA8FFA8FFA8A87DA8A8FD0DFF
%A8A8FD0BFFA8FD10FFA8FD0DFF7DA8FD0CFFA8FD0CFFA8FD18FFA8A8FD0F
%FFA8A87DFD0CFF7DFD0CFFA8A8FD0FFF7DFD0DFF52FD0DFF7DFD0BFFA8A8
%FD0CFF7DFD0BFF7DA8A8FD11FF7DA8FD0AFFA8A8FD0BFFA8FD10FFA8FD0D
%FF7DFD0CFFA8A8FD0CFFA8FD0CFF7DFD0BFFA8A8A8FD12FFA8A8FD09FFA8
%FD0CFFA8A8FD0FFF7DFD0CFFA87DFD0CFFA8A8FD0BFFA8A8FD0CFF7DFD0B
%FFA8A8A8FD13FFA87DA8FD07FFA8FD0CFFA8FD10FFA8A8FD0BFF7DA8FD0C
%FFA8FD0DFFA8FD0BFFA8A8A8FD0BFF7DA8FD15FFA8A8FD06FF7DFD0CFFA8
%A8FD0FFFA8FD0CFFA87DFD0CFFA8A8FD0CFFA8A8FD0BFF7DA8FD0AFFA8A8
%A8FD16FFA8A8FD05FFA8FD0CFFA8FD10FFA8A8FD0BFF7DA8FD0CFFA8FD0D
%FFA8FD0BFFA8A8A8FD0BFF7DA8FD17FFA8A8FD04FF7DFD0CFFA8A8FD0FFF
%A8FD0BFFA8A8A8FD0CFFA8A8FD0CFFA8A8FD0BFF7DA8FD0BFFA87DA8A8FD
%16FF7DA8FFFFFFA8A8FD0BFFA8FD10FFA8FD0CFFA8A8FD0CFFA8FD0DFFA8
%FD0BFFA8A8A8FD0BFFA8FFA8A87DA8A8FD13FFA8A8FFFFFF7DFD0CFFA8A8
%FD0FFF7DFD0BFFA8A8A8FD0CFFA8A8FD0CFFA8A8FD0AFFA8A8A8FD0BFFA8
%A8FFFFFFA8A87DA8A8FD11FF7DFFFFFFA8A8FD0BFFA8FD10FFA8FD0CFFA8
%A8FD0CFFA8FD0DFFA8FD0BFFA8FFA8FD0BFFA8A8FD06FFA8A87DFD10FFA8
%A8FFFFA8FD0BFFA8A8FD10FF7DFD0BFF7DFFA8FD0CFFA8A8FD0CFFA8A8FD
%0AFFFD04A8FD0BFF7DFD09FF7D7DA8FD0DFFA8A8FFFFA8FD0CFFA8FD10FF
%A8A8FD0AFFA8A8A8FD0CFFA8FD0DFFA8A8FD0AFFA8FFA8FD0CFFA8FD0BFF
%A87DFD0DFFA8FFFF7DFD0BFFA8A8FD10FFA8FD0BFF7DFF7DFD0CFFA8A8FD
%0DFF7DFD0AFFFD04A8FD0BFFA8FD0CFFA87DFD0CFFA87DFFA8FD0CFFA8FD
%10FFA8A8FD0AFFA8A8A8FD0CFFA8FD0DFFA8A8FD0AFFA8FFA8FD0CFFA8FD
%0EFF7DFD0CFFA8FF7DFD0BFFA8A87DA87DA87DA87DA87DA87DA8A8A87DA8
%A8FD0BFFA8FFA8FD0CFFA8A8FD0DFF7DFD0AFFFD04A8FD0BFFA8FD0EFFA8
%A8FD0BFF7DFFA8FD29FFA8A8A8FD0CFFA8FD0EFFA8FD0AFFA8FFA8FD0BFF
%A8A8FD0EFFA8A8FD0BFFA8A87DFD29FF7DFFA8FD0CFFA8A8FD0DFF7DFD09
%FFA8A8FFA8A8FD0BFF7DFD0FFF7DFD0BFFA8A8A8FD29FFA8A8A8FD0CFFA8
%FD0EFFA8FD0AFFA8FFA8FD0BFFA8A8FD0FFFA8FD0CFFA8A8FD29FF7DFFA8
%FD0CFFA8A8FD0DFFA8FD0AFFA8FFFFA8FD0BFF7DFD0FFFA8FD0CFFA8A8FD
%29FFA8FFA8FD0CFFA8FD0DFFA8A8FD0AFFA8FFFFA8FD0BFFA8FD10FFA8FD
%0BFF7D7DFD29FF7DFF7DFD0CFFA8A8FD0DFF7DFD0AFFA8A8FF7DFD0BFFA8
%FD0FFFA8A8FD0BFFA8A8FD29FFA8FFA8FD0CFFA8FD0DFFA8A8FD0AFFA8FF
%FFA8FD0BFFA8FD10FFA8FD0BFFA87DFD29FFA8FF7DFD0CFFA8FD0EFF7DFD
%0AFFA8A8FFA8FD0BFFA8FD0FFFA8A8FD0BFFA8A8FD29FFA8FFA8A8FD0BFF
%A8FD0DFFA8A8FD0AFFA8FFA8A8FD0BFFA8FD10FFA8FD0BFFA87DFD29FF7D
%FFA8FD0CFFA8A8FD0DFF7DFD0AFFA8A8FF7DFD0BFF7DFD0FFFA8A8FD0BFF
%A8A8FD29FFA8FFA8A8FD0BFFA8FD0DFFA8A8FD0AFFA8FFFFA8FD0BFFA8FD
%10FFA8FD0BFFA87DFD29FF7DFFA8FD0CFFA8FD0DFFA8A8FD0AFFA8A8FF7D
%FD0BFF7DFD0FFF7DFD0BFFA8A8A8FD0CFFFD10A87DA8FD0BFFA8FFFFA8FD
%0BFFA8FD0DFFA8FD0BFFA8FFFFA8FD0BFFA8A8FD0EFFA8FD0CFF7D7DFD0B
%FFA8A8FFFFA8FFFFFFA8FFFFFFA8FD05FF7DFD0BFFA8FFA8A8FD0BFFA8A8
%FD0CFFA8A8FD0AFFA8A8FF7DFD0BFFA8FD0EFFA8A8FD0BFFA8A8A8FD0CFF
%A8FD10FFA8FD0CFFA8FFA8FD0BFFA8FD0DFFA8FD0BFFA8FFFFA8FD0BFFA8
%A8FD0DFF7DFD0CFFA8A87DFD0BFFA8A8FD10FFA8FD0BFFFD04A8FD0BFFA8
%A8FD0BFFA8A8FD0BFFA8FFFFA8FD0BFFA8FD0DFF7DFD0DFF7DFFA8FD0CFF
%A8FD0FFFA8A8FD0CFFA8FFA8FD0BFFA8FD0CFFA8A8FD0BFFA8FFA8A8FD0B
%FFA8FD0CFFA8A8FD0CFFA8A8FF7DFD0BFFA8A8FD10FF7DFD0BFFA8A8FFA8
%A8FD0BFF7DFD0BFF7DFD0BFFA8A8FFFF7DFD0BFF7DFD0BFFA87DFD0DFFA8
%A8FFA8FD0CFFA8FD0FFFA8A8FD0CFFA8FFA8FD0CFFA8A8FD09FF7DFD0DFF
%A8FFA8A8FD0BFFA8FD0AFFA8A8FD0EFF7DFFFF7DFD0BFFA8A8FD10FF7DFD
%0CFFA8FFA8A8FD0CFFA87DFD07FF7DFD0DFFA8A8FFFF7DFD0BFF7DFFFFFF
%A8FFA8A87DA87DA8FD0EFFA8A8FFFFA8FD0CFFA8FD10FFA8FD0CFF7DFFA8
%A8FD0EFF7DA8A8FFA8A87DFD0FFFA8FFA8FD0CFFA87DA8A8A87DA8A8FD12
%FFA8FFFFFF7DFD0BFFA8A8FD10FF7DFD0CFFA8A8FF7DFD0FFFA8A87DA8A8
%FD0FFFA8A8FFA8A8FD0DFFA8FD16FFA87DFFFFFFA8FD0CFFA8FD10FFA8FD
%0CFFA8A8FFA8FD23FFA8A8FFA8FD25FF7DFD04FF7DFD0BFFA8A8FD10FFA8
%FD0DFF7DFFA8A8FD22FF7DFF7DFD25FF7DFD05FFA8FD0CFFA8FD0FFFA8A8
%FD0EFF7DFF7DFD21FFA8A8FFA8FD24FF7DFD06FF7DFD0BFFA8A8FD10FF7D
%FD0EFFA87DFF7DFD20FF7DFFA8A8FD23FF7DFD07FFA8FD0CFFA8FD0FFFA8
%A8FD0FFFFD04A8FD1EFFA8A8FF7DFD23FF7DFD08FF7DFD0BFFA8A8FD10FF
%7DFD10FFA8A8A8FD1CFFA87DA8FF7DFD22FFA87DFD09FFA8FD0CFFA8FD0F
%FFA8A8FD11FFA8A8A8FD1AFFA87DA8FFA8A8FD20FFA8A8A8FD0AFF7DFD0B
%FFA8A8FD0FFFA8A8FFA8FFFFFFA8FFFFFFA8FD07FFA8A87DA8FD18FF7DA8
%FFFFFFA8A8FD1DFFA8FF7D7DA8FD0BFFA8FFFFA8FFA8FFA8FFA8FFA8A8A8
%FD10FFFD12A8FF7DA87DA8A8FD14FFA87DFD05FF7DFD19FFA8FFFD05A8FD
%0EFFFD0DA8FD1FFFA8FFFFFFA8FFFFFFA8FFA8A87DFD04A8FFA8FFA8FFA8
%FFA8FFA8A87DA8A8FD05FFFD04A87DA8A8A87DA8A8A87DA87DA87DA8A8A8
%7DA8A8A87DA87DA8A8FFA8FD4AFFA8FFA8A87DFD08A8FFA8FDB7FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Golden Ring)
(Golden Ring) 1 7 Bd
[
0
0
0
0
1
1
1
4 %_Br
<
00000000000000000000010101010101020202020202030303040404040404040405050505050505
05060606060606070707070707090909090909090A0A0A0A0A0A0B0B0B0C0B0C0D0D0D0D0E0D0E0F
0F0F0F0F0E1010101010101111111111111212121212121313131313131414141414141415151616
151517171717171718181818181819191A19191A1A1B1B1B1B1B1B1C1C1C1C1C1B1C1D1C1C1C1C1D
1E1E1D1D1D1F1F1F1F1F1F1F20202020202021212222222223232323232325242425242425262626
2626262727272727272829292929292A2A2A2A2A2A2B2B2B2B
>
<
00000000000000000001010100010101010202020303020203030304040303040404040404040504
0405050505050505050606050706060607070709080807090909090909090A0A090A0A0A0A0B0A0A
0A0B0B0B0C0B0B0B0D0D0D0E0D0D0D0F0F0E0F0F0F0F100F0F111111101111111112121212121212
131312141313131514141616151516161617171717181818181919181A1A1A1A1B1B1B1C1C1C1C1C
1C1C1E1E1E1D1F1F1F20202020212121212322222424242425252527272626282828292929282A2A
2A2B2B2A2A2C2C2C2C2D2D2D2E2E2E2E2F2F2F303030303232
>
<
0000000102030405060608090A0A0C0D0F0F11121214161718191B1B1D1F20212224242628292A2B
2D2D2F30323334363738393B3B3D3E404143444547484A4A4C4D4E4F515353545657595A5C5C5D5F
606162646567686A6A6B6C6D6F70717274767778797B7C7D7F80818284858687898A8B8D8E8F9092
9394959698999B9C9E9FA0A1A3A4A5A7A8A9AAABABACADAEAFB0B1B3B4B5B7B8B9BABCBDBEBFC0C1
C2C2C3C4C5C7C7C8CACBCCCDCFD0D1D2D2D4D5D5D6D7D8D9DBDCDEDFE1E2E4E5E7E7E8E9E9EBECED
EEEFF1F2F4F5F5F6F7F8F9FAFAFBFBFCFDFEFFFFFFFFFFFFFF
>
0
<
FFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F3F2F2
F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDEDEDECECECEC
ECECEBEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E6E5
E5E5E5E5E5E4E4E4E4E4E4E4E3E3E3E3E3E3E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDF
DFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDCDBDBDBDB
>
<
FFFFFEFEFEFEFDFDFDFCFCFCFCFBFBFBFAFAFAFAF9F9F9F9F8F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4
F4F3F3F3F3F2F2F2F1F1F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9
E8E8E8E8E7E7E7E7E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDE
DDDDDDDCDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D5D4D4D4D3D3D3D3D2
D2D2D1D1D1D1D0D0D0CFCFCFCFCECECECDCDCDCDCCCCCCCCCBCBCBCACACACAC9C9C9C8C8C8C8C7C7
C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C3C2C2C2C1C1C1C1C0C0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
4 %_Br
<
2B2A29292826252423232121201E1E1D1C1B1A1A1918171615151413
>
<
32302F2E2D2C2B2A2928272624231F1E1D1C1B1A1918171615131312
>
<
FFFFFFFFFFFFFFFEFDFCFBF9F7F4F2F0EEEDECEBEAE9E8E7E6E5E3E2
>
0
<
DBDCDDDDDEDFE0E1E2E2E3E4E5E6E6E7E8E9EAEAEBECEDEEEFEFF0F1
>
<
C0C1C2C3C4C5C6C7C8C9CACBCCCDCFD0D1D2D3D4D5D6D7D8D9DADBDC
>
<
1F202122232425262728292A2B2C2D2E2F303132333435363738393A
>
4 %_Br
<
131212100F
>
<
12110F0E0D
>
<
E2E1DFDFDE
>
0
<
F1F2F3F4F5
>
<
DCDDDFE0E1
>
<
3A3B3D3E3F
>
4 %_Br
<
0F1012111213141515161718191A1A1B1C1C1E1E20212123232425262829292A2B
>
<
0D0E0F101112131315161718191A1B1C1D20212324262728292A2B2C2D2E2F3032
>
<
DEDFDFE0E1E2E3E5E6E7E8E9EAEBECEDEEF1F3F4F7F9FBFCFDFEFFFFFFFFFFFFFF
>
0
<
F5F4F3F3F2F1F0EFEFEEEDECEBEAEAE9E8E7E6E6E5E4E3E2E2E1E0DFDEDDDDDCDB
>
<
E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0
>
<
3F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
4 %_Br
<
2B2B2B2B2A2A2A2A2A2A292929292928272727272727272626262626262524242524242423232323
23232322222222212121202020202020201F1F1F1F1F1F1F1E1D1D1D1E1E1E1D1C1C1C1C1D1D1C1B
1B1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A19191A1A19191818181818181818171717171717171717
15151516161515151414141414141414141313131313131313131212121212121212121211111111
111111111111101010101010101010100E0F0F0F0F0F0E0F0F0F0E0D0D0E0E0D0D0D0D0D0D0D0C0C
0B0B0C0C0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A090909090909090909090909090707070707
07070707070707070606060606060606060606060606060505050505050505050505050505050505
05050505040404040404040404040404040404040404040404040404030303030303030303020202
02020202020202020202020202020202020202020101010101010101010101010101010101010101
01010101010101010100000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
3232303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2A2A2A2B2A2A2A2A282929292828282826262727
25252524242424222222232121212121202020201F1F1F1F1E1E1E1E1C1C1C1C1C1C1C1C1B1B1B1B
1B1A1A1A1A1818191919181818181717171717161616161515151616141414151513131313141213
13131312121212121212121212111111111210111111110F0F0F10100F0F0F0F0F0F0E0E0F0F0F0D
0D0D0D0D0E0C0D0D0D0D0D0B0B0B0B0C0C0B0B0B0B0B0B0A0A0A0A0B0B0A0A0A0A0A0A0909090A0A
0A0A0909090909090908090909090909070808080808090707070707070706060606060607070505
06060606060505050505050505050505050505050505040404040404050505040404040404040404
04040404040404040404030303030303030404040403030303030303030303030202020202020303
03030303030202020202020202020202020201010101010101010101010101010101000000000101
01010101010101010101010000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
FFFFFFFFFFFFFFFEFDFCFBFBFAFAF9F8F7F6F5F5F4F2F2F1EFEEEDECEBE9E9E8E7E7E5E4E2E2E1DF
DEDCDBD9D8D7D6D6D5D5D4D2D2D1D0CFCFCDCCCBCAC8C7C7C6C5C4C3C2C2C2C1C0BFBEBDBDBCBAB9
B8B8B7B5B4B3B3B1B0AFAEAEADACACABABAAA9A8A8A7A5A4A3A3A1A09F9F9E9C9A9B999898969594
94939190908F8E8E8D8B8B8A8887878685858482828180807F7D7D7C7B7B79787877767674727271
71706F6F6D6C6C6B6B6A696A686867656564646261615F605F5F5D5C5C5C5C5A5A59575856565454
53535353514F4F4E4E4D4D4C4C4A4A494A4848474746454444434341413F403E3E3D3D3C3B3B3B3B
3939383837373736363434333331323230302F2F2F2D2E2D2D2D2B2B2A2A2A292928282826262624
252424242222222121212020201F1F1D1D1D1B1B1B1C1B1B1B191919181818161717161616151414
1412121212121212121111110F0F0F0F0E0E0F0F0D0D0D0D0D0C0C0C0C0A0A0A0A0A0A0A0A0A0909
09090908080808080606060707070606060606050505050505050404040404040403030303030303
02020202020202020101010101010101010100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
0
<
DBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDEDFDFDFDFDFDFE0E0E0E0E0E0E0E1E1E1E1
E1E1E1E2E2E2E2E2E2E2E3E3E3E3E3E3E3E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E7
E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEB
ECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0F0F0F0
F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4
F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7
F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
C0C0C1C1C1C1C2C2C2C3C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACA
CBCBCBCCCCCCCCCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4
D4D5D5D5D5D6D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDD
DDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E3E4E4E4E4E4E5
E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEAEBEBEBEBEB
EBEBECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1
F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5
F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9
F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
1F202122232425262728292A2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142424344
45464748494A4B4B4C4D4E4F5051525353545556575859595A5B5C5D5E5F5F606162636464656667
6868696A6B6C6C6D6E6F707071727374747576777778797A7B7B7C7D7E7E7F808181828383848586
86878889898A8B8B8C8D8D8E8F9090919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1
A1A2A3A3A4A5A5A6A6A7A8A8A9A9AAABABACACADAEAEAFAFB0B0B1B2B2B3B3B4B4B5B6B6B7B7B8B8
B9B9BABABBBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCC
CDCDCECECFCFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDD
DDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9E9EAEA
EAEBEBEBEBECECECECEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4
F4F4F4F5F5F5F5F5F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFA
FBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 80.4707 73.8792 %_BS
%_0 0 0 0 1 1 1 2 80.4707 73.8792 Bs
0 0 0 0 1 1 1 2 50 81.6546 %_BS
%_0 0 0 0 1 1 1 2 50 81.6546 Bs
0.167361 0.194247 1 0 0.858824 0.752941 0.121569 2 50 82.3054 %_BS
%_0.167361 0.194247 1 0 0.858824 0.752941 0.121569 2 50 82.3054 Bs
0.07422 0.070222 0.887846 0 0.945098 0.862745 0.227451 2 50 83.0383 %_BS
%_0.07422 0.070222 0.887846 0 0.945098 0.862745 0.227451 2 50 83.0383 Bs
0.059846 0.051484 0.869291 0 0.960784 0.882353 0.247059 2 50 83.5009 %_BS
%_0.059846 0.051484 0.869291 0 0.960784 0.882353 0.247059 2 50 83.5009 Bs
0.167361 0.194247 1 0 0.858824 0.752941 0.121569 2 27.8339 83.8579 %_BS
%_0.167361 0.194247 1 0 0.858824 0.752941 0.121569 2 27.8339 83.8579 Bs
0 0 0 0 1 1 1 2 50 99.929 %_BS
%_0 0 0 0 1 1 1 2 50 99.929 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Orchid)
(Orchid) 0 2 Bd
[
0
0.661372
0.033204
0
1
0.482353
0.67451
4 %_Br
[
0 0.661372 0.033204 0 1 0.482353 0.67451 2 50 100 %_BS
%_0 0.661372 0.033204 0 1 0.482353 0.67451 2 50 100 Bs
0 0.661372 0.033204 0 1 0.482353 0.67451 2 46.3356 0 %_BS
%_0 0.661372 0.033204 0 1 0.482353 0.67451 2 46.3356 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sky)
(Sky) 0 4 Bd
[
<
DDDEDFDFE0E1E2E3E3E3E4E5E6E7E7E7E8E9E9EAEBECECEDEDEEEFEFF0F1F2F2F3F4F4F5F6F6F6
>
<
7F8181828484868787898B8D8D8F91909394949698989A9C9C9E9F9FA1A3A5A5A7A8A8AAACABAD
>
<
0000000000010102040405050707080A0A0A0D0D10121313151617191A1A1B1D1D1F2021222425
>
<
000000000000000000000000000000000000000101010101010101020202020203030304040405
>
0
<
7574747372727170706F6E6D6D6C6B6B6A6969686767666565646363626160605F5E5E5D5C5C5B
>
<
BEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
>
4 %_Br
<
BEBFBFC0C1C2C2C3C3C4C5C6C7C8C8C9CACBCCCCCECFD0D0D1D2D3D4D5D5D6D6D7D9D9DADBDCDD
>
<
3D3E4041434546474A4B4D4E4F51535456585A5C5F6062636567696A6C6E7072747578797B7D7F
>
0
0
<
1E1D1C1C1B1A191818171615151413121111100F0E0D0D0C0B0A09090807060605040302020100
>
<
9C9B9A999897969594939291908F8E8D8C8B8A8887868584838281807F7E7D7C7B7A7978777675
>
<
D7D6D6D5D4D4D3D2D2D1D0D0CFCECECDCCCCCBCACAC9C9C8C7C7C6C5C5C4C3C3C2C1C1C0BFBFBE
>
4 %_Br
<
2E2E2E2F2F2F2F30303031313132323233333434353535363637373838383839393A3A3B3C3C3C3D
3E3E3F3F404041424243434445454646474848494A4A4B4B4C4D4E4F505051525253545455555656
575858595A5A5B5C5D5D5D5E5F60606161626364646566676768696A6A6A6B6C6D6D6E6F6F707071
72737474757677787979797A7C7D7D7D7E7F80818282838485858687878888898A8B8C8C8D8E8F90
9091929393949595969798999A9C9C9D9D9E9E9FA0A1A2A2A3A3A4A4A5A6A7A7A8A9AAAAABABACAC
ADAEAFAFAFB0B0B1B1B2B3B3B4B4B4B5B5B6B7B7B8B8B9B9BABABBBBBBBCBDBDBE
>
<
0E0E0E0D0D0D0F0E0E0E0E0E0D0D0E0E0E0E0D0D0E0E0E0E0E0D0E0E0E0D0D0E0E0E0E0E0F0E0E0E
0E0F0F0F0E100F0F0E10100F0F0F10100F0F100F0F0F1010100F1111101012111111121211121212
11121212121312121313121213131213131312131313141313151414131514141515151616151717
16161717161717171818171818171919181A19181A1A191A1A1A1B1A1A1B1B1B1C1B1B1D1C1C1D1D
1C1E1E1D1F1F1E2020212121232222242423252424252527262628272729282829292A2A2A2B2B2B
2D2C2E2E2E2F2F2F3030323231333333343436363637373738383A3A3A3C3B3D3D
>
0
0
<
CCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBC
BBBBBABAB9B9B8B7B7B6B6B5B4B4B3B3B2B1B1B0AFAFAEAEADACACABAAAAA9A8A8A7A6A6A5A4A3A3
A2A1A1A09F9F9E9D9C9C9B9A99999897979695949493929190908F8E8D8D8C8B8A8A898887868685
8483828281807F7E7D7D7C7B7A7978787776757473737271706F6E6D6D6C6B6A6968676766656463
6261605F5F5E5D5C5B5A59585756565554535251504F4E4D4C4B4B4A494847464544434241403F3E
3D3C3B3A39393837363534333231302F2E2D2C2B2A292827262524232221201F1E
>
<
E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDADADADA
DAD9D9D9D9D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0
D0CFCFCFCFCECECECDCDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C8C7C7C7C6C6C6C5C5C5C4C4
C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBBBABABAB9B9B9B8B8B8B7B7
B7B6B6B6B5B5B5B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACACABABAAAAAAA9A9A9
A8A8A7A7A7A6A6A6A5A5A4A4A4A3A3A3A2A2A1A1A1A0A0A09F9F9E9E9E9D9D9C9C
>
<
F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F1F1
F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEDEDEDED
EDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E8E8E8
E8E8E8E8E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E4E4E4E4E4E4E4E3E3E3E3E3E3E3
E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDDDC
DCDCDCDCDCDBDBDBDBDBDBDADADADADADAD9D9D9D9D9D9D8D8D8D8D8D8D8D7D7D7
>
4 %_Br
[
0.966278 0.678035 0.14435 0.017945 0 0.356863 0.592157 2 50 99.4382 %_BS
%_0.966278 0.678035 0.14435 0.017945 0 0.356863 0.592157 2 50 99.4382 Bs
0.867948 0.4972 0 0 0 0.458824 0.745098 2 50 86.5168 %_BS
%_0.867948 0.4972 0 0 0 0.458824 0.745098 2 50 86.5168 Bs
0.743954 0.237583 0 0 0.117647 0.611765 0.843137 2 50 56.7416 %_BS
%_0.743954 0.237583 0 0 0.117647 0.611765 0.843137 2 50 56.7416 Bs
0.18085 0.053895 0 0 0.8 0.878431 0.956863 2 59.5506 0 %_BS
%_0.18085 0.053895 0 0 0.8 0.878431 0.956863 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Summer)
(Summer) 1 2 Bd
[
0
<
000000000101020203030404040405050606060707080809090A0A0B0B0A0C0C0D0D0E0E10100F11
1112121313131515161617171719181A1A1B1B1B1C1C1D1D1D1F1E20202121212222232323242424
252527272728282929292A2A2B2B2B2D2D2D2E2E2E2F2F3030303131313232323333343434363636
3737373838383939393A3A3A3C3C3C3D3D3D3E3E3E3F3F3F41414042424243434345454545464646
4747474949494A4A4A4A4B4B4B4D4D4D4D4E4E4E4F4F4F4F50505052525252535353535454545455
55555757575758585858595959595B5B5B5B5C5C5C5C5D5D5D5D5D5E5E5E5E606060606161616161
62626262636363636365656565656666666666676767676769696969696A6A6A6A6A6B6B6B6B6B6B
6C6C6B6B6B6B6D6D6D6D6D6F6F6F6F6F6F6F70707070707071717171717171737373737373747474
7474747474757575757575757777777777777777777878787878787878797979797979797979797A
7A7A7A7A7A7A7A7A7A7C7C7C7C7C7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D7D7D7D7D7D7D7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F81818181818181818181818181818181818181818181818181828282
8282828282828282828282828282828282828282828282828282828282828282828282
>
<
00000001010303040506060808090A0B0B0D0E0E10101011121314151618181A1B1C1C1E1E1E2020
21222425262829292A2B2C2E2F30323232333536373839393A3B3C3D3F4040424244454646464849
4A4A4A4C4E4E504F5152535454565758585A5B5C5D5D5E5F61616163656465676767686A6B6A6B6D
6C6E6F707071737375767878797A7A7B7D7D7D7F81808182828385848687878888898B8B8C8D8D8F
9090929494959596989899999B9C9C9D9D9E9F9FA0A0A2A3A2A4A4A5A6A6A8A7A9A9ABAAABACACAD
ADAEAEAFAFB0B0B0B1B1B2B2B4B4B5B5B6B6B7B7B9B9BABABBBBBDBCBEBEBFBFC0C0C0C1C1C2C2C3
C3C4C4C5C5C6C6C6C6C6C7C7C8C8C8C9C9CACACBCBCBCCCCCECECECFCFD0D0D0D1D1D2D2D2D4D4D4
D5D5D6D6D6D6D6D6D7D7D7D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDDDDDDDEDEDEDFDFDFDFE0
E0E0E2E2E2E1E3E3E3E5E5E5E4E6E6E6E6E8E8E8E8E8E8E8E8EAEAEAEAEAEBEBEBEBECECECECECED
EDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F0F0F1F1F0F0F0F0F0
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
>
0
1
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEEEEEEED
EDECECEBEBEBEAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E0E0E0DFDFDEDEDEDDDDDD
DCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1D1D0D0CFCFCFCECECE
CDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C2C2C1C1C1
C0C0C0BFBFBFBEBEBEBEBDBDBDBCBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5
B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0B0B0AFAFAFAFAFAEAEAEAEADADADADACACACACAC
ABABABABAAAAAAAAAAA9A9A9A9A9A8A8A8A8A8A7A7A7A7A7A6A6A6A6A6A5A5A5A5A5A4A4A4A4A4A4
A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A1A0A0A0A0A0A09F9F9F9F9F9F9F9E9E9E9E9E9E9D9D9D
9D9D9D9D9D9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9999999999999999999998
98989898989898989897979797979797979797979796969696969696969696969696969595959595
95959595959595959595959594949494949494949494949494949494949494949494949494939393
9393939393939393939393939393939393939393939393939393939393939393939393
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDA
D9D8D7D6D5D4D3D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBABAB9B8B7
B6B6B5B4B3B2B1B1B0AFAEADADACABAAAAA9A8A7A6A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A9998
9897969595949393929190908F8E8E8D8C8C8B8A898988878786858584838382828180807F7E7E7D
7C7C7B7A7A79797877777676757474737372717170706F6E6E6D6D6C6B6B6A6A6969686867666665
656464636362626160605F5F5E5E5D5D5C5C5B5B5A5A595958585757565655555454545353525251
5150504F4F4E4E4E4D4D4C4C4B4B4B4A4A4949484848474746464645454444444343424242414141
40403F3F3F3E3E3E3D3D3D3C3C3C3B3B3A3A3A393939393838383737373636363535353434343433
333332323232313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2C2B2B2B2B2A2A2A2A2A29
29292929282828282827272727272626262626262525252525252424242424242423232323232323
2222222222222222222121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E
>
4 %_Br
[
0 0 0 0 1 1 1 2 28 0 %_BS
%_0 0 0 0 1 1 1 2 28 0 Bs
0 0.508904 0.959899 0 1 0.576471 0.117647 2 50 100 %_BS
%_0 0.508904 0.959899 0 1 0.576471 0.117647 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0E0F101112131314161718191A1B1C1C1D1F2020212324
252627292A2A2B2D2E2F3032333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658585A5B5D5E6061626364666768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F8081828283848585868787888A8A8B8C8D8E8F8F909192929394959596979898999A9A9B9C9D
9D9E9E9E9FA0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A7A8A8A9AAAAAAABABABACACADADADAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBEBFBFBF
>
<
00000000010102030304040506060708090A0A0B0C0D0E0E0F1010111213131415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343436363738393A3B3C3D3E3F4041
424344454647484A4B4D4E4E4F505253535455565758595A5B5C5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F7071727374757677787879797A7B7C7D7D7E7F8081818283838485868687
8888898A8B8B8C8D8D8E8F8F90909192939394959596969798989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A2A2A2A3A3A3A3A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAABABABABABABABAB
ACACACACACACACACACACADADADADADAD
>
<
00000000010102030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2D2E2E2F30313233343536373838393A3B3C3D3E3F404142
4345454647484A4B4D4E4F4F515253545455565758595A5B5C5D5D5E5F6061626363646566666768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828383848586
8687878788898A8B8B8C8D8E8E8F8F909090919192929394949595959697979899999A9A9B9C9C9D
9D9D9E9E9E9F9FA0A0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A5A5A6A6A6A6A6A7A7A7A7A7A7A7A7A8A8
A8A8A9A9A9A9A9AAAAAAAAAAABABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D6D8D9DADBDCDDDEDFE0E1E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 %_BS
%_0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Alyssa)
(Alyssa) 99.9634 78.4663 244.0933 216.8286 [
%AI3_Tile
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0366 58.3071 m
299.2769 59.6909 291.6675 57.9614 288.3823 55.1938 c
285.3628 52.6509 283.4272 49.7886 286.1343 43.2622 c
289.0737 36.1714 287.6675 28.5298 280.5991 27.3521 c
274.3745 26.3149 269.7046 32.1938 269.3589 39.6304 c
269.1187 44.813 267.4565 47.9312 263.8257 47.2388 c
260.1929 46.5474 259.1968 41.3384 260.1929 35.48 c
261.5776 27.3521 265.728 23.7202 266.4194 15.2466 c
266.9136 9.19189 263.48 1.58447 253.9683 0.20166 c
244.6675 -1.15186 238.0581 4.52393 237.3667 10.7505 c
236.6343 17.3384 240.9976 21.645 240.478 28.3892 c
239.9604 35.1343 236.4663 38.561 234.5991 45.6831 c
231.8315 56.2319 235.8101 64.7056 242.3804 68.3374 c
257.1265 76.4858 265.2124 64.6958 278.3511 66.7817 c
289.2476 68.5103 301.6987 84.939 311.3823 86.3228 c
319.6089 87.4976 325.2163 81.6538 326.4272 72.3149 c
327.6382 62.9761 321.687 57.0532 311.0366 58.3071 c
f
268.8413 57.7886 m
268.8413 60.0806 266.9819 61.939 264.6909 61.939 c
262.3979 61.939 260.5405 60.0806 260.5405 57.7886 c
260.5405 55.4966 262.3979 53.6382 264.6909 53.6382 c
266.9819 53.6382 268.8413 55.4966 268.8413 57.7886 c
f
318.3003 73.1792 m
318.3003 74.1343 317.5249 74.9087 316.5698 74.9087 c
315.6147 74.9087 314.8413 74.1343 314.8413 73.1792 c
314.8413 72.2241 315.6147 71.4497 316.5698 71.4497 c
317.5249 71.4497 318.3003 72.2241 318.3003 73.1792 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
148.7954 77.4946 m
148.7954 70.3286 153.3833 63.6812 147.7954 61.1616 c
139.2954 57.3286 119.7959 75.4946 119.7959 97.3286 c
119.7959 109.3286 128.4634 116.3286 137.6294 116.3286 c
149.9634 116.3286 155.6294 108.1616 155.6294 98.8286 c
155.6294 89.4966 148.7954 85.689 148.7954 77.4946 c
f
143.3872 82.8638 m
143.3872 84.0103 142.4575 84.939 141.313 84.939 c
140.1665 84.939 139.2368 84.0103 139.2368 82.8638 c
139.2368 81.7183 140.1665 80.7886 141.313 80.7886 c
142.4575 80.7886 143.3872 81.7183 143.3872 82.8638 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
223.4946 54.0005 m
215.6235 51.2632 204.0552 69.2974 205.8247 81.019 c
207.0649 89.2466 212.9478 94.2085 218.9126 95.2358 c
226.438 96.5327 231.811 92.6353 232.2114 87.9927 c
232.7583 81.6841 228.5786 80.4751 227.9888 73.0347 c
227.4263 65.8999 231.6802 56.8491 223.4946 54.0005 c
f
219.7056 81.5083 m
219.7056 82.9419 218.5435 84.103 217.1118 84.103 c
215.6782 84.103 214.5181 82.9419 214.5181 81.5083 c
214.5181 80.0757 215.6782 78.9146 217.1118 78.9146 c
218.5435 78.9146 219.7056 80.0757 219.7056 81.5083 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
119.3506 76.4653 m
119.3506 75.0327 118.1885 73.8716 116.7568 73.8716 c
115.3232 73.8716 114.1631 75.0327 114.1631 76.4653 c
114.1631 77.8979 115.3232 79.0591 116.7568 79.0591 c
118.1885 79.0591 119.3506 77.8979 119.3506 76.4653 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
184.5728 84.189 m
185.313 76.0884 197.2446 77.1724 202.4771 69.9751 c
212.9966 55.5005 201.2583 23.6099 180.8462 23.6099 c
169.106 23.6099 156.6294 33.3286 156.6294 52.8286 c
156.6294 68.6626 166.7954 74.3286 164.8794 94.9946 c
163.8735 105.8286 152.3794 115.3374 152.3794 129.7446 c
152.3794 135.6665 155.9653 143.1919 163.9321 143.1919 c
170.9868 143.1919 174.7544 137.2388 174.7544 130.2915 c
174.7544 123.4937 169.3735 114.5513 176.1294 111.2446 c
181.3716 108.6792 189.3403 116.0142 195.6294 117.9946 c
200.8208 119.6304 208.0181 117.77 210.3794 109.4946 c
212.9106 100.6187 207.1274 94.7495 198.7876 92.8013 c
192.4692 91.3247 183.9849 90.6304 184.5728 84.189 c
f
168.5884 114.7476 m
168.5884 116.563 167.1177 118.0347 165.3032 118.0347 c
163.4888 118.0347 162.0161 116.563 162.0161 114.7476 c
162.0161 112.9331 163.4888 111.4624 165.3032 111.4624 c
167.1177 111.4624 168.5884 112.9331 168.5884 114.7476 c
f
194.5728 105.0522 m
195.8579 105.0522 196.9009 106.0952 196.9009 107.3823 c
196.9009 108.6685 195.8579 109.7104 194.5728 109.7104 c
193.2856 109.7104 192.2427 108.6685 192.2427 107.3823 c
192.2427 106.0952 193.2856 105.0522 194.5728 105.0522 c
f
174.5884 45.3804 m
174.5884 47.1958 173.1177 48.6675 171.3013 48.6675 c
169.4868 48.6675 168.0161 47.1958 168.0161 45.3804 c
168.0161 43.5659 169.4868 42.0952 171.3013 42.0952 c
173.1177 42.0952 174.5884 43.5659 174.5884 45.3804 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
166.9067 58.3071 m
155.147 59.6909 147.5376 57.9614 144.2524 55.1938 c
141.2329 52.6509 139.2974 49.7886 142.0044 43.2622 c
144.9438 36.1714 143.5376 28.5298 136.4692 27.3521 c
130.2446 26.3149 125.5747 32.1938 125.229 39.6304 c
124.9888 44.813 123.3271 47.9312 119.6963 47.2388 c
116.0635 46.5474 115.0674 41.3384 116.0635 35.48 c
117.4482 27.3521 121.5986 23.7202 122.29 15.2466 c
122.7842 9.19189 119.3506 1.58447 109.8389 0.20166 c
100.5381 -1.15186 93.9287 4.52393 93.2373 10.7505 c
92.5049 17.3384 96.8682 21.645 96.3486 28.3892 c
95.8311 35.1343 92.3369 38.561 90.4697 45.6831 c
87.7021 56.2319 91.6807 64.7056 98.251 68.3374 c
112.9971 76.4858 121.083 64.6958 134.2212 66.7817 c
145.1177 68.5103 157.5688 84.939 167.2524 86.3228 c
175.479 87.4976 181.0864 81.6538 182.2974 72.3149 c
183.5083 62.9761 177.5571 57.0532 166.9067 58.3071 c
f
124.7114 57.7886 m
124.7114 60.0806 122.8525 61.939 120.5615 61.939 c
118.2686 61.939 116.4111 60.0806 116.4111 57.7886 c
116.4111 55.4966 118.2686 53.6382 120.5615 53.6382 c
122.8525 53.6382 124.7114 55.4966 124.7114 57.7886 c
f
174.1704 73.1792 m
174.1704 74.1343 173.395 74.9087 172.4399 74.9087 c
171.4849 74.9087 170.7114 74.1343 170.7114 73.1792 c
170.7114 72.2241 171.4849 71.4497 172.4399 71.4497 c
173.395 71.4497 174.1704 72.2241 174.1704 73.1792 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
290.2847 104.8413 m
290.2847 98.6147 286.1343 94.1206 281.6382 93.2554 c
277.1421 92.3901 273.3198 94.5366 268.6675 92.0444 c
263.8257 89.4507 261.5776 80.9761 251.8921 80.9761 c
243.937 80.9761 236.6753 88.9312 236.6753 99.8257 c
236.6753 120.0601 249.8179 129.0522 262.269 129.0522 c
278.8706 129.0522 290.2847 116.4272 290.2847 104.8413 c
f
270.5698 119.1948 m
270.5698 121.2944 268.8667 122.9976 266.7651 122.9976 c
264.6636 122.9976 262.9604 121.2944 262.9604 119.1948 c
262.9604 117.0933 264.6636 115.3901 266.7651 115.3901 c
268.8667 115.3901 270.5698 117.0933 270.5698 119.1948 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0366 196.6694 m
299.2769 198.0532 291.6675 196.3237 288.3823 193.5562 c
285.3628 191.0132 283.4272 188.1509 286.1343 181.6245 c
289.0737 174.5337 287.6675 166.8921 280.5991 165.7144 c
274.3745 164.6772 269.7046 170.5562 269.3589 177.9927 c
269.1187 183.1753 267.4565 186.2935 263.8257 185.6011 c
260.1929 184.9097 259.1968 179.7007 260.1929 173.8423 c
261.5776 165.7144 265.728 162.0825 266.4194 153.6089 c
266.9136 147.5542 263.48 139.9468 253.9683 138.564 c
244.6675 137.2104 238.0581 142.8862 237.3667 149.1128 c
236.6343 155.7007 240.9976 160.0073 240.478 166.7515 c
239.9604 173.4966 236.4663 176.9233 234.5991 184.0454 c
231.8315 194.5942 235.8101 203.0679 242.3804 206.6997 c
257.1265 214.8481 265.2124 203.0581 278.3511 205.144 c
289.2476 206.8726 301.6987 223.3013 311.3823 224.6851 c
319.6089 225.8599 325.2163 220.0161 326.4272 210.6772 c
327.6382 201.3384 321.687 195.4155 311.0366 196.6694 c
f
268.8413 196.1509 m
268.8413 198.4429 266.9819 200.3013 264.6909 200.3013 c
262.3979 200.3013 260.5405 198.4429 260.5405 196.1509 c
260.5405 193.8589 262.3979 192.0005 264.6909 192.0005 c
266.9819 192.0005 268.8413 193.8589 268.8413 196.1509 c
f
318.3003 211.5415 m
318.3003 212.4966 317.5249 213.271 316.5698 213.271 c
315.6147 213.271 314.8413 212.4966 314.8413 211.5415 c
314.8413 210.5864 315.6147 209.812 316.5698 209.812 c
317.5249 209.812 318.3003 210.5864 318.3003 211.5415 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
131.7954 133.1909 m
117.8389 131.2026 110.6299 146.5229 114.1299 153.5229 c
117.7959 160.8569 126.2485 157.6909 133.6294 157.6909 c
143.2954 157.6909 149.9966 165.2593 154.0454 159.9409 c
158.2954 154.3569 149.0356 135.646 131.7954 133.1909 c
f
132.3188 150.6694 m
132.3188 151.9097 131.313 152.9175 130.0708 152.9175 c
128.8306 152.9175 127.8228 151.9097 127.8228 150.6694 c
127.8228 149.4272 128.8306 148.4214 130.0708 148.4214 c
131.313 148.4214 132.3188 149.4272 132.3188 150.6694 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
148.7954 215.8569 m
148.7954 208.6909 153.3833 202.0435 147.7954 199.5239 c
139.2954 195.6909 119.7959 213.8569 119.7959 235.6909 c
119.7959 247.6909 128.4634 254.6909 137.6294 254.6909 c
149.9634 254.6909 155.6294 246.5239 155.6294 237.1909 c
155.6294 227.8589 148.7954 224.0513 148.7954 215.8569 c
f
143.3872 221.2261 m
143.3872 222.3726 142.4575 223.3013 141.313 223.3013 c
140.1665 223.3013 139.2368 222.3726 139.2368 221.2261 c
139.2368 220.0806 140.1665 219.1509 141.313 219.1509 c
142.4575 219.1509 143.3872 220.0806 143.3872 221.2261 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
146.1548 104.8413 m
146.1548 98.6147 142.0044 94.1206 137.5083 93.2554 c
133.0122 92.3901 129.1899 94.5366 124.5376 92.0444 c
119.6963 89.4507 117.4482 80.9761 107.7627 80.9761 c
99.8076 80.9761 92.5459 88.9312 92.5459 99.8257 c
92.5459 120.0601 105.6885 129.0522 118.1396 129.0522 c
134.7407 129.0522 146.1548 116.4272 146.1548 104.8413 c
f
126.4399 119.1948 m
126.4399 121.2944 124.7368 122.9976 122.6357 122.9976 c
120.5342 122.9976 118.8311 121.2944 118.8311 119.1948 c
118.8311 117.0933 120.5342 115.3901 122.6357 115.3901 c
124.7368 115.3901 126.4399 117.0933 126.4399 119.1948 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
145.4634 128.5327 m
145.4634 127.1968 144.3794 126.1128 143.0415 126.1128 c
141.7056 126.1128 140.6216 127.1968 140.6216 128.5327 c
140.6216 129.8706 141.7056 130.9546 143.0415 130.9546 c
144.3794 130.9546 145.4634 129.8706 145.4634 128.5327 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
229.1626 147.0366 m
225.9712 142.3569 230.2017 136.3159 227.7798 131.8198 c
225.3579 127.3218 221.0356 126.8042 217.9224 129.2241 c
214.2876 132.0522 214.5122 135.8667 209.6216 138.0444 c
204.0923 140.5093 191.6372 135.7964 189.9067 145.3081 c
189.0317 150.1187 192.2817 153.8745 197.1704 154.9917 c
203.2231 156.3745 206.522 155.1714 212.561 158.105 c
218.6138 161.0444 223.8032 167.0981 234.6978 170.2104 c
245.104 173.1851 250.77 168.6538 251.2993 164.3315 c
252.3364 155.8569 234.1724 154.3823 229.1626 147.0366 c
f
226.9146 154.4741 m
226.9146 155.7144 225.9087 156.7222 224.6665 156.7222 c
223.4263 156.7222 222.4185 155.7144 222.4185 154.4741 c
222.4185 153.2319 223.4263 152.2261 224.6665 152.2261 c
225.9087 152.2261 226.9146 153.2319 226.9146 154.4741 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
256.1294 107.8569 m
256.1294 90.6909 241.6294 82.3569 229.1294 85.0249 c
218.8657 87.2144 216.2954 102.3569 212.4614 111.1909 c
208.7485 119.7476 203.6294 133.6909 192.2954 133.6909 c
181.0981 133.6909 179.4634 119.1909 168.6294 119.1909 c
157.6294 119.1909 144.1294 134.8569 144.1294 158.8569 c
144.1294 173.5239 153.9282 190.312 164.9634 189.5239 c
176.6294 188.6909 169.4634 169.8569 180.2954 169.8569 c
189.7954 169.8569 188.1528 186.1157 189.4634 193.1909 c
191.1294 202.1909 196.2954 207.3569 207.9614 206.3569 c
222.4048 205.1196 230.2954 192.8569 226.8325 183.0132 c
222.8032 171.562 202.9634 165.6909 205.2954 152.5229 c
206.6411 144.9312 218.2954 140.5249 231.2954 136.3569 c
245.8247 131.7007 256.1294 125.0249 256.1294 107.8569 c
f
211.1782 183.6997 m
211.1782 181.8843 212.6489 180.4136 214.4634 180.4136 c
216.2778 180.4136 217.7505 181.8843 217.7505 183.6997 c
217.7505 185.5151 216.2778 186.9858 214.4634 186.9858 c
212.6489 186.9858 211.1782 185.5151 211.1782 183.6997 c
f
164.4849 158.7964 m
164.4849 159.7515 163.7114 160.5269 162.7563 160.5269 c
161.8013 160.5269 161.0259 159.7515 161.0259 158.7964 c
161.0259 157.8413 161.8013 157.0679 162.7563 157.0679 c
163.7114 157.0679 164.4849 157.8413 164.4849 158.7964 c
f
181.9517 148.0757 m
181.9517 150.1772 180.2485 151.8804 178.147 151.8804 c
176.0474 151.8804 174.3423 150.1772 174.3423 148.0757 c
174.3423 145.9741 176.0474 144.271 178.147 144.271 c
180.2485 144.271 181.9517 145.9741 181.9517 148.0757 c
f
201.8403 163.6392 m
201.8403 164.4985 201.1431 165.1948 200.2837 165.1948 c
199.4243 165.1948 198.7271 164.4985 198.7271 163.6392 c
198.7271 162.7798 199.4243 162.0835 200.2837 162.0835 c
201.1431 162.0835 201.8403 162.7798 201.8403 163.6392 c
f
231.4829 108.9448 m
231.4829 110.6968 230.063 112.1187 228.3091 112.1187 c
226.5571 112.1187 225.1353 110.6968 225.1353 108.9448 c
225.1353 107.1909 226.5571 105.771 228.3091 105.771 c
230.063 105.771 231.4829 107.1909 231.4829 108.9448 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
223.4946 192.3628 m
215.6235 189.6255 204.0552 207.6597 205.8247 219.3813 c
207.0649 227.6089 212.9478 232.5708 218.9126 233.5981 c
226.438 234.895 231.811 230.9976 232.2114 226.355 c
232.7583 220.0464 228.5786 218.8374 227.9888 211.397 c
227.4263 204.2622 231.6802 195.2114 223.4946 192.3628 c
f
219.7056 219.8706 m
219.7056 221.3042 218.5435 222.4653 217.1118 222.4653 c
215.6782 222.4653 214.5181 221.3042 214.5181 219.8706 c
214.5181 218.438 215.6782 217.2769 217.1118 217.2769 c
218.5435 217.2769 219.7056 218.438 219.7056 219.8706 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
119.3506 214.8276 m
119.3506 213.395 118.1885 212.2339 116.7568 212.2339 c
115.3232 212.2339 114.1631 213.395 114.1631 214.8276 c
114.1631 216.2603 115.3232 217.4214 116.7568 217.4214 c
118.1885 217.4214 119.3506 216.2603 119.3506 214.8276 c
f
253.3481 128.0913 m
253.3481 136.5015 248.27 143.3179 242.0083 143.3179 c
235.7466 143.3179 230.6685 136.5015 230.6685 128.0913 c
230.6685 119.6831 235.7466 115.6499 242.0083 115.6499 c
248.27 115.6499 253.3481 119.6831 253.3481 128.0913 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
184.5728 222.5513 m
185.313 214.4507 197.2446 215.5347 202.4771 208.3374 c
212.9966 193.8628 201.2583 161.9722 180.8462 161.9722 c
169.106 161.9722 156.6294 171.6909 156.6294 191.1909 c
156.6294 207.0249 166.7954 212.6909 164.8794 233.3569 c
163.8735 244.1909 152.3794 253.6997 152.3794 268.1069 c
152.3794 274.0288 155.9653 281.5542 163.9321 281.5542 c
170.9868 281.5542 174.7544 275.6011 174.7544 268.6538 c
174.7544 261.856 169.3735 252.9136 176.1294 249.6069 c
181.3716 247.0415 189.3403 254.3765 195.6294 256.3569 c
200.8208 257.9927 208.0181 256.1323 210.3794 247.8569 c
212.9106 238.981 207.1274 233.1118 198.7876 231.1636 c
192.4692 229.687 183.9849 228.9927 184.5728 222.5513 c
f
168.5884 253.1099 m
168.5884 254.9253 167.1177 256.397 165.3032 256.397 c
163.4888 256.397 162.0161 254.9253 162.0161 253.1099 c
162.0161 251.2954 163.4888 249.8247 165.3032 249.8247 c
167.1177 249.8247 168.5884 251.2954 168.5884 253.1099 c
f
194.5728 243.4146 m
195.8579 243.4146 196.9009 244.4575 196.9009 245.7446 c
196.9009 247.0308 195.8579 248.0728 194.5728 248.0728 c
193.2856 248.0728 192.2427 247.0308 192.2427 245.7446 c
192.2427 244.4575 193.2856 243.4146 194.5728 243.4146 c
f
174.5884 183.7427 m
174.5884 185.5581 173.1177 187.0298 171.3013 187.0298 c
169.4868 187.0298 168.0161 185.5581 168.0161 183.7427 c
168.0161 181.9282 169.4868 180.4575 171.3013 180.4575 c
173.1177 180.4575 174.5884 181.9282 174.5884 183.7427 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
166.9067 196.6694 m
155.147 198.0532 147.5376 196.3237 144.2524 193.5562 c
141.2329 191.0132 139.2974 188.1509 142.0044 181.6245 c
144.9438 174.5337 143.5376 166.8921 136.4692 165.7144 c
130.2446 164.6772 125.5747 170.5562 125.229 177.9927 c
124.9888 183.1753 123.3271 186.2935 119.6963 185.6011 c
116.0635 184.9097 115.0674 179.7007 116.0635 173.8423 c
117.4482 165.7144 121.5986 162.0825 122.29 153.6089 c
122.7842 147.5542 119.3506 139.9468 109.8389 138.564 c
100.5381 137.2104 93.9287 142.8862 93.2373 149.1128 c
92.5049 155.7007 96.8682 160.0073 96.3486 166.7515 c
95.8311 173.4966 92.3369 176.9233 90.4697 184.0454 c
87.7021 194.5942 91.6807 203.0679 98.251 206.6997 c
112.9971 214.8481 121.083 203.0581 134.2212 205.144 c
145.1177 206.8726 157.5688 223.3013 167.2524 224.6851 c
175.479 225.8599 181.0864 220.0161 182.2974 210.6772 c
183.5083 201.3384 177.5571 195.4155 166.9067 196.6694 c
f
124.7114 196.1509 m
124.7114 198.4429 122.8525 200.3013 120.5615 200.3013 c
118.2686 200.3013 116.4111 198.4429 116.4111 196.1509 c
116.4111 193.8589 118.2686 192.0005 120.5615 192.0005 c
122.8525 192.0005 124.7114 193.8589 124.7114 196.1509 c
f
174.1704 211.5415 m
174.1704 212.4966 173.395 213.271 172.4399 213.271 c
171.4849 213.271 170.7114 212.4966 170.7114 211.5415 c
170.7114 210.5864 171.4849 209.812 172.4399 209.812 c
173.395 209.812 174.1704 210.5864 174.1704 211.5415 c
f
*U
230.2017 174.3608 m
230.2017 173.5972 229.5825 172.9771 228.8169 172.9771 c
228.0532 172.9771 227.4341 173.5972 227.4341 174.3608 c
227.4341 175.1245 228.0532 175.7446 228.8169 175.7446 c
229.5825 175.7446 230.2017 175.1245 230.2017 174.3608 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
235.7349 212.7524 m
235.7349 211.5103 234.729 210.5034 233.4868 210.5034 c
232.2446 210.5034 231.2368 211.5103 231.2368 212.7524 c
231.2368 213.9946 232.2446 215.0015 233.4868 215.0015 c
234.729 215.0015 235.7349 213.9946 235.7349 212.7524 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
152.2075 189.5796 m
152.2075 188.9116 151.6646 188.3687 150.9966 188.3687 c
150.3286 188.3687 149.7856 188.9116 149.7856 189.5796 c
149.7856 190.2476 150.3286 190.7905 150.9966 190.7905 c
151.6646 190.7905 152.2075 190.2476 152.2075 189.5796 c
f
148.5747 121.0972 m
148.5747 120.3335 147.9556 119.7124 147.1919 119.7124 c
146.4282 119.7124 145.8091 120.3335 145.8091 121.0972 c
145.8091 121.8608 146.4282 122.48 147.1919 122.48 c
147.9556 122.48 148.5747 121.8608 148.5747 121.0972 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
233.1411 143.0601 m
233.1411 142.3921 232.5981 141.8491 231.9302 141.8491 c
231.2622 141.8491 230.7212 142.3921 230.7212 143.0601 c
230.7212 143.728 231.2622 144.269 231.9302 144.269 c
232.5981 144.269 233.1411 143.728 233.1411 143.0601 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
195.8521 125.1343 m
195.8521 123.2534 194.3247 121.7261 192.4438 121.7261 c
190.561 121.7261 189.0356 123.2534 189.0356 125.1343 c
189.0356 127.0171 190.561 128.5425 192.4438 128.5425 c
194.3247 128.5425 195.8521 127.0171 195.8521 125.1343 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
200.8325 85.2827 m
200.8325 84.1245 199.8931 83.187 198.7349 83.187 c
197.5767 83.187 196.6392 84.1245 196.6392 85.2827 c
196.6392 86.4409 197.5767 87.3804 198.7349 87.3804 c
199.8931 87.3804 200.8325 86.4409 200.8325 85.2827 c
f
162.0298 91.5757 m
162.0298 90.7065 161.3267 90.0034 160.4575 90.0034 c
159.5884 90.0034 158.8833 90.7065 158.8833 91.5757 c
158.8833 92.4448 159.5884 93.1499 160.4575 93.1499 c
161.3267 93.1499 162.0298 92.4448 162.0298 91.5757 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 Xa
 0.247501 0.000855 0.646998 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
235.7017 205.6235 m
235.7017 204.1763 234.5278 203.0024 233.0806 203.0024 c
231.6333 203.0024 230.4595 204.1763 230.4595 205.6235 c
230.4595 207.0708 231.6333 208.2446 233.0806 208.2446 c
234.5278 208.2446 235.7017 207.0708 235.7017 205.6235 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
225.4771 170.7544 m
225.4771 169.4517 224.4204 168.395 223.1177 168.395 c
221.8149 168.395 220.7583 169.4517 220.7583 170.7544 c
220.7583 172.0571 221.8149 173.1138 223.1177 173.1138 c
224.4204 173.1138 225.4771 172.0571 225.4771 170.7544 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
127.686 164.1997 m
127.686 162.7515 126.5122 161.5776 125.063 161.5776 c
123.6162 161.5776 122.4424 162.7515 122.4424 164.1997 c
122.4424 165.6479 123.6162 166.8218 125.063 166.8218 c
126.5122 166.8218 127.686 165.6479 127.686 164.1997 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
122.7041 171.2788 m
122.7041 170.5552 122.1182 169.9683 121.3936 169.9683 c
120.6709 169.9683 120.083 170.5552 120.083 171.2788 c
120.083 172.0024 120.6709 172.5894 121.3936 172.5894 c
122.1182 172.5894 122.7041 172.0024 122.7041 171.2788 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
186.938 119.3667 m
186.938 118.4976 186.2329 117.7944 185.3638 117.7944 c
184.4946 117.7944 183.7915 118.4976 183.7915 119.3667 c
183.7915 120.2358 184.4946 120.9409 185.3638 120.9409 c
186.2329 120.9409 186.938 120.2358 186.938 119.3667 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 Xa
 0.330419 0.068849 0.056825 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
85.0332 147.0366 m
81.8418 142.3569 86.0723 136.3159 83.6504 131.8198 c
81.2285 127.3218 76.9063 126.8042 73.793 129.2241 c
70.1582 132.0522 70.3828 135.8667 65.4922 138.0444 c
59.9629 140.5093 47.5078 135.7964 45.7773 145.3081 c
44.9023 150.1187 48.1523 153.8745 53.041 154.9917 c
59.0938 156.3745 62.3926 155.1714 68.4316 158.105 c
74.4844 161.0444 79.6738 167.0981 90.5684 170.2104 c
100.9746 173.1851 106.6406 168.6538 107.1699 164.3315 c
108.207 155.8569 90.043 154.3823 85.0332 147.0366 c
f
82.7852 154.4741 m
82.7852 155.7144 81.7793 156.7222 80.5371 156.7222 c
79.2969 156.7222 78.2891 155.7144 78.2891 154.4741 c
78.2891 153.2319 79.2969 152.2261 80.5371 152.2261 c
81.7793 152.2261 82.7852 153.2319 82.7852 154.4741 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 Xa
 0.086152 0.09659 0.307866 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
112 107.8569 m
112 90.6909 97.5 82.3569 85 85.0249 c
74.7363 87.2144 72.166 102.3569 68.332 111.1909 c
64.6191 119.7476 59.5 133.6909 48.166 133.6909 c
36.9688 133.6909 35.334 119.1909 24.5 119.1909 c
13.5 119.1909 0 134.8569 0 158.8569 c
0 173.5239 9.79883 190.312 20.834 189.5239 c
32.5 188.6909 25.334 169.8569 36.166 169.8569 c
45.666 169.8569 44.0234 186.1157 45.334 193.1909 c
47 202.1909 52.166 207.3569 63.832 206.3569 c
78.2754 205.1196 86.166 192.8569 82.7031 183.0132 c
78.6738 171.562 58.834 165.6909 61.166 152.5229 c
62.5117 144.9312 74.166 140.5249 87.166 136.3569 c
101.6953 131.7007 112 125.0249 112 107.8569 c
f
67.0488 183.6997 m
67.0488 181.8843 68.5195 180.4136 70.334 180.4136 c
72.1484 180.4136 73.6211 181.8843 73.6211 183.6997 c
73.6211 185.5151 72.1484 186.9858 70.334 186.9858 c
68.5195 186.9858 67.0488 185.5151 67.0488 183.6997 c
f
20.3555 158.7964 m
20.3555 159.7515 19.582 160.5269 18.627 160.5269 c
17.6719 160.5269 16.8965 159.7515 16.8965 158.7964 c
16.8965 157.8413 17.6719 157.0679 18.627 157.0679 c
19.582 157.0679 20.3555 157.8413 20.3555 158.7964 c
f
37.8223 148.0757 m
37.8223 150.1772 36.1191 151.8804 34.0176 151.8804 c
31.918 151.8804 30.2129 150.1772 30.2129 148.0757 c
30.2129 145.9741 31.918 144.271 34.0176 144.271 c
36.1191 144.271 37.8223 145.9741 37.8223 148.0757 c
f
57.7109 163.6392 m
57.7109 164.4985 57.0137 165.1948 56.1543 165.1948 c
55.2949 165.1948 54.5977 164.4985 54.5977 163.6392 c
54.5977 162.7798 55.2949 162.0835 56.1543 162.0835 c
57.0137 162.0835 57.7109 162.7798 57.7109 163.6392 c
f
87.3535 108.9448 m
87.3535 110.6968 85.9336 112.1187 84.1797 112.1187 c
82.4277 112.1187 81.0059 110.6968 81.0059 108.9448 c
81.0059 107.1909 82.4277 105.771 84.1797 105.771 c
85.9336 105.771 87.3535 107.1909 87.3535 108.9448 c
f
*U
109.2188 128.0913 m
109.2188 136.5015 104.1406 143.3179 97.8789 143.3179 c
91.6172 143.3179 86.5391 136.5015 86.5391 128.0913 c
86.5391 119.6831 91.6172 115.6499 97.8789 115.6499 c
104.1406 115.6499 109.2188 119.6831 109.2188 128.0913 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jive)
(Jive) 47.561 109.6396 155.8989 219.2813 [
%AI3_Tile
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0347 74.9453 m
135.0562 75.0645 135.1597 75.1504 135.2808 75.1523 c
148.188 75.2871 160.0347 78.4199 169.2515 86.667 C
161.2222 81.1094 146.3101 79.1563 137.7251 83.0488 c
137.6147 83.0986 137.5562 83.2188 137.5835 83.3369 c
137.6099 83.4551 137.7163 83.5371 137.8374 83.5332 c
148.5181 83.2441 157.1167 86.54 163.8218 92.498 C
156.9526 92.9199 151.2476 97.2383 151.2651 102.3428 c
151.2651 102.4619 151.3491 102.5645 151.4663 102.5898 c
151.5815 102.6152 151.7007 102.5547 151.7495 102.4463 c
152.8706 99.957 156.4976 98.666 160.3315 99.5664 c
164.5112 100.5469 167.3315 103.7559 166.6323 106.7314 c
166.1616 108.7461 164.1968 110.1348 161.6812 110.5186 c
161.5542 110.5371 161.4604 110.6484 161.4644 110.7764 c
161.4683 110.9043 161.5659 111.0098 161.6948 111.0215 c
162.7632 111.124 163.8745 111.1279 165.0112 111.0195 c
171.5015 110.4023 176.5249 106.4238 176.9604 101.8418 C
181.6733 102.3887 185.8452 104.998 187.3394 108.6152 c
187.3843 108.7236 187.4995 108.7871 187.6147 108.7695 c
187.73 108.75 187.8179 108.6553 187.8276 108.5391 c
188.2046 103.7871 186.5698 100.7002 182.8569 97.6846 C
188.2417 99.7441 194.3022 99.8496 200.1128 97.1465 c
200.2183 97.0977 200.2769 96.9824 200.2554 96.8672 c
200.2319 96.752 200.1323 96.668 200.0151 96.6641 c
195.1362 96.4736 191.5991 94.9082 188.2847 91.5918 C
206.5386 96.7256 221.3706 85.3906 216.2378 68.5391 c
216.2026 68.4238 216.0913 68.3486 215.9702 68.3613 c
215.8491 68.373 215.7534 68.4688 215.7437 68.5898 c
214.8257 78.3037 208.0405 84.7051 197.8823 85.666 C
203.269 83.6055 208.8823 78.6895 209.439 70.1318 c
209.4468 70.0098 209.3667 69.8984 209.2476 69.8691 c
209.1284 69.8398 209.0054 69.8984 208.9546 70.0098 c
206.1558 76.1641 200.6577 79.2754 194.7944 79.8223 C
201.1284 77.2422 205.1909 71.2207 206.3647 63.4023 c
206.3843 63.2793 206.3101 63.1602 206.1909 63.123 c
206.0737 63.084 205.9448 63.1387 205.8882 63.248 c
202.0229 70.8311 193.7319 76.042 183.4409 72.0605 c
172.8237 67.9512 168.1675 55.6738 167.1382 47.0195 c
167.1226 46.8984 167.0229 46.8047 166.8999 46.7969 c
166.7769 46.7891 166.6675 46.8711 166.6382 46.9922 c
162.9194 62.6797 170.2222 78.9414 183.2749 85.832 C
176.1792 83.8291 169.8354 79.5723 166.2476 72.4775 C
157.9546 71.459 152.2437 68.6152 149.3911 63.2383 c
149.3345 63.1309 149.2114 63.0781 149.0962 63.1133 c
148.981 63.1465 148.9048 63.2578 148.9146 63.3789 c
149.0962 65.4883 149.855 69.709 152.9878 71.6494 C
146.0229 71.6387 140.4819 72.543 135.189 74.6621 c
135.0776 74.708 135.0122 74.8262 135.0347 74.9453 c
f
164.521 21.4746 m
164.4214 21.541 164.2925 21.5293 164.2046 21.4492 c
164.1187 21.3672 164.1011 21.2383 164.1597 21.1367 c
165.7788 18.3398 164.3003 14.3223 161.1089 14.3223 c
155.3882 14.3223 152.6382 25.0918 153.5132 34.916 C
155.6753 29.1602 157.5464 26.8613 160.8608 24.1211 c
160.9546 24.043 161.0894 24.043 161.1831 24.1191 c
161.2769 24.1973 161.3042 24.3281 161.2456 24.4355 c
156.3901 33.5156 155.3491 40.502 155.3491 48.5215 C
156.812 42.5625 158.5444 39.1992 163.4761 34.1406 c
163.562 34.0527 163.6987 34.0391 163.8003 34.1074 c
163.9019 34.1777 163.939 34.3105 163.8882 34.4238 c
158.5894 46.0137 158.9937 58.8711 162.9409 68.6875 c
162.98 68.7852 162.9546 68.8965 162.8784 68.9688 c
162.8003 69.0391 162.689 69.0566 162.5933 69.0098 c
157.3882 66.459 154.3296 64.7832 149.8413 58.6211 C
151.1987 51.2227 150.0698 47.5723 146.6694 41.4258 C
150.6069 51.3438 148.5122 65.3203 138.4819 71.0176 c
138.3726 71.0791 138.2339 71.0518 138.1577 70.9531 c
138.0796 70.8535 138.0864 70.7119 138.1733 70.6211 c
141.9546 66.666 144.7046 59.9863 142.3296 52.6934 C
143.8589 63.082 134.7339 71.8086 124.5503 71.8086 c
114.9507 71.8086 108.3999 64.2988 108.9409 56.8672 c
109.478 49.502 114.3843 45.8984 118.6128 44.3691 c
118.7241 44.3301 118.8491 44.3711 118.9126 44.4707 c
118.9761 44.5723 118.9624 44.7012 118.8794 44.7871 c
113.269 50.4785 112.5015 61.2793 122.4624 64.5469 C
116.603 59.4902 118.7729 47.7168 128.1519 46.8223 c
128.269 46.8105 128.3784 46.8809 128.4165 46.9922 c
128.4546 47.1035 128.4116 47.2266 128.313 47.2891 c
126.3042 48.5664 124.6343 51.0605 124.6343 53.8633 c
124.6343 58.5371 128.0562 60.373 130.3101 60.373 c
133.7319 60.373 136.5698 57.1172 136.5698 52.1934 c
136.5698 46.3496 131.3101 41.5098 124.5503 40.7578 c
117.9243 40.0234 111.7681 42.9121 108.8003 47.2168 c
108.731 47.3184 108.5991 47.3555 108.4868 47.3047 c
108.3745 47.2539 108.3159 47.1289 108.3462 47.0098 c
111.3647 35.3066 125.1421 30.1328 135.2339 37.5039 C
128.6206 30.002 118.228 29.8984 109.5122 37.5898 c
109.4214 37.6699 109.2866 37.6738 109.1899 37.5996 c
109.0933 37.5273 109.063 37.3945 109.1167 37.2871 c
111.7837 31.8789 118.3696 25.4668 127.7222 26.4023 c
136.2788 27.2578 141.2437 35.416 142.2456 42.0938 C
142.8022 33.5723 140.8521 27.5566 133.4917 21.9473 c
133.395 21.873 133.3647 21.7402 133.4194 21.6309 c
133.4741 21.5234 133.5991 21.4688 133.7163 21.502 c
140.5015 23.4629 145.9468 26.9277 148.7661 34.0469 C
148.7661 27.8848 146.6265 21.6738 141.2397 17.5352 c
141.1421 17.4609 141.1128 17.3301 141.1675 17.2207 c
141.2222 17.1113 141.3462 17.0566 141.4634 17.0898 c
144.9165 18.0742 147.6353 19.5781 149.6021 22.2754 C
150.9116 11.1758 156.1226 4.58398 162.1265 4.58398 c
166.2515 4.58398 169.3315 7.61719 169.3315 12.4551 c
169.3315 15.2852 167.8433 19.2578 164.521 21.4746 c
f
263.7485 113.0938 m
260.5864 116.998 254.2085 118.4863 247.3159 117.082 C
247.8257 121.3828 246.9819 125.873 245.7046 128.5664 c
245.6519 128.6758 245.5308 128.7334 245.4136 128.7051 c
245.2964 128.6758 245.2163 128.5684 245.2202 128.4473 c
245.5952 119.6807 240.5972 112.6035 231.771 109.5371 C
238.6772 114.293 240.6968 123.7305 237.4097 128.6035 c
237.3413 128.7021 237.2144 128.7412 237.103 128.6953 c
236.9917 128.6504 236.9272 128.5332 236.9487 128.416 c
237.3218 126.3555 236.3433 123.7314 234.2358 121.6895 c
231.3296 118.875 227.3862 118.2363 225.4253 120.2598 c
223.4644 122.2852 224.228 126.207 227.1323 129.0215 c
228.1929 130.0488 229.3921 130.7832 230.5815 131.2061 c
230.6948 131.2461 230.7632 131.3594 230.7476 131.4775 c
230.7339 131.5967 230.6382 131.6885 230.519 131.6982 c
224.1304 132.2529 219.7495 128.4463 217.0034 123.8203 c
214.2085 119.1152 209.4331 115.4102 203.7925 116.1504 c
203.6733 116.166 203.5601 116.0957 203.519 115.9824 c
203.48 115.8691 203.5249 115.7422 203.6284 115.6807 c
206.4253 113.9961 209.4995 113.2969 213.4917 114.6289 C
207.6968 109.7197 199.4448 106.8867 191.6519 109.4014 c
191.5425 109.4375 191.4233 109.3945 191.3608 109.2979 c
191.2983 109.2012 191.3101 109.0752 191.3862 108.9902 c
197.2944 102.4258 209.0757 102.2949 216.4956 107.6172 C
213.4585 103.3008 209.4272 100.1328 202.2026 99.1387 c
202.0874 99.123 201.9976 99.0313 201.9839 98.916 c
201.9722 98.7998 202.0386 98.6904 202.1479 98.6504 c
210.439 95.5723 218.7476 98.6953 225.5933 106.8652 C
222.6011 100.4883 217.687 95.3809 210.8257 92.8535 c
210.7104 92.8115 210.6421 92.6934 210.6636 92.5742 c
210.6831 92.4531 210.7866 92.3643 210.9077 92.3613 c
214.8511 92.2803 218.394 93.2188 223.1733 95.9316 C
219.6655 90.2422 220.4331 80.293 225.5425 73.6738 c
225.6128 73.582 225.7378 73.5498 225.8452 73.5957 c
225.9507 73.6426 226.0132 73.7549 225.9937 73.8691 c
224.814 81.0703 227.2925 89.1992 231.603 93.5117 C
229.4507 85.8799 231.5972 78.9355 237.4995 73.8672 c
237.5698 73.8066 237.6694 73.79 237.7554 73.8232 c
237.8433 73.8564 237.9038 73.9355 237.9175 74.0273 c
239.1519 83.4453 249.687 93.002 258.52 93.8027 c
258.645 93.8135 258.7427 93.9141 258.7505 94.0381 c
258.7583 94.1621 258.6763 94.2754 258.5532 94.3027 c
254.2729 95.2715 249.8608 94.793 246.1636 93.2715 C
248.8237 96.2051 252.103 98.3828 255.7192 99.5176 c
255.8364 99.5537 255.9087 99.668 255.895 99.7891 c
255.8813 99.9102 255.7817 100.0039 255.6606 100.0127 c
251.1499 100.3242 246.7358 99.0068 242.9292 96.4746 C
247.2905 103.0957 253.9097 108.0195 262.3579 109.9805 c
262.479 110.0088 262.561 110.1191 262.5552 110.2432 c
262.5474 110.3672 262.4517 110.4668 262.3286 110.4805 c
250.4097 111.7822 240.5815 107.1621 234.1069 98.5625 C
235.7554 103.4629 240.4722 108.3184 247.0522 111.1816 c
252.8979 113.7266 258.9028 114.1279 263.4751 112.6914 c
263.5806 112.6582 263.6978 112.6982 263.7603 112.791 c
263.8228 112.8828 263.8188 113.0059 263.7485 113.0938 c
f
210.8433 37.5215 m
215.6499 48.0078 215.3081 56.207 211.437 66.5762 c
211.3921 66.6934 211.271 66.7607 211.1479 66.7363 c
211.0249 66.7109 210.939 66.5996 210.9448 66.4746 c
211.5659 53.8535 208.1187 44.8203 200.646 38.668 C
208.896 48.5195 204.9995 68.2275 191.8237 68.2275 c
182.2378 68.2275 174.3081 60.252 172.3687 50.7031 c
172.3433 50.582 172.4097 50.459 172.5269 50.416 c
172.6421 50.3711 172.7729 50.416 172.8354 50.5215 c
175.6772 55.2832 180.2437 58.373 185.2925 58.373 c
193.4272 58.373 195.8335 51.9063 195.8335 47.375 c
195.8335 41.1875 190.9077 36.0313 187.1265 36.0313 c
183.689 36.0313 182.0854 38.8555 182.0854 40.959 c
182.0854 44.8574 185.0835 48.125 188.4624 49.123 c
188.5815 49.1582 188.6597 49.2773 188.6421 49.4023 c
188.6226 49.5273 188.5171 49.6191 188.3921 49.6211 c
184.2847 49.6465 180.814 47.7656 178.7612 44.0527 C
178.4917 46.9277 178.4897 48.7383 179.4019 51.7754 c
179.437 51.8926 179.3843 52.0176 179.2769 52.0742 c
179.1675 52.1309 179.0347 52.1016 178.9604 52.0059 c
171.603 42.6133 175.1245 26.3809 180.939 19.6484 C
175.4077 23.6309 170.5229 32.2813 170.5991 44.041 c
170.6011 44.1641 170.5151 44.2676 170.394 44.291 c
170.2749 44.3164 170.1558 44.25 170.1108 44.1367 c
166.0015 33.8848 168.1812 14.8887 179.3921 4.28516 C
176.5073 3.88867 173.5249 3.93945 170.2671 4.97852 c
170.1519 5.01367 170.0269 4.96484 169.9683 4.85938 c
169.9097 4.75195 169.9331 4.61914 170.0269 4.54102 c
174.1187 1.08594 179.8413 0 185.2925 0 C
180.5952 5.5 182.1558 16.5547 189.6479 16.5547 c
194.9956 16.5547 197.4233 8.25586 193.2944 3.77344 c
193.2163 3.6875 193.2065 3.55859 193.269 3.46289 c
193.3335 3.36523 193.4546 3.32227 193.5659 3.36133 c
198.3452 5.01563 203.5112 9.15039 203.5112 14.377 c
203.5112 19.4199 198.6987 23.7715 191.7104 23.4277 C
200.5288 25.9336 209.7612 23.1602 214.5913 17.1758 c
214.6655 17.082 214.7964 17.0547 214.9019 17.1074 c
215.0093 17.1621 215.064 17.2832 215.0347 17.3984 c
212.2437 28.1152 203.0679 32.5977 191.5952 31.1055 C
200.8765 34.8613 214.8452 31.5859 221.019 23.7949 c
221.0913 23.7031 221.2183 23.6738 221.3257 23.7227 c
221.4312 23.7734 221.4897 23.8906 221.4663 24.0039 c
220.0952 30.6191 216.603 35.5664 210.8433 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2261 56.8086 m
237.2046 56.6895 237.1011 56.6016 236.98 56.6016 c
224.0737 56.4648 212.2261 53.334 203.0093 45.0859 C
211.0386 50.6445 225.9507 52.5957 234.5366 48.7051 c
234.646 48.6543 234.7046 48.5332 234.6772 48.416 c
234.6519 48.2988 234.5444 48.2168 234.4233 48.2188 c
223.7437 48.5098 215.144 45.2129 208.439 39.2559 C
215.3081 38.832 221.0132 34.5156 220.9956 29.4102 c
220.9956 29.291 220.9116 29.1875 220.7944 29.1621 c
220.6792 29.1387 220.5601 29.1973 220.5112 29.3066 c
219.3901 31.7949 215.7632 33.0879 211.9292 32.1875 c
207.7495 31.2051 204.9292 27.998 205.6284 25.0215 c
206.0991 23.0078 208.064 21.6191 210.5796 21.2344 c
210.7065 21.2148 210.8003 21.1055 210.7964 20.9766 c
210.7925 20.8496 210.6948 20.7441 210.5659 20.7305 c
209.4976 20.6289 208.3862 20.625 207.2495 20.7344 c
200.7593 21.3516 195.7358 25.3281 195.3003 29.9121 C
190.5874 29.3652 186.4155 26.7539 184.9214 23.1387 c
184.8765 23.0293 184.7632 22.9668 184.646 22.9844 c
184.5308 23.002 184.4429 23.0977 184.4331 23.2148 c
184.0562 27.9648 185.6909 31.0527 189.4038 34.0684 C
184.019 32.0098 177.9585 31.9043 172.1479 34.6055 c
172.0425 34.6563 171.9839 34.7715 172.0054 34.8867 c
172.0288 35.002 172.1284 35.0859 172.2456 35.0898 c
177.1245 35.2793 180.6616 36.8457 183.978 40.1621 C
165.7222 35.0273 150.8901 46.3633 156.0229 63.2129 c
156.0581 63.3301 156.1694 63.4043 156.2905 63.3926 c
156.4116 63.3809 156.5073 63.2852 156.5171 63.1641 c
157.4351 53.4492 164.2202 47.0469 174.3784 46.0879 C
168.9917 48.1465 163.3784 53.0625 162.8218 61.6211 c
162.814 61.7441 162.894 61.8535 163.0132 61.8848 c
163.1323 61.9141 163.2554 61.8535 163.3062 61.7422 c
166.105 55.5879 171.603 52.4785 177.4663 51.9297 C
171.1323 54.5117 167.0698 60.5332 165.896 68.3516 c
165.8765 68.4746 165.9507 68.5918 166.0698 68.6309 c
166.187 68.668 166.3159 68.6152 166.3726 68.5039 c
170.2378 60.9219 178.5288 55.7109 188.8198 59.6934 c
199.437 63.8027 204.0933 76.0781 205.1226 84.7324 c
205.1382 84.8555 205.2378 84.9492 205.3608 84.957 c
205.4839 84.9629 205.5933 84.8809 205.6226 84.7617 c
209.3413 69.0723 202.0386 52.8125 188.9858 45.9219 C
196.0815 47.9238 202.4253 52.1816 206.0132 59.2754 C
214.3062 60.293 220.0171 63.1387 222.8706 68.5156 c
222.9272 68.6211 223.0503 68.6738 223.1655 68.6406 c
223.2808 68.6055 223.3569 68.4941 223.3472 68.375 c
223.1655 66.2656 222.4058 62.0449 219.2729 60.1035 C
226.2378 60.1152 231.7788 59.2109 237.0718 57.0898 c
237.1831 57.0449 237.2495 56.9277 237.2261 56.8086 c
f
207.7397 110.2773 m
207.8394 110.2129 207.9683 110.2227 208.0562 110.3047 c
208.1421 110.3848 208.1597 110.5137 208.1011 110.6172 c
206.4819 113.4141 207.9604 117.4297 211.1519 117.4297 c
216.8726 117.4297 219.6226 106.6602 218.7476 96.8379 C
216.5854 102.5918 214.7144 104.8926 211.3999 107.6328 c
211.3062 107.709 211.1714 107.7109 211.0776 107.6328 c
210.9839 107.5566 210.9565 107.4238 211.0151 107.3164 c
215.8706 98.2383 216.9116 91.252 216.9116 83.2324 C
215.4487 89.1895 213.7163 92.5527 208.7847 97.6133 c
208.6987 97.7012 208.562 97.7148 208.4604 97.6445 c
208.3589 97.5742 208.3218 97.4414 208.3726 97.3301 c
213.6714 85.7383 213.2671 72.8828 209.3198 63.0664 c
209.2808 62.9688 209.3062 62.8574 209.3823 62.7852 c
209.4604 62.7129 209.5718 62.6973 209.6675 62.7422 c
214.8726 65.293 217.9312 66.9688 222.4194 73.1328 C
221.062 80.5313 222.1909 84.1797 225.5913 90.3262 C
221.6538 80.4102 223.7495 66.4336 233.7788 60.7363 c
233.8882 60.6738 234.0269 60.7012 234.103 60.8008 c
234.1812 60.9004 234.1753 61.041 234.0874 61.1328 c
230.3062 65.0879 227.5562 71.7676 229.9312 79.0586 C
228.4019 68.6699 237.5269 59.9453 247.7104 59.9453 c
257.311 59.9453 263.8618 67.4531 263.3208 74.8848 c
262.7837 82.25 257.8774 85.8555 253.6479 87.3828 c
253.5366 87.4238 253.4116 87.3809 253.3491 87.2813 c
253.2847 87.1816 253.2983 87.0508 253.3823 86.9668 c
258.9927 81.2734 259.7603 70.4746 249.7983 67.207 C
255.6587 72.2637 253.4878 84.0352 244.1089 84.9316 c
243.9917 84.9414 243.8823 84.8711 243.8452 84.7598 c
243.8062 84.6504 243.8491 84.5273 243.9487 84.4648 c
245.9565 83.1855 247.6265 80.6934 247.6265 77.8906 c
247.6265 73.2168 244.2046 71.3789 241.9507 71.3789 c
238.5288 71.3789 235.6909 74.6348 235.6909 79.5605 c
235.6909 85.4023 240.9507 90.2441 247.7104 90.9941 c
254.3374 91.7305 260.4946 88.8398 263.4614 84.5352 c
263.5317 84.4336 263.6626 84.3984 263.7759 84.4492 c
263.8872 84.5 263.9458 84.623 263.9165 84.7422 c
260.897 96.4453 247.1187 101.6191 237.0269 94.25 C
243.6401 101.75 254.0327 101.8555 262.7505 94.1641 c
262.8403 94.084 262.9751 94.0781 263.0728 94.1523 c
263.1685 94.2266 263.1997 94.3574 263.145 94.4668 c
260.479 99.873 253.8921 106.2852 244.5386 105.3516 c
235.9819 104.4961 231.0171 96.3359 230.0151 89.6602 C
229.4585 98.1816 231.4097 104.1953 238.769 109.8047 c
238.8667 109.8789 238.896 110.0117 238.8413 110.1211 c
238.7866 110.2305 238.6616 110.2852 238.5444 110.25 c
231.7593 108.291 226.314 104.8262 223.4956 97.707 C
223.4956 103.8672 225.6343 110.0781 231.021 114.2168 c
231.1187 114.291 231.1479 114.4238 231.0933 114.5332 c
231.0386 114.6406 230.9155 114.6953 230.7983 114.6621 c
227.3452 113.6797 224.6265 112.1738 222.6597 109.4785 C
221.3491 120.5781 216.1382 127.168 210.1343 127.168 c
206.0093 127.168 202.9292 124.1348 202.9292 119.2988 c
202.9292 116.4688 204.4175 112.4961 207.7397 110.2773 c
f
108.5132 18.6602 m
111.6753 14.7559 118.0522 13.2676 124.9448 14.6719 C
124.4351 10.3691 125.2788 5.88086 126.5562 3.18555 c
126.6089 3.07813 126.73 3.01953 126.8472 3.04883 c
126.9644 3.07813 127.0444 3.18555 127.0405 3.30664 c
126.6655 12.0723 131.6636 19.1484 140.4897 22.2148 C
133.5835 17.459 131.564 8.02148 134.8511 3.15039 c
134.9194 3.05078 135.0464 3.01172 135.1577 3.05664 c
135.269 3.10156 135.3335 3.21875 135.312 3.33789 c
134.939 5.39844 135.9175 8.02148 138.0249 10.0625 c
140.9312 12.877 144.8745 13.5156 146.8354 11.4922 c
148.7974 9.4668 148.0337 5.54492 145.1284 2.73242 c
144.0679 1.70508 142.8687 0.96875 141.6792 0.546875 c
141.5659 0.505859 141.4976 0.392578 141.5132 0.275391 c
141.5269 0.15625 141.6226 0.064453 141.7417 0.054688 c
148.1313 -0.5 152.5112 3.30664 155.2573 7.93164 c
158.0522 12.6367 162.8276 16.3438 168.4683 15.6035 c
168.5874 15.5879 168.7007 15.6582 168.7417 15.7715 c
168.7808 15.8848 168.7358 16.0098 168.6323 16.0723 c
165.8354 17.7559 162.7612 18.4551 158.769 17.125 C
164.564 22.0332 172.8159 24.8652 180.6089 22.3516 c
180.7183 22.3164 180.8374 22.3594 180.8999 22.4551 c
180.9624 22.5508 180.9526 22.6777 180.8745 22.7637 c
174.9663 29.3281 163.1851 29.459 155.7651 24.1348 C
158.8022 28.4512 162.8335 31.6211 170.0581 32.6133 c
170.1733 32.6289 170.2632 32.7227 170.2769 32.8379 c
170.2886 32.9531 170.2222 33.0625 170.1128 33.1035 c
161.8218 36.1797 153.5132 33.0586 146.6675 24.8867 C
149.6606 31.2656 154.5737 36.373 161.4351 38.9004 c
161.5503 38.9414 161.6187 39.0586 161.5972 39.1797 c
161.5776 39.3008 161.4741 39.3887 161.353 39.3906 c
157.4097 39.4727 153.8667 38.5332 149.0884 35.8203 C
152.5952 41.5117 151.8276 51.459 146.7183 58.0801 c
146.6479 58.1719 146.5229 58.2031 146.4155 58.1582 c
146.3101 58.1113 146.2476 57.998 146.2671 57.8828 c
147.4478 50.6836 144.9683 42.5547 140.6577 38.2422 C
142.8101 45.873 140.6636 52.8184 134.7612 57.8848 c
134.6909 57.9453 134.5913 57.9629 134.5054 57.9297 c
134.4175 57.8965 134.3569 57.8184 134.3433 57.7266 c
133.1089 48.3086 122.5737 38.752 113.7417 37.9512 c
113.6167 37.9395 113.519 37.8398 113.5112 37.7148 c
113.5034 37.5898 113.5854 37.4785 113.7085 37.4512 c
117.9878 36.4824 122.3999 36.9609 126.0972 38.4805 C
123.437 35.5488 120.1577 33.3711 116.5425 32.2363 c
116.4253 32.1992 116.353 32.0859 116.3667 31.9648 c
116.3804 31.8438 116.48 31.748 116.6011 31.7402 c
121.1108 31.4297 125.5249 32.7461 129.3315 35.2793 C
124.9702 28.6582 118.3511 23.7344 109.9038 21.7715 c
109.7827 21.7441 109.7007 21.6328 109.7065 21.5098 c
109.7144 21.3867 109.8101 21.2871 109.9331 21.2734 c
121.8511 19.9707 131.6792 24.5918 138.1538 33.1914 C
136.5054 28.2891 131.7886 23.4355 125.2085 20.5723 c
119.3628 18.0273 113.3589 17.625 108.7866 19.0625 c
108.6812 19.0957 108.564 19.0547 108.5015 18.9629 c
108.439 18.8691 108.4429 18.7461 108.5132 18.6602 c
f
161.4175 94.2324 m
156.6108 83.7461 156.9526 75.5469 160.8237 65.1777 c
160.8687 65.0605 160.9897 64.9922 161.1128 65.0176 c
161.2358 65.043 161.3218 65.1543 161.3159 65.2773 c
160.6948 77.9004 164.1421 86.9316 171.6147 93.0859 C
163.3647 83.2324 167.2612 63.5254 180.437 63.5254 c
190.0229 63.5254 197.9526 71.502 199.8921 81.0508 c
199.9175 81.1719 199.8511 81.293 199.7339 81.3379 c
199.6187 81.3828 199.4878 81.3379 199.4253 81.2305 c
196.5835 76.4688 192.0171 73.3789 186.9683 73.3789 c
178.8335 73.3789 176.4272 79.8457 176.4272 84.3789 c
176.4272 90.5645 181.353 95.7207 185.1343 95.7207 c
188.5718 95.7207 190.1753 92.8984 190.1753 90.7949 c
190.1753 86.8965 187.1772 83.6289 183.8003 82.6309 c
183.6792 82.5938 183.603 82.4766 183.6206 82.3516 c
183.6382 82.2266 183.7437 82.1328 183.8706 82.1328 c
187.9761 82.1074 191.4468 83.9863 193.4995 87.7012 C
193.769 84.8262 193.771 83.0156 192.8589 79.9766 c
192.8237 79.8594 192.8765 79.7344 192.9839 79.6777 c
193.0933 79.623 193.2261 79.6504 193.3003 79.748 c
200.6577 89.1406 197.1362 105.3711 191.3218 112.1055 C
196.853 108.123 201.7378 99.4707 201.6616 87.7109 c
201.6597 87.5898 201.7456 87.4844 201.8667 87.4609 c
201.9858 87.4375 202.105 87.502 202.1499 87.6152 c
206.2593 97.8691 204.0796 116.8633 192.8687 127.4668 C
195.7534 127.8652 198.7358 127.8145 201.9937 126.7754 c
202.1089 126.7383 202.2339 126.7891 202.2925 126.8945 c
202.3511 127 202.3276 127.1328 202.2339 127.2109 c
198.1421 130.666 192.4194 131.752 186.9683 131.752 C
191.6655 126.252 190.105 115.1992 182.6147 115.1992 c
177.2651 115.1992 174.8374 123.498 178.9663 127.9805 c
179.0444 128.0664 179.0542 128.1934 178.9917 128.291 c
178.9272 128.3887 178.8062 128.4297 178.6948 128.3926 c
173.9155 126.7363 168.7495 122.6035 168.7495 117.375 c
168.7495 112.334 173.562 107.9805 180.5522 108.3242 C
171.7319 105.8203 162.4995 108.5918 157.6694 114.5781 c
157.5952 114.6699 157.4644 114.6992 157.3589 114.6445 c
157.2515 114.5918 157.1968 114.4707 157.2261 114.3535 c
160.0171 103.6387 169.1929 99.1543 180.6655 100.6484 C
171.3843 96.8906 157.4155 100.166 151.2417 107.957 c
151.1694 108.0488 151.0425 108.0801 150.9351 108.0293 c
150.8296 107.9805 150.771 107.8633 150.7944 107.748 c
152.1655 101.1328 155.6577 96.1875 161.4175 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8491 75.2871 51.6968 78.4199 60.9136 86.667 C
52.8843 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1792 83.2441 48.7788 86.54 55.4839 92.498 C
48.6147 92.9199 42.9097 97.2383 42.9272 102.3428 c
42.9272 102.4619 43.0112 102.5645 43.1284 102.5898 c
43.2437 102.6152 43.3628 102.5547 43.4116 102.4463 c
44.5327 99.957 48.1597 98.666 51.9937 99.5664 c
56.1733 100.5469 58.9937 103.7559 58.2944 106.7314 c
57.8237 108.7461 55.8589 110.1348 53.3433 110.5186 c
53.2163 110.5371 53.1226 110.6484 53.1265 110.7764 c
53.1304 110.9043 53.228 111.0098 53.3569 111.0215 c
54.4253 111.124 55.5366 111.1279 56.6733 111.0195 c
63.1636 110.4023 68.187 106.4238 68.6226 101.8418 C
73.3354 102.3887 77.5073 104.998 79.0015 108.6152 c
79.0464 108.7236 79.1616 108.7871 79.2769 108.7695 c
79.3921 108.75 79.48 108.6553 79.4897 108.5391 c
79.8667 103.7871 78.2319 100.7002 74.519 97.6846 C
79.9038 99.7441 85.9644 99.8496 91.7749 97.1465 c
91.8804 97.0977 91.939 96.9824 91.9175 96.8672 c
91.894 96.752 91.7944 96.668 91.6772 96.6641 c
86.7983 96.4736 83.2612 94.9082 79.9468 91.5918 C
98.2007 96.7256 113.0327 85.3906 107.8999 68.5391 c
107.8647 68.4238 107.7534 68.3486 107.6323 68.3613 c
107.5112 68.373 107.4155 68.4688 107.4058 68.5898 c
106.4878 78.3037 99.7026 84.7051 89.5444 85.666 C
94.9312 83.6055 100.5444 78.6895 101.1011 70.1318 c
101.1089 70.0098 101.0288 69.8984 100.9097 69.8691 c
100.7905 69.8398 100.6675 69.8984 100.6167 70.0098 c
97.8179 76.1641 92.3198 79.2754 86.4565 79.8223 C
92.7905 77.2422 96.853 71.2207 98.0269 63.4023 c
98.0464 63.2793 97.9722 63.1602 97.853 63.123 c
97.7358 63.084 97.6069 63.1387 97.5503 63.248 c
93.6851 70.8311 85.394 76.042 75.103 72.0605 c
64.4858 67.9512 59.8296 55.6738 58.8003 47.0195 c
58.7847 46.8984 58.6851 46.8047 58.562 46.7969 c
58.439 46.7891 58.3296 46.8711 58.3003 46.9922 c
54.5815 62.6797 61.8843 78.9414 74.937 85.832 C
67.8413 83.8291 61.4976 79.5723 57.9097 72.4775 C
49.6167 71.459 43.9058 68.6152 41.0522 63.2383 c
40.9956 63.1309 40.8726 63.0781 40.7573 63.1133 c
40.6421 63.1465 40.5659 63.2578 40.5757 63.3789 c
40.7573 65.4883 41.5171 69.709 44.6499 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1831 21.4746 m
56.0835 21.541 55.9546 21.5293 55.8667 21.4492 c
55.7808 21.3672 55.7632 21.2383 55.8218 21.1367 c
57.4409 18.3398 55.9624 14.3223 52.771 14.3223 c
47.0503 14.3223 44.3003 25.0918 45.1753 34.916 C
47.3374 29.1602 49.2085 26.8613 52.5229 24.1211 c
52.6167 24.043 52.7515 24.043 52.8452 24.1191 c
52.939 24.1973 52.9663 24.3281 52.9077 24.4355 c
48.0522 33.5156 47.0112 40.502 47.0112 48.5215 C
48.4741 42.5625 50.2065 39.1992 55.1382 34.1406 c
55.2241 34.0527 55.3608 34.0391 55.4624 34.1074 c
55.564 34.1777 55.6011 34.3105 55.5503 34.4238 c
50.2515 46.0137 50.6558 58.8711 54.603 68.6875 c
54.6421 68.7852 54.6167 68.8965 54.5405 68.9688 c
54.4624 69.0391 54.3511 69.0566 54.2554 69.0098 c
49.0503 66.459 45.9917 64.7832 41.5034 58.6211 C
42.8608 51.2227 41.7319 47.5723 38.3311 41.4258 C
42.269 51.3438 40.1733 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4272 34.0469 C
40.4272 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2964 19.5781 41.2632 22.2754 C
42.5737 11.1758 47.7847 4.58398 53.7886 4.58398 c
57.9136 4.58398 60.9937 7.61719 60.9937 12.4551 c
60.9937 15.2852 59.5054 19.2578 56.1831 21.4746 c
f
155.4097 113.0938 m
152.2476 116.998 145.8706 118.4863 138.978 117.082 C
139.4878 121.3828 138.644 125.873 137.3667 128.5664 c
137.314 128.6758 137.1929 128.7334 137.0757 128.7051 c
136.9585 128.6758 136.8784 128.5684 136.8823 128.4473 c
137.2573 119.6807 132.2593 112.6035 123.4331 109.5371 C
130.3394 114.293 132.3589 123.7305 129.0718 128.6035 c
129.0034 128.7021 128.8765 128.7412 128.7651 128.6953 c
128.6538 128.6504 128.5894 128.5332 128.6108 128.416 c
128.9839 126.3555 128.0054 123.7314 125.8979 121.6895 c
122.9917 118.875 119.0483 118.2363 117.0874 120.2598 c
115.1265 122.2852 115.8901 126.207 118.7944 129.0215 c
119.855 130.0488 121.0542 130.7832 122.2437 131.2061 c
122.3569 131.2461 122.4253 131.3594 122.4097 131.4775 c
122.396 131.5967 122.3003 131.6885 122.1812 131.6982 c
115.7925 132.2529 111.4116 128.4463 108.6655 123.8203 c
105.8706 119.1152 101.0952 115.4102 95.4546 116.1504 c
95.3354 116.166 95.2222 116.0957 95.1812 115.9824 c
95.1421 115.8691 95.187 115.7422 95.2905 115.6807 c
98.0874 113.9961 101.1616 113.2969 105.1538 114.6289 C
99.3589 109.7197 91.1069 106.8867 83.314 109.4014 c
83.2046 109.4375 83.0854 109.3945 83.0229 109.2979 c
82.9604 109.2012 82.9722 109.0752 83.0483 108.9902 c
88.9565 102.4258 100.7378 102.2949 108.1577 107.6172 C
105.1206 103.3008 101.0894 100.1328 93.8647 99.1387 c
93.7495 99.123 93.6597 99.0313 93.646 98.916 c
93.6343 98.7998 93.7007 98.6904 93.8101 98.6504 c
102.1011 95.5723 110.4097 98.6953 117.2554 106.8652 C
114.2632 100.4883 109.3491 95.3809 102.4878 92.8535 c
102.3726 92.8115 102.3042 92.6934 102.3257 92.5742 c
102.3452 92.4531 102.4487 92.3643 102.5698 92.3613 c
106.5132 92.2803 110.0562 93.2188 114.8354 95.9316 C
111.3276 90.2422 112.0952 80.293 117.2046 73.6738 c
117.2749 73.582 117.3999 73.5498 117.5073 73.5957 c
117.6128 73.6426 117.6753 73.7549 117.6558 73.8691 c
116.4761 81.0703 118.9546 89.1992 123.2651 93.5117 C
121.1128 85.8799 123.2593 78.9355 129.1616 73.8672 c
129.2319 73.8066 129.3315 73.79 129.4175 73.8232 c
129.5054 73.8564 129.5659 73.9355 129.5796 74.0273 c
130.814 83.4453 141.3491 93.002 150.1812 93.8027 c
150.3062 93.8135 150.4038 93.9141 150.4116 94.0381 c
150.4194 94.1621 150.3374 94.2754 150.2144 94.3027 c
145.9351 95.2715 141.5229 94.793 137.8257 93.2715 C
140.4858 96.2051 143.7651 98.3828 147.3804 99.5176 c
147.4976 99.5537 147.5698 99.668 147.5562 99.7891 c
147.5425 99.9102 147.4429 100.0039 147.3218 100.0127 c
142.812 100.3242 138.3979 99.0068 134.5913 96.4746 C
138.9526 103.0957 145.5718 108.0195 154.019 109.9805 c
154.1401 110.0088 154.2222 110.1191 154.2163 110.2432 c
154.2085 110.3672 154.1128 110.4668 153.9897 110.4805 c
142.0718 111.7822 132.2437 107.1621 125.769 98.5625 C
127.4175 103.4629 132.1343 108.3184 138.7144 111.1816 c
144.5601 113.7266 150.564 114.1279 155.1362 112.6914 c
155.2417 112.6582 155.3589 112.6982 155.4214 112.791 c
155.4839 112.8828 155.48 113.0059 155.4097 113.0938 c
f
102.5054 37.5215 m
107.312 48.0078 106.9702 56.207 103.0991 66.5762 c
103.0542 66.6934 102.9331 66.7607 102.8101 66.7363 c
102.687 66.7109 102.6011 66.5996 102.6069 66.4746 c
103.228 53.8535 99.7808 44.8203 92.3081 38.668 C
100.5581 48.5195 96.6616 68.2275 83.4858 68.2275 c
73.8999 68.2275 65.9702 60.252 64.0308 50.7031 c
64.0054 50.582 64.0718 50.459 64.189 50.416 c
64.3042 50.3711 64.4351 50.416 64.4976 50.5215 c
67.3394 55.2832 71.9058 58.373 76.9546 58.373 c
85.0894 58.373 87.4956 51.9063 87.4956 47.375 c
87.4956 41.1875 82.5698 36.0313 78.7886 36.0313 c
75.3511 36.0313 73.7476 38.8555 73.7476 40.959 c
73.7476 44.8574 76.7456 48.125 80.1245 49.123 c
80.2437 49.1582 80.3218 49.2773 80.3042 49.4023 c
80.2847 49.5273 80.1792 49.6191 80.0542 49.6211 c
75.9468 49.6465 72.4761 47.7656 70.4233 44.0527 C
70.1538 46.9277 70.1519 48.7383 71.064 51.7754 c
71.0991 51.8926 71.0464 52.0176 70.939 52.0742 c
70.8296 52.1309 70.6968 52.1016 70.6226 52.0059 c
63.2651 42.6133 66.7866 26.3809 72.6011 19.6484 C
67.0698 23.6309 62.1851 32.2813 62.2612 44.041 c
62.2632 44.1641 62.1772 44.2676 62.0562 44.291 c
61.937 44.3164 61.8179 44.25 61.7729 44.1367 c
57.6636 33.8848 59.8433 14.8887 71.0542 4.28516 C
68.1694 3.88867 65.187 3.93945 61.9292 4.97852 c
61.814 5.01367 61.689 4.96484 61.6304 4.85938 c
61.5718 4.75195 61.5952 4.61914 61.689 4.54102 c
65.7808 1.08594 71.5034 0 76.9546 0 C
72.2573 5.5 73.8179 16.5547 81.3101 16.5547 c
86.6577 16.5547 89.0854 8.25586 84.9565 3.77344 c
84.8784 3.6875 84.8687 3.55859 84.9312 3.46289 c
84.9956 3.36523 85.1167 3.32227 85.228 3.36133 c
90.0073 5.01563 95.1733 9.15039 95.1733 14.377 c
95.1733 19.4199 90.3608 23.7715 83.3726 23.4277 C
92.1909 25.9336 101.4233 23.1602 106.2534 17.1758 c
106.3276 17.082 106.4585 17.0547 106.564 17.1074 c
106.6714 17.1621 106.7261 17.2832 106.6968 17.3984 c
103.9058 28.1152 94.73 32.5977 83.2573 31.1055 C
92.5386 34.8613 106.5073 31.5859 112.6812 23.7949 c
112.7534 23.7031 112.8804 23.6738 112.9878 23.7227 c
113.0933 23.7734 113.1519 23.8906 113.1284 24.0039 c
111.7573 30.6191 108.2651 35.5664 102.5054 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8882 56.8086 m
128.8667 56.6895 128.7632 56.6016 128.6421 56.6016 c
115.7358 56.4648 103.8882 53.334 94.6714 45.0859 C
102.7007 50.6445 117.6128 52.5957 126.1987 48.7051 c
126.3081 48.6543 126.3667 48.5332 126.3394 48.416 c
126.314 48.2988 126.2065 48.2168 126.0854 48.2188 c
115.4058 48.5098 106.8062 45.2129 100.1011 39.2559 C
106.9702 38.832 112.6753 34.5156 112.6577 29.4102 c
112.6577 29.291 112.5737 29.1875 112.4565 29.1621 c
112.3413 29.1387 112.2222 29.1973 112.1733 29.3066 c
111.0522 31.7949 107.4253 33.0879 103.5913 32.1875 c
99.4116 31.2051 96.5913 27.998 97.2905 25.0215 c
97.7612 23.0078 99.7261 21.6191 102.2417 21.2344 c
102.3687 21.2148 102.4624 21.1055 102.4585 20.9766 c
102.4546 20.8496 102.3569 20.7441 102.228 20.7305 c
101.1597 20.6289 100.0483 20.625 98.9116 20.7344 c
92.4214 21.3516 87.3979 25.3281 86.9624 29.9121 C
82.2495 29.3652 78.0776 26.7539 76.5835 23.1387 c
76.5386 23.0293 76.4253 22.9668 76.3081 22.9844 c
76.1929 23.002 76.105 23.0977 76.0952 23.2148 c
75.7183 27.9648 77.353 31.0527 81.0659 34.0684 C
75.6812 32.0098 69.6206 31.9043 63.8101 34.6055 c
63.7046 34.6563 63.646 34.7715 63.6675 34.8867 c
63.6909 35.002 63.7905 35.0859 63.9077 35.0898 c
68.7866 35.2793 72.3237 36.8457 75.6401 40.1621 C
57.3843 35.0273 42.5522 46.3633 47.6851 63.2129 c
47.7202 63.3301 47.8315 63.4043 47.9526 63.3926 c
48.0737 63.3809 48.1694 63.2852 48.1792 63.1641 c
49.0972 53.4492 55.8823 47.0469 66.0405 46.0879 C
60.6538 48.1465 55.0405 53.0625 54.4839 61.6211 c
54.4761 61.7441 54.5562 61.8535 54.6753 61.8848 c
54.7944 61.9141 54.9175 61.8535 54.9683 61.7422 c
57.7671 55.5879 63.2651 52.4785 69.1284 51.9297 C
62.7944 54.5117 58.7319 60.5332 57.5581 68.3516 c
57.5386 68.4746 57.6128 68.5918 57.7319 68.6309 c
57.8491 68.668 57.978 68.6152 58.0347 68.5039 c
61.8999 60.9219 70.1909 55.7109 80.4819 59.6934 c
91.0991 63.8027 95.7554 76.0781 96.7847 84.7324 c
96.8003 84.8555 96.8999 84.9492 97.0229 84.957 c
97.146 84.9629 97.2554 84.8809 97.2847 84.7617 c
101.0034 69.0723 93.7007 52.8125 80.6479 45.9219 C
87.7437 47.9238 94.0874 52.1816 97.6753 59.2754 C
105.9683 60.293 111.6792 63.1387 114.5327 68.5156 c
114.5894 68.6211 114.7124 68.6738 114.8276 68.6406 c
114.9429 68.6055 115.019 68.4941 115.0093 68.375 c
114.8276 66.2656 114.0679 62.0449 110.9351 60.1035 C
117.8999 60.1152 123.4409 59.2109 128.7339 57.0898 c
128.8452 57.0449 128.9116 56.9277 128.8882 56.8086 c
f
99.4019 110.2773 m
99.5015 110.2129 99.6304 110.2227 99.7183 110.3047 c
99.8042 110.3848 99.8218 110.5137 99.7632 110.6172 c
98.144 113.4141 99.6226 117.4297 102.814 117.4297 c
108.5347 117.4297 111.2847 106.6602 110.4097 96.8379 C
108.2476 102.5918 106.3765 104.8926 103.062 107.6328 c
102.9683 107.709 102.8335 107.7109 102.7397 107.6328 c
102.646 107.5566 102.6187 107.4238 102.6772 107.3164 c
107.5327 98.2383 108.5737 91.252 108.5737 83.2324 C
107.1108 89.1895 105.3784 92.5527 100.4468 97.6133 c
100.3608 97.7012 100.2241 97.7148 100.1226 97.6445 c
100.021 97.5742 99.9839 97.4414 100.0347 97.3301 c
105.3335 85.7383 104.9292 72.8828 100.9819 63.0664 c
100.9429 62.9688 100.9683 62.8574 101.0444 62.7852 c
101.1226 62.7129 101.2339 62.6973 101.3296 62.7422 c
106.5347 65.293 109.5933 66.9688 114.0815 73.1328 C
112.7241 80.5313 113.853 84.1797 117.2534 90.3262 C
113.3159 80.4102 115.4116 66.4336 125.4409 60.7363 c
125.5503 60.6738 125.689 60.7012 125.7651 60.8008 c
125.8433 60.9004 125.8374 61.041 125.7495 61.1328 c
121.9683 65.0879 119.2183 71.7676 121.5933 79.0586 C
120.064 68.6699 129.189 59.9453 139.3726 59.9453 c
148.9722 59.9453 155.5229 67.4531 154.9819 74.8848 c
154.4448 82.25 149.5386 85.8555 145.3101 87.3828 c
145.1987 87.4238 145.0737 87.3809 145.0112 87.2813 c
144.9468 87.1816 144.9604 87.0508 145.0444 86.9668 c
150.6538 81.2734 151.4214 70.4746 141.4604 67.207 C
147.3198 72.2637 145.1499 84.0352 135.771 84.9316 c
135.6538 84.9414 135.5444 84.8711 135.5073 84.7598 c
135.4683 84.6504 135.5112 84.5273 135.6108 84.4648 c
137.6187 83.1855 139.2886 80.6934 139.2886 77.8906 c
139.2886 73.2168 135.8667 71.3789 133.6128 71.3789 c
130.1909 71.3789 127.353 74.6348 127.353 79.5605 c
127.353 85.4023 132.6128 90.2441 139.3726 90.9941 c
145.9995 91.7305 152.1558 88.8398 155.1226 84.5352 c
155.1929 84.4336 155.3237 84.3984 155.437 84.4492 c
155.5483 84.5 155.6069 84.623 155.5776 84.7422 c
152.5581 96.4453 138.7808 101.6191 128.689 94.25 C
135.3022 101.75 145.6948 101.8555 154.4116 94.1641 c
154.5015 94.084 154.6362 94.0781 154.7339 94.1523 c
154.8296 94.2266 154.8608 94.3574 154.8062 94.4668 c
152.1401 99.873 145.5542 106.2852 136.2007 105.3516 c
127.644 104.4961 122.6792 96.3359 121.6772 89.6602 C
121.1206 98.1816 123.0718 104.1953 130.4312 109.8047 c
130.5288 109.8789 130.5581 110.0117 130.5034 110.1211 c
130.4487 110.2305 130.3237 110.2852 130.2065 110.25 c
123.4214 108.291 117.9761 104.8262 115.1577 97.707 C
115.1577 103.8672 117.2964 110.0781 122.6831 114.2168 c
122.7808 114.291 122.8101 114.4238 122.7554 114.5332 c
122.7007 114.6406 122.5776 114.6953 122.4604 114.6621 c
119.0073 113.6797 116.2886 112.1738 114.3218 109.4785 C
113.0112 120.5781 107.8003 127.168 101.7964 127.168 c
97.6714 127.168 94.5913 124.1348 94.5913 119.2988 c
94.5913 116.4688 96.0796 112.4961 99.4019 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.4585 9.4668 39.6948 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.7925 -0.5 44.1733 3.30664 46.9194 7.93164 c
49.7144 12.6367 54.4897 16.3438 60.1304 15.6035 c
60.2495 15.5879 60.3628 15.6582 60.4038 15.7715 c
60.4429 15.8848 60.3979 16.0098 60.2944 16.0723 c
57.4976 17.7559 54.4233 18.4551 50.4312 17.125 C
56.2261 22.0332 64.478 24.8652 72.271 22.3516 c
72.3804 22.3164 72.4995 22.3594 72.562 22.4551 c
72.6245 22.5508 72.6147 22.6777 72.5366 22.7637 c
66.6284 29.3281 54.8472 29.459 47.4272 24.1348 C
50.4644 28.4512 54.4956 31.6211 61.7202 32.6133 c
61.8354 32.6289 61.9253 32.7227 61.939 32.8379 c
61.9507 32.9531 61.8843 33.0625 61.7749 33.1035 c
53.4839 36.1797 45.1753 33.0586 38.3291 24.8867 C
41.3218 31.2656 46.2358 36.373 53.0972 38.9004 c
53.2124 38.9414 53.2808 39.0586 53.2593 39.1797 c
53.2397 39.3008 53.1362 39.3887 53.0151 39.3906 c
49.0718 39.4727 45.5288 38.5332 40.7495 35.8203 C
44.2573 41.5117 43.4897 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1089 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0796 94.2324 m
48.2729 83.7461 48.6147 75.5469 52.4858 65.1777 c
52.5308 65.0605 52.6519 64.9922 52.7749 65.0176 c
52.8979 65.043 52.9839 65.1543 52.978 65.2773 c
52.3569 77.9004 55.8042 86.9316 63.2769 93.0859 C
55.0269 83.2324 58.9233 63.5254 72.0991 63.5254 c
81.6851 63.5254 89.6147 71.502 91.5542 81.0508 c
91.5796 81.1719 91.5132 81.293 91.396 81.3379 c
91.2808 81.3828 91.1499 81.3379 91.0874 81.2305 c
88.2456 76.4688 83.6792 73.3789 78.6304 73.3789 c
70.4956 73.3789 68.0894 79.8457 68.0894 84.3789 c
68.0894 90.5645 73.0151 95.7207 76.7964 95.7207 c
80.2339 95.7207 81.8374 92.8984 81.8374 90.7949 c
81.8374 86.8965 78.8394 83.6289 75.4624 82.6309 c
75.3413 82.5938 75.2651 82.4766 75.2827 82.3516 c
75.3003 82.2266 75.4058 82.1328 75.5327 82.1328 c
79.6382 82.1074 83.1089 83.9863 85.1616 87.7012 C
85.4312 84.8262 85.4331 83.0156 84.521 79.9766 c
84.4858 79.8594 84.5386 79.7344 84.646 79.6777 c
84.7554 79.623 84.8882 79.6504 84.9624 79.748 c
92.3198 89.1406 88.7983 105.3711 82.9839 112.1055 C
88.5151 108.123 93.3999 99.4707 93.3237 87.7109 c
93.3218 87.5898 93.4077 87.4844 93.5288 87.4609 c
93.6479 87.4375 93.7671 87.502 93.812 87.6152 c
97.9214 97.8691 95.7417 116.8633 84.5308 127.4668 C
87.4155 127.8652 90.3979 127.8145 93.6558 126.7754 c
93.771 126.7383 93.896 126.7891 93.9546 126.8945 c
94.0132 127 93.9897 127.1328 93.896 127.2109 c
89.8042 130.666 84.0815 131.752 78.6304 131.752 C
83.3276 126.252 81.7671 115.1992 74.2769 115.1992 c
68.9272 115.1992 66.4995 123.498 70.6284 127.9805 c
70.7065 128.0664 70.7163 128.1934 70.6538 128.291 c
70.5894 128.3887 70.4683 128.4297 70.3569 128.3926 c
65.5776 126.7363 60.4116 122.6035 60.4116 117.375 c
60.4116 112.334 65.2241 107.9805 72.2144 108.3242 C
63.394 105.8203 54.1616 108.5918 49.3315 114.5781 c
49.2573 114.6699 49.1265 114.6992 49.021 114.6445 c
48.9136 114.5918 48.8589 114.4707 48.8882 114.3535 c
51.6792 103.6387 60.855 99.1543 72.3276 100.6484 C
63.0464 96.8906 49.0776 100.166 42.9038 107.957 c
42.8315 108.0488 42.7046 108.0801 42.5972 108.0293 c
42.4917 107.9805 42.4331 107.8633 42.4565 107.748 c
43.8276 101.1328 47.3198 96.1875 53.0796 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0347 184.5869 m
135.0562 184.7061 135.1597 184.792 135.2808 184.7939 c
148.188 184.9287 160.0347 188.0615 169.2515 196.3086 C
161.2222 190.751 146.3101 188.7979 137.7251 192.6904 c
137.6147 192.7402 137.5562 192.8604 137.5835 192.9785 c
137.6099 193.0967 137.7163 193.1787 137.8374 193.1748 c
148.5181 192.8857 157.1167 196.1816 163.8218 202.1396 C
156.9526 202.5615 151.2476 206.8799 151.2651 211.9844 c
151.2651 212.1035 151.3491 212.2061 151.4663 212.2314 c
151.5815 212.2568 151.7007 212.1963 151.7495 212.0879 c
152.8706 209.5986 156.4976 208.3076 160.3315 209.208 c
164.5112 210.1885 167.3315 213.3975 166.6323 216.373 c
166.1616 218.3877 164.1968 219.7764 161.6812 220.1602 c
161.5542 220.1787 161.4604 220.29 161.4644 220.418 c
161.4683 220.5459 161.5659 220.6514 161.6948 220.6631 c
162.7632 220.7656 163.8745 220.7695 165.0112 220.6611 c
171.5015 220.0439 176.5249 216.0654 176.9604 211.4834 C
181.6733 212.0303 185.8452 214.6396 187.3394 218.2568 c
187.3843 218.3652 187.4995 218.4287 187.6147 218.4111 c
187.73 218.3916 187.8179 218.2969 187.8276 218.1807 c
188.2046 213.4287 186.5698 210.3418 182.8569 207.3262 C
188.2417 209.3857 194.3022 209.4912 200.1128 206.7881 c
200.2183 206.7393 200.2769 206.624 200.2554 206.5088 c
200.2319 206.3936 200.1323 206.3096 200.0151 206.3057 c
195.1362 206.1152 191.5991 204.5498 188.2847 201.2334 C
206.5386 206.3672 221.3706 195.0322 216.2378 178.1807 c
216.2026 178.0654 216.0913 177.9902 215.9702 178.0029 c
215.8491 178.0146 215.7534 178.1104 215.7437 178.2314 c
214.8257 187.9453 208.0405 194.3467 197.8823 195.3076 C
203.269 193.2471 208.8823 188.3311 209.439 179.7734 c
209.4468 179.6514 209.3667 179.54 209.2476 179.5107 c
209.1284 179.4814 209.0054 179.54 208.9546 179.6514 c
206.1558 185.8057 200.6577 188.917 194.7944 189.4639 C
201.1284 186.8838 205.1909 180.8623 206.3647 173.0439 c
206.3843 172.9209 206.3101 172.8018 206.1909 172.7646 c
206.0737 172.7256 205.9448 172.7803 205.8882 172.8896 c
202.0229 180.4727 193.7319 185.6836 183.4409 181.7021 c
172.8237 177.5928 168.1675 165.3154 167.1382 156.6611 c
167.1226 156.54 167.0229 156.4463 166.8999 156.4385 c
166.7769 156.4307 166.6675 156.5127 166.6382 156.6338 c
162.9194 172.3213 170.2222 188.583 183.2749 195.4736 C
176.1792 193.4707 169.8354 189.2139 166.2476 182.1191 C
157.9546 181.1006 152.2437 178.2568 149.3911 172.8799 c
149.3345 172.7725 149.2114 172.7197 149.0962 172.7549 c
148.981 172.7881 148.9048 172.8994 148.9146 173.0205 c
149.0962 175.1299 149.855 179.3506 152.9878 181.291 C
146.0229 181.2803 140.4819 182.1846 135.189 184.3037 c
135.0776 184.3496 135.0122 184.4678 135.0347 184.5869 c
f
164.521 131.1162 m
164.4214 131.1826 164.2925 131.1709 164.2046 131.0908 c
164.1187 131.0088 164.1011 130.8799 164.1597 130.7783 c
165.7788 127.9814 164.3003 123.9639 161.1089 123.9639 c
155.3882 123.9639 152.6382 134.7334 153.5132 144.5576 C
155.6753 138.8018 157.5464 136.5029 160.8608 133.7627 c
160.9546 133.6846 161.0894 133.6846 161.1831 133.7607 c
161.2769 133.8389 161.3042 133.9697 161.2456 134.0771 c
156.3901 143.1572 155.3491 150.1436 155.3491 158.1631 C
156.812 152.2041 158.5444 148.8408 163.4761 143.7822 c
163.562 143.6943 163.6987 143.6807 163.8003 143.749 c
163.9019 143.8193 163.939 143.9521 163.8882 144.0654 c
158.5894 155.6553 158.9937 168.5127 162.9409 178.3291 c
162.98 178.4268 162.9546 178.5381 162.8784 178.6104 c
162.8003 178.6807 162.689 178.6982 162.5933 178.6514 c
157.3882 176.1006 154.3296 174.4248 149.8413 168.2627 C
151.1987 160.8643 150.0698 157.2139 146.6694 151.0674 C
150.6069 160.9854 148.5122 174.9619 138.4819 180.6592 c
138.3726 180.7207 138.2339 180.6934 138.1577 180.5947 c
138.0796 180.4951 138.0864 180.3535 138.1733 180.2627 c
141.9546 176.3076 144.7046 169.6279 142.3296 162.335 C
143.8589 172.7236 134.7339 181.4502 124.5503 181.4502 c
114.9507 181.4502 108.3999 173.9404 108.9409 166.5088 c
109.478 159.1436 114.3843 155.54 118.6128 154.0107 c
118.7241 153.9717 118.8491 154.0127 118.9126 154.1123 c
118.9761 154.2139 118.9624 154.3428 118.8794 154.4287 c
113.269 160.1201 112.5015 170.9209 122.4624 174.1885 C
116.603 169.1318 118.7729 157.3584 128.1519 156.4639 c
128.269 156.4521 128.3784 156.5225 128.4165 156.6338 c
128.4546 156.7451 128.4116 156.8682 128.313 156.9307 c
126.3042 158.208 124.6343 160.7021 124.6343 163.5049 c
124.6343 168.1787 128.0562 170.0146 130.3101 170.0146 c
133.7319 170.0146 136.5698 166.7588 136.5698 161.835 c
136.5698 155.9912 131.3101 151.1514 124.5503 150.3994 c
117.9243 149.665 111.7681 152.5537 108.8003 156.8584 c
108.731 156.96 108.5991 156.9971 108.4868 156.9463 c
108.3745 156.8955 108.3159 156.7705 108.3462 156.6514 c
111.3647 144.9482 125.1421 139.7744 135.2339 147.1455 C
128.6206 139.6436 118.228 139.54 109.5122 147.2314 c
109.4214 147.3115 109.2866 147.3154 109.1899 147.2412 c
109.0933 147.1689 109.063 147.0361 109.1167 146.9287 c
111.7837 141.5205 118.3696 135.1084 127.7222 136.0439 c
136.2788 136.8994 141.2437 145.0576 142.2456 151.7354 C
142.8022 143.2139 140.8521 137.1982 133.4917 131.5889 c
133.395 131.5146 133.3647 131.3818 133.4194 131.2725 c
133.4741 131.165 133.5991 131.1104 133.7163 131.1436 c
140.5015 133.1045 145.9468 136.5693 148.7661 143.6885 C
148.7661 137.5264 146.6265 131.3154 141.2397 127.1768 c
141.1421 127.1025 141.1128 126.9717 141.1675 126.8623 c
141.2222 126.7529 141.3462 126.6982 141.4634 126.7314 c
144.9165 127.7158 147.6353 129.2197 149.6021 131.917 C
150.9116 120.8174 156.1226 114.2256 162.1265 114.2256 c
166.2515 114.2256 169.3315 117.2588 169.3315 122.0967 c
169.3315 124.9268 167.8433 128.8994 164.521 131.1162 c
f
263.7485 222.7354 m
260.5864 226.6396 254.2085 228.1279 247.3159 226.7236 C
247.8257 231.0244 246.9819 235.5146 245.7046 238.208 c
245.6519 238.3174 245.5308 238.375 245.4136 238.3467 c
245.2964 238.3174 245.2163 238.21 245.2202 238.0889 c
245.5952 229.3223 240.5972 222.2451 231.771 219.1787 C
238.6772 223.9346 240.6968 233.3721 237.4097 238.2451 c
237.3413 238.3438 237.2144 238.3828 237.103 238.3369 c
236.9917 238.292 236.9272 238.1748 236.9487 238.0576 c
237.3218 235.9971 236.3433 233.373 234.2358 231.3311 c
231.3296 228.5166 227.3862 227.8779 225.4253 229.9014 c
223.4644 231.9268 224.228 235.8486 227.1323 238.6631 c
228.1929 239.6904 229.3921 240.4248 230.5815 240.8477 c
230.6948 240.8877 230.7632 241.001 230.7476 241.1191 c
230.7339 241.2383 230.6382 241.3301 230.519 241.3398 c
224.1304 241.8945 219.7495 238.0879 217.0034 233.4619 c
214.2085 228.7568 209.4331 225.0518 203.7925 225.792 c
203.6733 225.8076 203.5601 225.7373 203.519 225.624 c
203.48 225.5107 203.5249 225.3838 203.6284 225.3223 c
206.4253 223.6377 209.4995 222.9385 213.4917 224.2705 C
207.6968 219.3613 199.4448 216.5283 191.6519 219.043 c
191.5425 219.0791 191.4233 219.0361 191.3608 218.9395 c
191.2983 218.8428 191.3101 218.7168 191.3862 218.6318 c
197.2944 212.0674 209.0757 211.9365 216.4956 217.2588 C
213.4585 212.9424 209.4272 209.7744 202.2026 208.7803 c
202.0874 208.7646 201.9976 208.6729 201.9839 208.5576 c
201.9722 208.4414 202.0386 208.332 202.1479 208.292 c
210.439 205.2139 218.7476 208.3369 225.5933 216.5068 C
222.6011 210.1299 217.687 205.0225 210.8257 202.4951 c
210.7104 202.4531 210.6421 202.335 210.6636 202.2158 c
210.6831 202.0947 210.7866 202.0059 210.9077 202.0029 c
214.8511 201.9219 218.394 202.8604 223.1733 205.5732 C
219.6655 199.8838 220.4331 189.9346 225.5425 183.3154 c
225.6128 183.2236 225.7378 183.1914 225.8452 183.2373 c
225.9507 183.2842 226.0132 183.3965 225.9937 183.5107 c
224.814 190.7119 227.2925 198.8408 231.603 203.1533 C
229.4507 195.5215 231.5972 188.5771 237.4995 183.5088 c
237.5698 183.4482 237.6694 183.4316 237.7554 183.4648 c
237.8433 183.498 237.9038 183.5771 237.9175 183.6689 c
239.1519 193.0869 249.687 202.6436 258.52 203.4443 c
258.645 203.4551 258.7427 203.5557 258.7505 203.6797 c
258.7583 203.8037 258.6763 203.917 258.5532 203.9443 c
254.2729 204.9131 249.8608 204.4346 246.1636 202.9131 C
248.8237 205.8467 252.103 208.0244 255.7192 209.1592 c
255.8364 209.1953 255.9087 209.3096 255.895 209.4307 c
255.8813 209.5518 255.7817 209.6455 255.6606 209.6543 c
251.1499 209.9658 246.7358 208.6484 242.9292 206.1162 C
247.2905 212.7373 253.9097 217.6611 262.3579 219.6221 c
262.479 219.6504 262.561 219.7607 262.5552 219.8848 c
262.5474 220.0088 262.4517 220.1084 262.3286 220.1221 c
250.4097 221.4238 240.5815 216.8037 234.1069 208.2041 C
235.7554 213.1045 240.4722 217.96 247.0522 220.8232 c
252.8979 223.3682 258.9028 223.7695 263.4751 222.333 c
263.5806 222.2998 263.6978 222.3398 263.7603 222.4326 c
263.8228 222.5244 263.8188 222.6475 263.7485 222.7354 c
f
210.8433 147.1631 m
215.6499 157.6494 215.3081 165.8486 211.437 176.2178 c
211.3921 176.335 211.271 176.4023 211.1479 176.3779 c
211.0249 176.3525 210.939 176.2412 210.9448 176.1162 c
211.5659 163.4951 208.1187 154.4619 200.646 148.3096 C
208.896 158.1611 204.9995 177.8691 191.8237 177.8691 c
182.2378 177.8691 174.3081 169.8936 172.3687 160.3447 c
172.3433 160.2236 172.4097 160.1006 172.5269 160.0576 c
172.6421 160.0127 172.7729 160.0576 172.8354 160.1631 c
175.6772 164.9248 180.2437 168.0146 185.2925 168.0146 c
193.4272 168.0146 195.8335 161.5479 195.8335 157.0166 c
195.8335 150.8291 190.9077 145.6729 187.1265 145.6729 c
183.689 145.6729 182.0854 148.4971 182.0854 150.6006 c
182.0854 154.499 185.0835 157.7666 188.4624 158.7646 c
188.5815 158.7998 188.6597 158.9189 188.6421 159.0439 c
188.6226 159.1689 188.5171 159.2607 188.3921 159.2627 c
184.2847 159.2881 180.814 157.4072 178.7612 153.6943 C
178.4917 156.5693 178.4897 158.3799 179.4019 161.417 c
179.437 161.5342 179.3843 161.6592 179.2769 161.7158 c
179.1675 161.7725 179.0347 161.7432 178.9604 161.6475 c
171.603 152.2549 175.1245 136.0225 180.939 129.29 C
175.4077 133.2725 170.5229 141.9229 170.5991 153.6826 c
170.6011 153.8057 170.5151 153.9092 170.394 153.9326 c
170.2749 153.958 170.1558 153.8916 170.1108 153.7783 c
166.0015 143.5264 168.1812 124.5303 179.3921 113.9268 C
176.5073 113.5303 173.5249 113.5811 170.2671 114.6201 c
170.1519 114.6553 170.0269 114.6064 169.9683 114.501 c
169.9097 114.3936 169.9331 114.2607 170.0269 114.1826 c
174.1187 110.7275 179.8413 109.6416 185.2925 109.6416 C
180.5952 115.1416 182.1558 126.1963 189.6479 126.1963 c
194.9956 126.1963 197.4233 117.8975 193.2944 113.415 c
193.2163 113.3291 193.2065 113.2002 193.269 113.1045 c
193.3335 113.0068 193.4546 112.9639 193.5659 113.0029 c
198.3452 114.6572 203.5112 118.792 203.5112 124.0186 c
203.5112 129.0615 198.6987 133.4131 191.7104 133.0693 C
200.5288 135.5752 209.7612 132.8018 214.5913 126.8174 c
214.6655 126.7236 214.7964 126.6963 214.9019 126.749 c
215.0093 126.8037 215.064 126.9248 215.0347 127.04 c
212.2437 137.7568 203.0679 142.2393 191.5952 140.7471 C
200.8765 144.5029 214.8452 141.2275 221.019 133.4365 c
221.0913 133.3447 221.2183 133.3154 221.3257 133.3643 c
221.4312 133.415 221.4897 133.5322 221.4663 133.6455 c
220.0952 140.2607 216.603 145.208 210.8433 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2261 166.4502 m
237.2046 166.3311 237.1011 166.2432 236.98 166.2432 c
224.0737 166.1064 212.2261 162.9756 203.0093 154.7275 C
211.0386 160.2861 225.9507 162.2373 234.5366 158.3467 c
234.646 158.2959 234.7046 158.1748 234.6772 158.0576 c
234.6519 157.9404 234.5444 157.8584 234.4233 157.8604 c
223.7437 158.1514 215.144 154.8545 208.439 148.8975 C
215.3081 148.4736 221.0132 144.1572 220.9956 139.0518 c
220.9956 138.9326 220.9116 138.8291 220.7944 138.8037 c
220.6792 138.7803 220.5601 138.8389 220.5112 138.9482 c
219.3901 141.4365 215.7632 142.7295 211.9292 141.8291 c
207.7495 140.8467 204.9292 137.6396 205.6284 134.6631 c
206.0991 132.6494 208.064 131.2607 210.5796 130.876 c
210.7065 130.8564 210.8003 130.7471 210.7964 130.6182 c
210.7925 130.4912 210.6948 130.3857 210.5659 130.3721 c
209.4976 130.2705 208.3862 130.2666 207.2495 130.376 c
200.7593 130.9932 195.7358 134.9697 195.3003 139.5537 C
190.5874 139.0068 186.4155 136.3955 184.9214 132.7803 c
184.8765 132.6709 184.7632 132.6084 184.646 132.626 c
184.5308 132.6436 184.4429 132.7393 184.4331 132.8564 c
184.0562 137.6064 185.6909 140.6943 189.4038 143.71 C
184.019 141.6514 177.9585 141.5459 172.1479 144.2471 c
172.0425 144.2979 171.9839 144.4131 172.0054 144.5283 c
172.0288 144.6436 172.1284 144.7275 172.2456 144.7314 c
177.1245 144.9209 180.6616 146.4873 183.978 149.8037 C
165.7222 144.6689 150.8901 156.0049 156.0229 172.8545 c
156.0581 172.9717 156.1694 173.0459 156.2905 173.0342 c
156.4116 173.0225 156.5073 172.9268 156.5171 172.8057 c
157.4351 163.0908 164.2202 156.6885 174.3784 155.7295 C
168.9917 157.7881 163.3784 162.7041 162.8218 171.2627 c
162.814 171.3857 162.894 171.4951 163.0132 171.5264 c
163.1323 171.5557 163.2554 171.4951 163.3062 171.3838 c
166.105 165.2295 171.603 162.1201 177.4663 161.5713 C
171.1323 164.1533 167.0698 170.1748 165.896 177.9932 c
165.8765 178.1162 165.9507 178.2334 166.0698 178.2725 c
166.187 178.3096 166.3159 178.2568 166.3726 178.1455 c
170.2378 170.5635 178.5288 165.3525 188.8198 169.335 c
199.437 173.4443 204.0933 185.7197 205.1226 194.374 c
205.1382 194.4971 205.2378 194.5908 205.3608 194.5986 c
205.4839 194.6045 205.5933 194.5225 205.6226 194.4033 c
209.3413 178.7139 202.0386 162.4541 188.9858 155.5635 C
196.0815 157.5654 202.4253 161.8232 206.0132 168.917 C
214.3062 169.9346 220.0171 172.7803 222.8706 178.1572 c
222.9272 178.2627 223.0503 178.3154 223.1655 178.2822 c
223.2808 178.2471 223.3569 178.1357 223.3472 178.0166 c
223.1655 175.9072 222.4058 171.6865 219.2729 169.7451 C
226.2378 169.7568 231.7788 168.8525 237.0718 166.7314 c
237.1831 166.6865 237.2495 166.5693 237.2261 166.4502 c
f
207.7397 219.9189 m
207.8394 219.8545 207.9683 219.8643 208.0562 219.9463 c
208.1421 220.0264 208.1597 220.1553 208.1011 220.2588 c
206.4819 223.0557 207.9604 227.0713 211.1519 227.0713 c
216.8726 227.0713 219.6226 216.3018 218.7476 206.4795 C
216.5854 212.2334 214.7144 214.5342 211.3999 217.2744 c
211.3062 217.3506 211.1714 217.3525 211.0776 217.2744 c
210.9839 217.1982 210.9565 217.0654 211.0151 216.958 c
215.8706 207.8799 216.9116 200.8936 216.9116 192.874 C
215.4487 198.8311 213.7163 202.1943 208.7847 207.2549 c
208.6987 207.3428 208.562 207.3564 208.4604 207.2861 c
208.3589 207.2158 208.3218 207.083 208.3726 206.9717 c
213.6714 195.3799 213.2671 182.5244 209.3198 172.708 c
209.2808 172.6104 209.3062 172.499 209.3823 172.4268 c
209.4604 172.3545 209.5718 172.3389 209.6675 172.3838 c
214.8726 174.9346 217.9312 176.6104 222.4194 182.7744 C
221.062 190.1729 222.1909 193.8213 225.5913 199.9678 C
221.6538 190.0518 223.7495 176.0752 233.7788 170.3779 c
233.8882 170.3154 234.0269 170.3428 234.103 170.4424 c
234.1812 170.542 234.1753 170.6826 234.0874 170.7744 c
230.3062 174.7295 227.5562 181.4092 229.9312 188.7002 C
228.4019 178.3115 237.5269 169.5869 247.7104 169.5869 c
257.311 169.5869 263.8618 177.0947 263.3208 184.5264 c
262.7837 191.8916 257.8774 195.4971 253.6479 197.0244 c
253.5366 197.0654 253.4116 197.0225 253.3491 196.9229 c
253.2847 196.8232 253.2983 196.6924 253.3823 196.6084 c
258.9927 190.915 259.7603 180.1162 249.7983 176.8486 C
255.6587 181.9053 253.4878 193.6768 244.1089 194.5732 c
243.9917 194.583 243.8823 194.5127 243.8452 194.4014 c
243.8062 194.292 243.8491 194.1689 243.9487 194.1064 c
245.9565 192.8271 247.6265 190.335 247.6265 187.5322 c
247.6265 182.8584 244.2046 181.0205 241.9507 181.0205 c
238.5288 181.0205 235.6909 184.2764 235.6909 189.2021 c
235.6909 195.0439 240.9507 199.8857 247.7104 200.6357 c
254.3374 201.3721 260.4946 198.4814 263.4614 194.1768 c
263.5317 194.0752 263.6626 194.04 263.7759 194.0908 c
263.8872 194.1416 263.9458 194.2646 263.9165 194.3838 c
260.897 206.0869 247.1187 211.2607 237.0269 203.8916 C
243.6401 211.3916 254.0327 211.4971 262.7505 203.8057 c
262.8403 203.7256 262.9751 203.7197 263.0728 203.7939 c
263.1685 203.8682 263.1997 203.999 263.145 204.1084 c
260.479 209.5146 253.8921 215.9268 244.5386 214.9932 c
235.9819 214.1377 231.0171 205.9775 230.0151 199.3018 C
229.4585 207.8232 231.4097 213.8369 238.769 219.4463 c
238.8667 219.5205 238.896 219.6533 238.8413 219.7627 c
238.7866 219.8721 238.6616 219.9268 238.5444 219.8916 c
231.7593 217.9326 226.314 214.4678 223.4956 207.3486 C
223.4956 213.5088 225.6343 219.7197 231.021 223.8584 c
231.1187 223.9326 231.1479 224.0654 231.0933 224.1748 c
231.0386 224.2822 230.9155 224.3369 230.7983 224.3037 c
227.3452 223.3213 224.6265 221.8154 222.6597 219.1201 C
221.3491 230.2197 216.1382 236.8096 210.1343 236.8096 c
206.0093 236.8096 202.9292 233.7764 202.9292 228.9404 c
202.9292 226.1104 204.4175 222.1377 207.7397 219.9189 c
f
108.5132 128.3018 m
111.6753 124.3975 118.0522 122.9092 124.9448 124.3135 C
124.4351 120.0107 125.2788 115.5225 126.5562 112.8271 c
126.6089 112.7197 126.73 112.6611 126.8472 112.6904 c
126.9644 112.7197 127.0444 112.8271 127.0405 112.9482 c
126.6655 121.7139 131.6636 128.79 140.4897 131.8564 C
133.5835 127.1006 131.564 117.6631 134.8511 112.792 c
134.9194 112.6924 135.0464 112.6533 135.1577 112.6982 c
135.269 112.7432 135.3335 112.8604 135.312 112.9795 c
134.939 115.04 135.9175 117.6631 138.0249 119.7041 c
140.9312 122.5186 144.8745 123.1572 146.8354 121.1338 c
148.7974 119.1084 148.0337 115.1865 145.1284 112.374 c
144.0679 111.3467 142.8687 110.6104 141.6792 110.1885 c
141.5659 110.1475 141.4976 110.0342 141.5132 109.917 c
141.5269 109.7979 141.6226 109.7061 141.7417 109.6963 c
148.1313 109.1416 152.5112 112.9482 155.2573 117.5732 c
158.0522 122.2783 162.8276 125.9854 168.4683 125.2451 c
168.5874 125.2295 168.7007 125.2998 168.7417 125.4131 c
168.7808 125.5264 168.7358 125.6514 168.6323 125.7139 c
165.8354 127.3975 162.7612 128.0967 158.769 126.7666 C
164.564 131.6748 172.8159 134.5068 180.6089 131.9932 c
180.7183 131.958 180.8374 132.001 180.8999 132.0967 c
180.9624 132.1924 180.9526 132.3193 180.8745 132.4053 c
174.9663 138.9697 163.1851 139.1006 155.7651 133.7764 C
158.8022 138.0928 162.8335 141.2627 170.0581 142.2549 c
170.1733 142.2705 170.2632 142.3643 170.2769 142.4795 c
170.2886 142.5947 170.2222 142.7041 170.1128 142.7451 c
161.8218 145.8213 153.5132 142.7002 146.6675 134.5283 C
149.6606 140.9072 154.5737 146.0146 161.4351 148.542 c
161.5503 148.583 161.6187 148.7002 161.5972 148.8213 c
161.5776 148.9424 161.4741 149.0303 161.353 149.0322 c
157.4097 149.1143 153.8667 148.1748 149.0884 145.4619 C
152.5952 151.1533 151.8276 161.1006 146.7183 167.7217 c
146.6479 167.8135 146.5229 167.8447 146.4155 167.7998 c
146.3101 167.7529 146.2476 167.6396 146.2671 167.5244 c
147.4478 160.3252 144.9683 152.1963 140.6577 147.8838 C
142.8101 155.5146 140.6636 162.46 134.7612 167.5264 c
134.6909 167.5869 134.5913 167.6045 134.5054 167.5713 c
134.4175 167.5381 134.3569 167.46 134.3433 167.3682 c
133.1089 157.9502 122.5737 148.3936 113.7417 147.5928 c
113.6167 147.5811 113.519 147.4814 113.5112 147.3564 c
113.5034 147.2314 113.5854 147.1201 113.7085 147.0928 c
117.9878 146.124 122.3999 146.6025 126.0972 148.1221 C
123.437 145.1904 120.1577 143.0127 116.5425 141.8779 c
116.4253 141.8408 116.353 141.7275 116.3667 141.6064 c
116.3804 141.4854 116.48 141.3896 116.6011 141.3818 c
121.1108 141.0713 125.5249 142.3877 129.3315 144.9209 C
124.9702 138.2998 118.3511 133.376 109.9038 131.4131 c
109.7827 131.3857 109.7007 131.2744 109.7065 131.1514 c
109.7144 131.0283 109.8101 130.9287 109.9331 130.915 c
121.8511 129.6123 131.6792 134.2334 138.1538 142.833 C
136.5054 137.9307 131.7886 133.0771 125.2085 130.2139 c
119.3628 127.6689 113.3589 127.2666 108.7866 128.7041 c
108.6812 128.7373 108.564 128.6963 108.5015 128.6045 c
108.439 128.5107 108.4429 128.3877 108.5132 128.3018 c
f
161.4175 203.874 m
156.6108 193.3877 156.9526 185.1885 160.8237 174.8193 c
160.8687 174.7021 160.9897 174.6338 161.1128 174.6592 c
161.2358 174.6846 161.3218 174.7959 161.3159 174.9189 c
160.6948 187.542 164.1421 196.5732 171.6147 202.7275 C
163.3647 192.874 167.2612 173.167 180.437 173.167 c
190.0229 173.167 197.9526 181.1436 199.8921 190.6924 c
199.9175 190.8135 199.8511 190.9346 199.7339 190.9795 c
199.6187 191.0244 199.4878 190.9795 199.4253 190.8721 c
196.5835 186.1104 192.0171 183.0205 186.9683 183.0205 c
178.8335 183.0205 176.4272 189.4873 176.4272 194.0205 c
176.4272 200.2061 181.353 205.3623 185.1343 205.3623 c
188.5718 205.3623 190.1753 202.54 190.1753 200.4365 c
190.1753 196.5381 187.1772 193.2705 183.8003 192.2725 c
183.6792 192.2354 183.603 192.1182 183.6206 191.9932 c
183.6382 191.8682 183.7437 191.7744 183.8706 191.7744 c
187.9761 191.749 191.4468 193.6279 193.4995 197.3428 C
193.769 194.4678 193.771 192.6572 192.8589 189.6182 c
192.8237 189.501 192.8765 189.376 192.9839 189.3193 c
193.0933 189.2646 193.2261 189.292 193.3003 189.3896 c
200.6577 198.7822 197.1362 215.0127 191.3218 221.7471 C
196.853 217.7646 201.7378 209.1123 201.6616 197.3525 c
201.6597 197.2314 201.7456 197.126 201.8667 197.1025 c
201.9858 197.0791 202.105 197.1436 202.1499 197.2568 c
206.2593 207.5107 204.0796 226.5049 192.8687 237.1084 C
195.7534 237.5068 198.7358 237.4561 201.9937 236.417 c
202.1089 236.3799 202.2339 236.4307 202.2925 236.5361 c
202.3511 236.6416 202.3276 236.7744 202.2339 236.8525 c
198.1421 240.3076 192.4194 241.3936 186.9683 241.3936 C
191.6655 235.8936 190.105 224.8408 182.6147 224.8408 c
177.2651 224.8408 174.8374 233.1396 178.9663 237.6221 c
179.0444 237.708 179.0542 237.835 178.9917 237.9326 c
178.9272 238.0303 178.8062 238.0713 178.6948 238.0342 c
173.9155 236.3779 168.7495 232.2451 168.7495 227.0166 c
168.7495 221.9756 173.562 217.6221 180.5522 217.9658 C
171.7319 215.4619 162.4995 218.2334 157.6694 224.2197 c
157.5952 224.3115 157.4644 224.3408 157.3589 224.2861 c
157.2515 224.2334 157.1968 224.1123 157.2261 223.9951 c
160.0171 213.2803 169.1929 208.7959 180.6655 210.29 C
171.3843 206.5322 157.4155 209.8076 151.2417 217.5986 c
151.1694 217.6904 151.0425 217.7217 150.9351 217.6709 c
150.8296 217.6221 150.771 217.5049 150.7944 217.3896 c
152.1655 210.7744 155.6577 205.8291 161.4175 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8491 184.9287 51.6968 188.0615 60.9136 196.3086 C
52.8843 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1792 192.8857 48.7788 196.1816 55.4839 202.1396 C
48.6147 202.5615 42.9097 206.8799 42.9272 211.9844 c
42.9272 212.1035 43.0112 212.2061 43.1284 212.2314 c
43.2437 212.2568 43.3628 212.1963 43.4116 212.0879 c
44.5327 209.5986 48.1597 208.3076 51.9937 209.208 c
56.1733 210.1885 58.9937 213.3975 58.2944 216.373 c
57.8237 218.3877 55.8589 219.7764 53.3433 220.1602 c
53.2163 220.1787 53.1226 220.29 53.1265 220.418 c
53.1304 220.5459 53.228 220.6514 53.3569 220.6631 c
54.4253 220.7656 55.5366 220.7695 56.6733 220.6611 c
63.1636 220.0439 68.187 216.0654 68.6226 211.4834 C
73.3354 212.0303 77.5073 214.6396 79.0015 218.2568 c
79.0464 218.3652 79.1616 218.4287 79.2769 218.4111 c
79.3921 218.3916 79.48 218.2969 79.4897 218.1807 c
79.8667 213.4287 78.2319 210.3418 74.519 207.3262 C
79.9038 209.3857 85.9644 209.4912 91.7749 206.7881 c
91.8804 206.7393 91.939 206.624 91.9175 206.5088 c
91.894 206.3936 91.7944 206.3096 91.6772 206.3057 c
86.7983 206.1152 83.2612 204.5498 79.9468 201.2334 C
98.2007 206.3672 113.0327 195.0322 107.8999 178.1807 c
107.8647 178.0654 107.7534 177.9902 107.6323 178.0029 c
107.5112 178.0146 107.4155 178.1104 107.4058 178.2314 c
106.4878 187.9453 99.7026 194.3467 89.5444 195.3076 C
94.9312 193.2471 100.5444 188.3311 101.1011 179.7734 c
101.1089 179.6514 101.0288 179.54 100.9097 179.5107 c
100.7905 179.4814 100.6675 179.54 100.6167 179.6514 c
97.8179 185.8057 92.3198 188.917 86.4565 189.4639 C
92.7905 186.8838 96.853 180.8623 98.0269 173.0439 c
98.0464 172.9209 97.9722 172.8018 97.853 172.7646 c
97.7358 172.7256 97.6069 172.7803 97.5503 172.8896 c
93.6851 180.4727 85.394 185.6836 75.103 181.7021 c
64.4858 177.5928 59.8296 165.3154 58.8003 156.6611 c
58.7847 156.54 58.6851 156.4463 58.562 156.4385 c
58.439 156.4307 58.3296 156.5127 58.3003 156.6338 c
54.5815 172.3213 61.8843 188.583 74.937 195.4736 C
67.8413 193.4707 61.4976 189.2139 57.9097 182.1191 C
49.6167 181.1006 43.9058 178.2568 41.0522 172.8799 c
40.9956 172.7725 40.8726 172.7197 40.7573 172.7549 c
40.6421 172.7881 40.5659 172.8994 40.5757 173.0205 c
40.7573 175.1299 41.5171 179.3506 44.6499 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1831 131.1162 m
56.0835 131.1826 55.9546 131.1709 55.8667 131.0908 c
55.7808 131.0088 55.7632 130.8799 55.8218 130.7783 c
57.4409 127.9814 55.9624 123.9639 52.771 123.9639 c
47.0503 123.9639 44.3003 134.7334 45.1753 144.5576 C
47.3374 138.8018 49.2085 136.5029 52.5229 133.7627 c
52.6167 133.6846 52.7515 133.6846 52.8452 133.7607 c
52.939 133.8389 52.9663 133.9697 52.9077 134.0771 c
48.0522 143.1572 47.0112 150.1436 47.0112 158.1631 C
48.4741 152.2041 50.2065 148.8408 55.1382 143.7822 c
55.2241 143.6943 55.3608 143.6807 55.4624 143.749 c
55.564 143.8193 55.6011 143.9521 55.5503 144.0654 c
50.2515 155.6553 50.6558 168.5127 54.603 178.3291 c
54.6421 178.4268 54.6167 178.5381 54.5405 178.6104 c
54.4624 178.6807 54.3511 178.6982 54.2554 178.6514 c
49.0503 176.1006 45.9917 174.4248 41.5034 168.2627 C
42.8608 160.8643 41.7319 157.2139 38.3311 151.0674 C
42.269 160.9854 40.1733 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4272 143.6885 C
40.4272 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2964 129.2197 41.2632 131.917 C
42.5737 120.8174 47.7847 114.2256 53.7886 114.2256 c
57.9136 114.2256 60.9937 117.2588 60.9937 122.0967 c
60.9937 124.9268 59.5054 128.8994 56.1831 131.1162 c
f
155.4097 222.7354 m
152.2476 226.6396 145.8706 228.1279 138.978 226.7236 C
139.4878 231.0244 138.644 235.5146 137.3667 238.208 c
137.314 238.3174 137.1929 238.375 137.0757 238.3467 c
136.9585 238.3174 136.8784 238.21 136.8823 238.0889 c
137.2573 229.3223 132.2593 222.2451 123.4331 219.1787 C
130.3394 223.9346 132.3589 233.3721 129.0718 238.2451 c
129.0034 238.3438 128.8765 238.3828 128.7651 238.3369 c
128.6538 238.292 128.5894 238.1748 128.6108 238.0576 c
128.9839 235.9971 128.0054 233.373 125.8979 231.3311 c
122.9917 228.5166 119.0483 227.8779 117.0874 229.9014 c
115.1265 231.9268 115.8901 235.8486 118.7944 238.6631 c
119.855 239.6904 121.0542 240.4248 122.2437 240.8477 c
122.3569 240.8877 122.4253 241.001 122.4097 241.1191 c
122.396 241.2383 122.3003 241.3301 122.1812 241.3398 c
115.7925 241.8945 111.4116 238.0879 108.6655 233.4619 c
105.8706 228.7568 101.0952 225.0518 95.4546 225.792 c
95.3354 225.8076 95.2222 225.7373 95.1812 225.624 c
95.1421 225.5107 95.187 225.3838 95.2905 225.3223 c
98.0874 223.6377 101.1616 222.9385 105.1538 224.2705 C
99.3589 219.3613 91.1069 216.5283 83.314 219.043 c
83.2046 219.0791 83.0854 219.0361 83.0229 218.9395 c
82.9604 218.8428 82.9722 218.7168 83.0483 218.6318 c
88.9565 212.0674 100.7378 211.9365 108.1577 217.2588 C
105.1206 212.9424 101.0894 209.7744 93.8647 208.7803 c
93.7495 208.7646 93.6597 208.6729 93.646 208.5576 c
93.6343 208.4414 93.7007 208.332 93.8101 208.292 c
102.1011 205.2139 110.4097 208.3369 117.2554 216.5068 C
114.2632 210.1299 109.3491 205.0225 102.4878 202.4951 c
102.3726 202.4531 102.3042 202.335 102.3257 202.2158 c
102.3452 202.0947 102.4487 202.0059 102.5698 202.0029 c
106.5132 201.9219 110.0562 202.8604 114.8354 205.5732 C
111.3276 199.8838 112.0952 189.9346 117.2046 183.3154 c
117.2749 183.2236 117.3999 183.1914 117.5073 183.2373 c
117.6128 183.2842 117.6753 183.3965 117.6558 183.5107 c
116.4761 190.7119 118.9546 198.8408 123.2651 203.1533 C
121.1128 195.5215 123.2593 188.5771 129.1616 183.5088 c
129.2319 183.4482 129.3315 183.4316 129.4175 183.4648 c
129.5054 183.498 129.5659 183.5771 129.5796 183.6689 c
130.814 193.0869 141.3491 202.6436 150.1812 203.4443 c
150.3062 203.4551 150.4038 203.5557 150.4116 203.6797 c
150.4194 203.8037 150.3374 203.917 150.2144 203.9443 c
145.9351 204.9131 141.5229 204.4346 137.8257 202.9131 C
140.4858 205.8467 143.7651 208.0244 147.3804 209.1592 c
147.4976 209.1953 147.5698 209.3096 147.5562 209.4307 c
147.5425 209.5518 147.4429 209.6455 147.3218 209.6543 c
142.812 209.9658 138.3979 208.6484 134.5913 206.1162 C
138.9526 212.7373 145.5718 217.6611 154.019 219.6221 c
154.1401 219.6504 154.2222 219.7607 154.2163 219.8848 c
154.2085 220.0088 154.1128 220.1084 153.9897 220.1221 c
142.0718 221.4238 132.2437 216.8037 125.769 208.2041 C
127.4175 213.1045 132.1343 217.96 138.7144 220.8232 c
144.5601 223.3682 150.564 223.7695 155.1362 222.333 c
155.2417 222.2998 155.3589 222.3398 155.4214 222.4326 c
155.4839 222.5244 155.48 222.6475 155.4097 222.7354 c
f
102.5054 147.1631 m
107.312 157.6494 106.9702 165.8486 103.0991 176.2178 c
103.0542 176.335 102.9331 176.4023 102.8101 176.3779 c
102.687 176.3525 102.6011 176.2412 102.6069 176.1162 c
103.228 163.4951 99.7808 154.4619 92.3081 148.3096 C
100.5581 158.1611 96.6616 177.8691 83.4858 177.8691 c
73.8999 177.8691 65.9702 169.8936 64.0308 160.3447 c
64.0054 160.2236 64.0718 160.1006 64.189 160.0576 c
64.3042 160.0127 64.4351 160.0576 64.4976 160.1631 c
67.3394 164.9248 71.9058 168.0146 76.9546 168.0146 c
85.0894 168.0146 87.4956 161.5479 87.4956 157.0166 c
87.4956 150.8291 82.5698 145.6729 78.7886 145.6729 c
75.3511 145.6729 73.7476 148.4971 73.7476 150.6006 c
73.7476 154.499 76.7456 157.7666 80.1245 158.7646 c
80.2437 158.7998 80.3218 158.9189 80.3042 159.0439 c
80.2847 159.1689 80.1792 159.2607 80.0542 159.2627 c
75.9468 159.2881 72.4761 157.4072 70.4233 153.6943 C
70.1538 156.5693 70.1519 158.3799 71.064 161.417 c
71.0991 161.5342 71.0464 161.6592 70.939 161.7158 c
70.8296 161.7725 70.6968 161.7432 70.6226 161.6475 c
63.2651 152.2549 66.7866 136.0225 72.6011 129.29 C
67.0698 133.2725 62.1851 141.9229 62.2612 153.6826 c
62.2632 153.8057 62.1772 153.9092 62.0562 153.9326 c
61.937 153.958 61.8179 153.8916 61.7729 153.7783 c
57.6636 143.5264 59.8433 124.5303 71.0542 113.9268 C
68.1694 113.5303 65.187 113.5811 61.9292 114.6201 c
61.814 114.6553 61.689 114.6064 61.6304 114.501 c
61.5718 114.3936 61.5952 114.2607 61.689 114.1826 c
65.7808 110.7275 71.5034 109.6416 76.9546 109.6416 C
72.2573 115.1416 73.8179 126.1963 81.3101 126.1963 c
86.6577 126.1963 89.0854 117.8975 84.9565 113.415 c
84.8784 113.3291 84.8687 113.2002 84.9312 113.1045 c
84.9956 113.0068 85.1167 112.9639 85.228 113.0029 c
90.0073 114.6572 95.1733 118.792 95.1733 124.0186 c
95.1733 129.0615 90.3608 133.4131 83.3726 133.0693 C
92.1909 135.5752 101.4233 132.8018 106.2534 126.8174 c
106.3276 126.7236 106.4585 126.6963 106.564 126.749 c
106.6714 126.8037 106.7261 126.9248 106.6968 127.04 c
103.9058 137.7568 94.73 142.2393 83.2573 140.7471 C
92.5386 144.5029 106.5073 141.2275 112.6812 133.4365 c
112.7534 133.3447 112.8804 133.3154 112.9878 133.3643 c
113.0933 133.415 113.1519 133.5322 113.1284 133.6455 c
111.7573 140.2607 108.2651 145.208 102.5054 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8882 166.4502 m
128.8667 166.3311 128.7632 166.2432 128.6421 166.2432 c
115.7358 166.1064 103.8882 162.9756 94.6714 154.7275 C
102.7007 160.2861 117.6128 162.2373 126.1987 158.3467 c
126.3081 158.2959 126.3667 158.1748 126.3394 158.0576 c
126.314 157.9404 126.2065 157.8584 126.0854 157.8604 c
115.4058 158.1514 106.8062 154.8545 100.1011 148.8975 C
106.9702 148.4736 112.6753 144.1572 112.6577 139.0518 c
112.6577 138.9326 112.5737 138.8291 112.4565 138.8037 c
112.3413 138.7803 112.2222 138.8389 112.1733 138.9482 c
111.0522 141.4365 107.4253 142.7295 103.5913 141.8291 c
99.4116 140.8467 96.5913 137.6396 97.2905 134.6631 c
97.7612 132.6494 99.7261 131.2607 102.2417 130.876 c
102.3687 130.8564 102.4624 130.7471 102.4585 130.6182 c
102.4546 130.4912 102.3569 130.3857 102.228 130.3721 c
101.1597 130.2705 100.0483 130.2666 98.9116 130.376 c
92.4214 130.9932 87.3979 134.9697 86.9624 139.5537 C
82.2495 139.0068 78.0776 136.3955 76.5835 132.7803 c
76.5386 132.6709 76.4253 132.6084 76.3081 132.626 c
76.1929 132.6436 76.105 132.7393 76.0952 132.8564 c
75.7183 137.6064 77.353 140.6943 81.0659 143.71 C
75.6812 141.6514 69.6206 141.5459 63.8101 144.2471 c
63.7046 144.2979 63.646 144.4131 63.6675 144.5283 c
63.6909 144.6436 63.7905 144.7275 63.9077 144.7314 c
68.7866 144.9209 72.3237 146.4873 75.6401 149.8037 C
57.3843 144.6689 42.5522 156.0049 47.6851 172.8545 c
47.7202 172.9717 47.8315 173.0459 47.9526 173.0342 c
48.0737 173.0225 48.1694 172.9268 48.1792 172.8057 c
49.0972 163.0908 55.8823 156.6885 66.0405 155.7295 C
60.6538 157.7881 55.0405 162.7041 54.4839 171.2627 c
54.4761 171.3857 54.5562 171.4951 54.6753 171.5264 c
54.7944 171.5557 54.9175 171.4951 54.9683 171.3838 c
57.7671 165.2295 63.2651 162.1201 69.1284 161.5713 C
62.7944 164.1533 58.7319 170.1748 57.5581 177.9932 c
57.5386 178.1162 57.6128 178.2334 57.7319 178.2725 c
57.8491 178.3096 57.978 178.2568 58.0347 178.1455 c
61.8999 170.5635 70.1909 165.3525 80.4819 169.335 c
91.0991 173.4443 95.7554 185.7197 96.7847 194.374 c
96.8003 194.4971 96.8999 194.5908 97.0229 194.5986 c
97.146 194.6045 97.2554 194.5225 97.2847 194.4033 c
101.0034 178.7139 93.7007 162.4541 80.6479 155.5635 C
87.7437 157.5654 94.0874 161.8232 97.6753 168.917 C
105.9683 169.9346 111.6792 172.7803 114.5327 178.1572 c
114.5894 178.2627 114.7124 178.3154 114.8276 178.2822 c
114.9429 178.2471 115.019 178.1357 115.0093 178.0166 c
114.8276 175.9072 114.0679 171.6865 110.9351 169.7451 C
117.8999 169.7568 123.4409 168.8525 128.7339 166.7314 c
128.8452 166.6865 128.9116 166.5693 128.8882 166.4502 c
f
99.4019 219.9189 m
99.5015 219.8545 99.6304 219.8643 99.7183 219.9463 c
99.8042 220.0264 99.8218 220.1553 99.7632 220.2588 c
98.144 223.0557 99.6226 227.0713 102.814 227.0713 c
108.5347 227.0713 111.2847 216.3018 110.4097 206.4795 C
108.2476 212.2334 106.3765 214.5342 103.062 217.2744 c
102.9683 217.3506 102.8335 217.3525 102.7397 217.2744 c
102.646 217.1982 102.6187 217.0654 102.6772 216.958 c
107.5327 207.8799 108.5737 200.8936 108.5737 192.874 C
107.1108 198.8311 105.3784 202.1943 100.4468 207.2549 c
100.3608 207.3428 100.2241 207.3564 100.1226 207.2861 c
100.021 207.2158 99.9839 207.083 100.0347 206.9717 c
105.3335 195.3799 104.9292 182.5244 100.9819 172.708 c
100.9429 172.6104 100.9683 172.499 101.0444 172.4268 c
101.1226 172.3545 101.2339 172.3389 101.3296 172.3838 c
106.5347 174.9346 109.5933 176.6104 114.0815 182.7744 C
112.7241 190.1729 113.853 193.8213 117.2534 199.9678 C
113.3159 190.0518 115.4116 176.0752 125.4409 170.3779 c
125.5503 170.3154 125.689 170.3428 125.7651 170.4424 c
125.8433 170.542 125.8374 170.6826 125.7495 170.7744 c
121.9683 174.7295 119.2183 181.4092 121.5933 188.7002 C
120.064 178.3115 129.189 169.5869 139.3726 169.5869 c
148.9722 169.5869 155.5229 177.0947 154.9819 184.5264 c
154.4448 191.8916 149.5386 195.4971 145.3101 197.0244 c
145.1987 197.0654 145.0737 197.0225 145.0112 196.9229 c
144.9468 196.8232 144.9604 196.6924 145.0444 196.6084 c
150.6538 190.915 151.4214 180.1162 141.4604 176.8486 C
147.3198 181.9053 145.1499 193.6768 135.771 194.5732 c
135.6538 194.583 135.5444 194.5127 135.5073 194.4014 c
135.4683 194.292 135.5112 194.1689 135.6108 194.1064 c
137.6187 192.8271 139.2886 190.335 139.2886 187.5322 c
139.2886 182.8584 135.8667 181.0205 133.6128 181.0205 c
130.1909 181.0205 127.353 184.2764 127.353 189.2021 c
127.353 195.0439 132.6128 199.8857 139.3726 200.6357 c
145.9995 201.3721 152.1558 198.4814 155.1226 194.1768 c
155.1929 194.0752 155.3237 194.04 155.437 194.0908 c
155.5483 194.1416 155.6069 194.2646 155.5776 194.3838 c
152.5581 206.0869 138.7808 211.2607 128.689 203.8916 C
135.3022 211.3916 145.6948 211.4971 154.4116 203.8057 c
154.5015 203.7256 154.6362 203.7197 154.7339 203.7939 c
154.8296 203.8682 154.8608 203.999 154.8062 204.1084 c
152.1401 209.5146 145.5542 215.9268 136.2007 214.9932 c
127.644 214.1377 122.6792 205.9775 121.6772 199.3018 C
121.1206 207.8232 123.0718 213.8369 130.4312 219.4463 c
130.5288 219.5205 130.5581 219.6533 130.5034 219.7627 c
130.4487 219.8721 130.3237 219.9268 130.2065 219.8916 c
123.4214 217.9326 117.9761 214.4678 115.1577 207.3486 C
115.1577 213.5088 117.2964 219.7197 122.6831 223.8584 c
122.7808 223.9326 122.8101 224.0654 122.7554 224.1748 c
122.7007 224.2822 122.5776 224.3369 122.4604 224.3037 c
119.0073 223.3213 116.2886 221.8154 114.3218 219.1201 C
113.0112 230.2197 107.8003 236.8096 101.7964 236.8096 c
97.6714 236.8096 94.5913 233.7764 94.5913 228.9404 c
94.5913 226.1104 96.0796 222.1377 99.4019 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.4585 119.1084 39.6948 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.7925 109.1416 44.1733 112.9482 46.9194 117.5732 c
49.7144 122.2783 54.4897 125.9854 60.1304 125.2451 c
60.2495 125.2295 60.3628 125.2998 60.4038 125.4131 c
60.4429 125.5264 60.3979 125.6514 60.2944 125.7139 c
57.4976 127.3975 54.4233 128.0967 50.4312 126.7666 C
56.2261 131.6748 64.478 134.5068 72.271 131.9932 c
72.3804 131.958 72.4995 132.001 72.562 132.0967 c
72.6245 132.1924 72.6147 132.3193 72.5366 132.4053 c
66.6284 138.9697 54.8472 139.1006 47.4272 133.7764 C
50.4644 138.0928 54.4956 141.2627 61.7202 142.2549 c
61.8354 142.2705 61.9253 142.3643 61.939 142.4795 c
61.9507 142.5947 61.8843 142.7041 61.7749 142.7451 c
53.4839 145.8213 45.1753 142.7002 38.3291 134.5283 C
41.3218 140.9072 46.2358 146.0146 53.0972 148.542 c
53.2124 148.583 53.2808 148.7002 53.2593 148.8213 c
53.2397 148.9424 53.1362 149.0303 53.0151 149.0322 c
49.0718 149.1143 45.5288 148.1748 40.7495 145.4619 C
44.2573 151.1533 43.4897 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1089 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0796 203.874 m
48.2729 193.3877 48.6147 185.1885 52.4858 174.8193 c
52.5308 174.7021 52.6519 174.6338 52.7749 174.6592 c
52.8979 174.6846 52.9839 174.7959 52.978 174.9189 c
52.3569 187.542 55.8042 196.5732 63.2769 202.7275 C
55.0269 192.874 58.9233 173.167 72.0991 173.167 c
81.6851 173.167 89.6147 181.1436 91.5542 190.6924 c
91.5796 190.8135 91.5132 190.9346 91.396 190.9795 c
91.2808 191.0244 91.1499 190.9795 91.0874 190.8721 c
88.2456 186.1104 83.6792 183.0205 78.6304 183.0205 c
70.4956 183.0205 68.0894 189.4873 68.0894 194.0205 c
68.0894 200.2061 73.0151 205.3623 76.7964 205.3623 c
80.2339 205.3623 81.8374 202.54 81.8374 200.4365 c
81.8374 196.5381 78.8394 193.2705 75.4624 192.2725 c
75.3413 192.2354 75.2651 192.1182 75.2827 191.9932 c
75.3003 191.8682 75.4058 191.7744 75.5327 191.7744 c
79.6382 191.749 83.1089 193.6279 85.1616 197.3428 C
85.4312 194.4678 85.4331 192.6572 84.521 189.6182 c
84.4858 189.501 84.5386 189.376 84.646 189.3193 c
84.7554 189.2646 84.8882 189.292 84.9624 189.3896 c
92.3198 198.7822 88.7983 215.0127 82.9839 221.7471 C
88.5151 217.7646 93.3999 209.1123 93.3237 197.3525 c
93.3218 197.2314 93.4077 197.126 93.5288 197.1025 c
93.6479 197.0791 93.7671 197.1436 93.812 197.2568 c
97.9214 207.5107 95.7417 226.5049 84.5308 237.1084 C
87.4155 237.5068 90.3979 237.4561 93.6558 236.417 c
93.771 236.3799 93.896 236.4307 93.9546 236.5361 c
94.0132 236.6416 93.9897 236.7744 93.896 236.8525 c
89.8042 240.3076 84.0815 241.3936 78.6304 241.3936 C
83.3276 235.8936 81.7671 224.8408 74.2769 224.8408 c
68.9272 224.8408 66.4995 233.1396 70.6284 237.6221 c
70.7065 237.708 70.7163 237.835 70.6538 237.9326 c
70.5894 238.0303 70.4683 238.0713 70.3569 238.0342 c
65.5776 236.3779 60.4116 232.2451 60.4116 227.0166 c
60.4116 221.9756 65.2241 217.6221 72.2144 217.9658 C
63.394 215.4619 54.1616 218.2334 49.3315 224.2197 c
49.2573 224.3115 49.1265 224.3408 49.021 224.2861 c
48.9136 224.2334 48.8589 224.1123 48.8882 223.9951 c
51.6792 213.2803 60.855 208.7959 72.3276 210.29 C
63.0464 206.5322 49.0776 209.8076 42.9038 217.5986 c
42.8315 217.6904 42.7046 217.7217 42.5972 217.6709 c
42.4917 217.6221 42.4331 217.5049 42.4565 217.3896 c
43.8276 210.7744 47.3198 205.8291 53.0796 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 7)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3918.3342 3918.3022 m
-3826.3972 3918.3022 L
-3826.3972 3915.0667 L
-3918.3342 3915.0667 L
-3918.3342 3918.3022 L
n
u
0 O
0.698207 0.674464 0.638605 0.739437 0.137255 0.121569 0.12549 Xa
-3826.3972 3917.3499 m
-3826.3489 3917.2639 -3826.3762 3917.0686 -3826.5095 3917.1072 C
-3826.6042 3917.4382 L
-3826.3972 3917.3499 L
f
-3827.2944 3916.7368 m
-3827.4512 3916.8972 -3827.6321 3917.1792 -3827.5305 3917.4832 C
-3827.3752 3917.1653 -3827.3376 3917.2979 -3827.1704 3916.9192 C
-3827.0369 3916.8806 -3826.9375 3917.0254 -3826.96 3917.1472 C
-3826.9128 3917.0623 -3826.7527 3917.22 -3826.6809 3917.0122 C
-3826.8545 3916.7559 -3827.0745 3916.7456 -3827.3042 3916.9573 C
-3827.3535 3916.8843 -3827.3057 3916.7979 -3827.2944 3916.7368 C
f
-3840.3323 3916.2207 m
-3840.2483 3916.26 L
-3840.2712 3916.2383 -3840.3 3916.2263 -3840.3323 3916.2207 C
f
-3848.4104 3916.0391 m
-3848.3489 3916.0313 -3848.3232 3915.9983 -3848.3201 3915.9683 C
-3848.3772 3915.99 -3848.4241 3916.0103 -3848.4104 3916.0391 C
f
-3849.7896 3915.6743 m
-3849.76 3915.6848 -3849.7351 3915.6895 -3849.7083 3915.6968 C
-3849.7393 3915.6663 -3849.7705 3915.6494 -3849.7896 3915.6743 C
f
-3840.3323 3916.2207 m
-3840.5481 3916.1167 L
-3840.5632 3916.2246 -3840.4375 3916.1968 -3840.3323 3916.2207 C
f
-3829.0923 3917.5352 m
-3829.0471 3917.5193 -3829.0095 3917.4883 -3828.9751 3917.448 C
-3829.0122 3917.4624 -3829.0481 3917.4744 -3829.0852 3917.4832 C
-3829.0872 3917.501 -3829.0889 3917.5166 -3829.0923 3917.5352 C
f
-3836.7712 3915.9524 m
-3836.7056 3915.9519 L
-3836.6863 3915.9143 -3836.6682 3915.8687 -3836.6511 3915.8174 C
-3836.7712 3915.9524 L
f
-3834.0383 3915.9016 m
-3834.1001 3915.8894 -3834.1216 3916.1704 -3834.1453 3916.2932 C
-3834.1104 3916.1775 -3834.0647 3916.1223 -3834.0105 3916.1006 C
-3834.0095 3916.0471 -3834.0176 3915.9832 -3834.0383 3915.9016 C
f
-3829.7048 3916.396 m
-3829.6279 3916.3574 L
-3829.6479 3916.3694 -3829.6816 3916.3806 -3829.7048 3916.396 C
f
-3838.7273 3915.8916 m
-3838.7319 3915.8499 -3838.7417 3915.813 -3838.7522 3915.7913 C
-3838.7522 3915.8264 -3838.7424 3915.8599 -3838.7273 3915.8916 C
f
-3915.1663 3918.0039 m
-3915.1641 3917.9839 -3915.1672 3917.9712 -3915.1665 3917.9539 C
-3915.1824 3917.9822 -3915.1873 3918.0022 -3915.1663 3918.0039 C
f
-3918.3342 3916.6118 m
-3918.2903 3916.5967 L
-3918.2856 3916.5435 -3918.2808 3916.4912 -3918.2808 3916.4392 C
-3918.3342 3916.6118 L
f
-3852.3137 3915.3142 m
-3852.3088 3915.3174 -3852.3071 3915.3174 -3852.3025 3915.3196 C
-3852.2361 3915.2876 -3852.2737 3915.2932 -3852.3137 3915.3142 C
f
-3875.4856 3915.5215 m
-3875.2231 3915.7727 -3875.9128 3915.844 -3875.5176 3916.1233 C
-3875.5544 3916.0132 -3875.1584 3915.6848 -3875.4856 3915.5215 C
f
-3829.1631 3917.4983 m
-3829.2 3917.5015 -3829.2375 3917.5039 -3829.2751 3917.501 C
-3829.2241 3917.5103 -3829.1897 3917.5095 -3829.1631 3917.4983 C
f
-3875.5176 3916.1233 m
-3875.5176 3916.1243 -3875.5176 3916.1255 Y
-3875.4768 3916.1519 L
-3875.4937 3916.1404 -3875.5032 3916.1328 -3875.5176 3916.1233 C
f
-3858.1296 3915.4832 m
-3858.1177 3915.5327 -3858.0945 3915.5703 -3858.0703 3915.6062 C
-3858.0723 3915.5774 -3858.0857 3915.5422 -3858.1296 3915.4832 C
f
-3853.7969 3915.8831 m
-3853.9041 3915.8455 L
-3853.8616 3915.8711 -3853.8271 3915.8799 -3853.7969 3915.8831 C
f
-3860.3792 3915.8799 m
-3860.4375 3915.8584 -3860.4573 3915.8196 -3860.5369 3915.8574 C
-3860.5295 3915.8716 -3860.5222 3915.8816 -3860.5127 3915.8916 C
-3860.4839 3915.8533 -3860.4456 3915.8352 -3860.3792 3915.8799 C
f
-3862.7207 3915.8816 m
-3862.7083 3915.9031 -3862.6919 3915.9192 -3862.6775 3915.9382 C
-3862.6543 3915.9326 -3862.6272 3915.9282 -3862.6033 3915.9231 C
-3862.7207 3915.8816 L
f
-3908.0503 3917.8687 m
-3908.1016 3917.7896 -3908.1335 3917.7024 -3908.1584 3917.6162 C
-3908.1223 3917.8159 -3908.4663 3917.8872 -3908.0503 3917.8687 C
f
-3829.0935 3917.3772 m
-3829.1072 3917.448 -3829.1272 3917.4832 -3829.1631 3917.4983 C
-3829.1362 3917.4951 -3829.1104 3917.4895 -3829.0852 3917.4832 C
-3829.0784 3917.4414 -3829.0769 3917.4019 -3829.0935 3917.3772 C
f
-3860.4744 3918.0974 m
-3860.8464 3918.0559 L
-3860.7424 3918.0833 -3860.6072 3918.0974 -3860.4744 3918.0974 C
f
-3891.2522 3917.8286 m
-3891.3376 3917.8623 L
-3891.3047 3917.8687 -3891.2744 3917.8606 -3891.2522 3917.8286 C
f
-3861.9504 3918.0974 m
-3862.0168 3917.9983 -3862.0872 3917.9407 -3862.1599 3917.9031 C
-3862.1753 3917.9253 -3862.1929 3917.9431 -3862.2031 3917.9756 C
-3861.9504 3918.0974 L
f
-3908.1592 3917.6133 m
-3908.1584 3917.6143 -3908.1584 3917.6162 Y
-3908.1584 3917.6143 -3908.1592 3917.6133 V
f
*u
-3910.6096 3918.2808 m
-3910.2551 3918.2888 -3910.4431 3917.9192 -3910.3679 3917.7073 C
-3909.9448 3917.6023 -3910.1721 3917.979 -3910.0281 3918.1682 C
-3909.7639 3918.0703 -3909.5613 3917.7312 -3909.3643 3917.7456 C
-3909.3496 3917.8064 -3909.3113 3917.8286 -3909.3562 3917.9048 C
-3909.0769 3917.6111 -3908.5271 3917.8904 -3908.2017 3917.5215 C
-3908.1775 3917.5542 -3908.1653 3917.5852 -3908.1592 3917.6133 C
-3908.2119 3917.4282 -3908.22 3917.24 -3908.2092 3917.1062 C
-3908.0503 3917.0999 -3907.9143 3916.8728 -3907.8545 3917.1143 C
-3907.9519 3917.1072 -3907.96 3917.2046 -3908.0056 3917.28 C
-3907.8391 3917.1753 L
-3907.6892 3917.5222 -3908.0664 3917.2952 -3908.0664 3917.552 C
-3907.7417 3917.4392 -3907.3633 3917.1519 -3907.1145 3917.25 C
-3907.0625 3917.5896 -3907.6963 3917.3643 -3907.3643 3917.6663 C
-3907.7493 3917.5366 L
-3907.4551 3918.0723 -3907.9832 3917.4993 -3907.7129 3918.0723 C
-3907.2063 3918.1707 -3907.1462 3917.8992 -3906.6409 3917.9983 C
-3906.5271 3917.8096 -3906.6785 3917.7192 -3906.5647 3917.5303 C
-3905.8464 3917.1912 -3905.9993 3918.3843 -3905.4712 3917.9319 C
-3905.3345 3917.7056 -3905.2815 3917.2759 -3904.9055 3917.5032 C
-3905.0337 3917.8872 L
-3904.5432 3917.9253 -3904.7537 3917.3352 -3904.24 3917.5935 C
-3904.3313 3917.7444 -3904.6255 3917.7207 -3904.5513 3917.7664 C
-3904.2185 3918.0696 -3904.3159 3917.5486 -3904.0601 3917.5486 C
-3904.0071 3917.8887 L
-3903.4849 3917.8352 -3902.9097 3917.5896 -3902.3313 3917.5276 C
-3902.3633 3917.6287 -3902.4624 3917.7351 -3902.3271 3917.8391 C
-3901.5977 3917.6692 -3900.77 3917.8806 -3900.0664 3918.0823 C
-3899.7976 3917.7888 L
-3899.7351 3917.792 -3899.6816 3917.9214 -3899.7493 3917.9783 C
-3899.4751 3918.0896 -3899.7351 3917.792 -3899.6033 3917.6768 C
-3899.4473 3917.6563 -3899.3972 3917.8455 -3899.4961 3917.9336 C
-3899.0122 3917.6848 -3898.1177 3917.3975 -3897.6079 3917.7119 C
-3897.7073 3917.7991 L
-3897.3103 3917.9182 -3897.2593 3917.1975 -3896.8911 3917.4712 C
-3896.9617 3917.5232 L
-3896.1001 3917.6504 -3895.1479 3917.3816 -3894.4905 3917.8247 C
-3894.3655 3917.4019 -3893.6377 3918.0132 -3893.5823 3917.4236 C
-3893.0903 3917.7158 -3893.2312 3917.8213 -3892.5383 3918.0176 C
-3892.3533 3918.0447 -3892.2625 3917.6494 -3892.0337 3917.5879 C
-3892.0281 3917.896 L
-3891.7175 3917.5728 L
-3891.5522 3917.9414 L
-3891.3376 3917.8623 L
-3891.4231 3917.844 -3891.5193 3917.7239 -3891.5063 3917.6353 C
-3891.1711 3917.4956 -3890.6892 3917.8499 -3890.6809 3918.0078 C
-3889.8879 3917.7471 L
-3889.9055 3917.8711 -3890.0383 3917.9136 -3890.1433 3917.9927 c
-3889.72 3917.6782 -3890.0664 3918.3174 -3889.6785 3918.0291 C
-3889.7305 3917.959 -3889.6504 3917.8455 -3889.6416 3917.7832 C
-3889.4482 3917.9695 -3889.0081 3917.9712 -3888.6824 3917.8926 C
-3888.7449 3918.105 L
-3888.1567 3918.1592 -3887.5049 3918.0032 -3886.8447 3918.0071 C
-3887.0815 3917.9082 -3887.0271 3917.5398 -3886.8335 3917.5044 C
-3886.7561 3917.8303 L
-3886.6311 3917.6287 -3886.9583 3917.7073 -3886.7017 3917.4607 C
-3886.4551 3917.4983 -3886.5359 3917.8311 -3886.6775 3917.9373 C
-3886.3777 3917.8242 L
-3886.3601 3917.9214 -3886.4304 3917.9727 -3886.4487 3918.0967 C
-3886.3257 3917.8943 -3885.9312 3918.4236 -3885.7537 3918.0723 C
-3885.7368 3918.1692 L
-3885.0769 3918.1719 -3884.7776 3918.0598 -3884.24 3918.0435 C
-3884.2295 3917.7622 -3884.0193 3917.8247 -3883.8591 3917.5974 C
-3883.4641 3917.6873 -3883.0256 3917.9082 -3882.5496 3917.8843 C
-3882.2151 3917.7444 -3882.4519 3917.6462 -3882.3015 3917.479 C
-3882.2769 3917.7351 -3881.8015 3917.7112 -3882.0481 3917.8953 C
-3881.4768 3917.8535 -3881.3184 3917.844 -3880.5959 3917.636 C
-3880.6743 3917.5313 -3880.7625 3917.4856 -3880.7168 3917.3982 C
-3880.5857 3917.3562 -3880.4185 3917.5056 -3880.4373 3917.6287 C
-3880.4719 3917.6553 L
-3879.6609 3917.271 -3878.6001 3918.4019 -3877.9543 3917.8679 C
-3877.9905 3917.8943 L
-3877.3208 3917.6162 L
-3877.0127 3917.6604 -3877.5056 3917.8086 -3877.2776 3917.9673 C
-3876.5552 3917.5398 -3876.1362 3918.0291 -3875.5413 3917.7444 C
-3875.0808 3918.5 -3873.9072 3917.6912 -3873.2856 3918.1736 C
-3873.3215 3917.9956 L
-3873.1609 3917.8213 -3873.1272 3918.0974 -3873.0088 3918.1382 C
-3873.0256 3918 -3873.1831 3917.9783 -3873.0833 3917.8816 C
-3871.7224 3917.667 -3870.2744 3918.1416 -3868.8792 3918.3022 c
-3868.3689 3918.3499 -3868.5896 3917.3816 -3867.9463 3917.8064 C
-3868.1289 3918.1367 L
-3867.0991 3917.7407 -3866.0232 3918.1504 -3865.0151 3917.8142 C
-3865.0752 3917.8904 -3865.0769 3917.9895 -3865.1753 3917.9883 C
-3864.9624 3918.2283 -3864.3879 3918 -3864.3843 3917.8042 C
-3864.2273 3917.8264 -3864.3479 3917.9812 -3864.2512 3918.0808 C
-3864.0376 3918.2224 -3863.7151 3917.7744 -3863.6016 3918.0132 c
-3863.5823 3918.052 -3863.6616 3918.0911 -3863.7007 3918.1096 C
-3863.5615 3917.9934 -3863.0522 3918.1392 -3863.1855 3917.8623 C
-3862.8071 3917.9944 -3862.4617 3917.7393 -3862.1599 3917.9031 C
-3861.9631 3917.5935 -3861.5122 3918.052 -3861.4497 3917.6143 C
-3861.4768 3918.0667 -3860.7864 3917.979 -3860.5471 3917.7664 C
-3860.6272 3917.9031 -3860.3391 3917.9082 -3860.4329 3918.0974 C
-3860.1599 3918.0911 -3859.9097 3918.0071 -3859.9573 3917.7747 C
-3859.4543 3918.3159 -3858.9463 3917.3391 -3858.6631 3918.0327 C
-3857.8521 3917.7896 -3857.1016 3917.625 -3856.3721 3917.5193 C
-3856.3984 3917.9702 -3857.1785 3917.5642 -3857.1472 3918.0376 C
-3856.4551 3917.8518 -3856.0559 3917.4646 -3855.3696 3917.5735 C
-3855.1919 3917.6353 -3855.4705 3917.7693 -3855.5305 3917.8462 C
-3854.8391 3917.6604 -3854.1936 3917.8872 -3853.5784 3917.6416 C
-3853.5801 3917.6836 -3853.6465 3917.7295 -3853.7092 3917.7639 C
-3853.5879 3917.7493 -3853.4272 3917.8303 -3853.4409 3917.625 C
-3853.5591 3917.6807 L
-3853.7527 3917.3831 -3853.0776 3917.0591 -3853.0559 3916.9019 C
-3853.2617 3917.4895 -3852.4482 3917.0496 -3852.7751 3917.792 C
-3852.6953 3917.7534 -3852.5952 3917.6563 -3852.6135 3917.5193 C
-3852.4951 3917.5591 -3852.4575 3917.6392 -3852.5776 3917.7952 C
-3852.1433 3917.6836 -3852.2976 3917.4656 -3851.9041 3917.4702 C
-3851.9055 3917.5696 -3851.9849 3917.6079 -3852.0256 3917.7246 C
-3851.8264 3917.5313 -3851.6262 3917.3374 -3851.2937 3917.4214 C
-3851.3137 3917.4812 -3851.2751 3917.5591 -3851.3743 3917.5576 C
-3850.8032 3917.5276 -3850.4009 3917.0422 -3849.7744 3917.229 C
-3849.9592 3917.6604 -3849.5613 3917.3711 -3849.5281 3917.7444 C
-3849.1912 3917.6331 L
-3849.3264 3917.4519 L
-3849.0313 3917.4583 -3848.7705 3917.1863 -3848.5168 3917.3086 C
-3848.7361 3917.4624 L
-3848.1831 3917.3916 L
-3848.4961 3917.25 L
-3848.1975 3917.0576 -3848.5281 3916.7776 -3848.1353 3916.8816 C
-3848.2151 3916.9199 -3847.8401 3916.8862 -3847.6863 3917.1062 C
-3847.6873 3917.1062 -3847.6873 3917.1072 V
-3847.5413 3916.9883 -3847.3911 3916.8633 -3847.1729 3916.9558 C
-3847.1162 3917.0752 -3847.2185 3917.3687 -3847.1816 3917.448 C
-3847.0376 3917.136 -3846.4905 3917.3616 -3846.3081 3917.0291 C
-3846.3689 3917.1072 -3846.3721 3917.303 -3846.3521 3917.3433 C
-3846.2312 3917.0896 L
-3846.0945 3917.1707 -3846.0745 3917.21 -3846.0967 3917.3662 C
-3845.6855 3917.4126 -3846.2273 3916.8926 -3845.7393 3917.0967 C
-3845.7776 3917.1172 -3845.7593 3917.1553 -3845.8391 3917.1936 C
-3845.3489 3917.3 -3844.8921 3917.0327 -3844.4417 3917.1575 C
-3844.3088 3917.5332 -3844.8352 3917.2495 -3844.6831 3917.5664 C
-3844.0337 3917.4983 -3843.3384 3917.1162 -3842.71 3917.2046 C
-3842.8271 3917.1631 L
-3842.74 3916.6328 -3842.3591 3917.4253 -3842.0413 3917.1753 C
-3842.1191 3917.2144 -3842.1433 3917.4695 -3842.1223 3917.4104 C
-3841.6919 3917.4956 -3841.2424 3917.28 -3840.5903 3917.1133 C
-3840.6711 3917.2495 L
-3840.4175 3917.3711 -3840.0032 3917.3196 -3839.7292 3917.3816 C
-3839.6479 3917.2456 -3839.4912 3917.2678 -3839.5864 3917.0696 C
-3838.7417 3917.8455 -3837.9751 3916.6536 -3837.2256 3917.3 C
-3837.3152 3917.3015 -3837.4392 3917.4192 -3837.3679 3917.4199 C
-3836.7295 3917.2942 L
-3836.78 3917.063 -3836.8132 3917.1543 -3836.9473 3916.9744 C
-3836.8665 3916.8374 -3836.6863 3916.7312 -3836.5281 3916.7312 C
-3836.8152 3916.8843 -3836.5256 3917.1023 -3836.4016 3917.2312 C
-3836.4224 3917.1604 -3836.3799 3917.0823 -3836.3904 3917.0103 C
-3836.0569 3917.4214 -3836.3345 3916.5454 -3835.8792 3916.8223 C
-3835.9033 3916.9436 L
-3835.7329 3916.8816 -3835.5759 3916.7212 -3835.3921 3916.7559 C
-3835.3159 3917.0232 -3835.5735 3916.8806 -3835.5852 3917.1006 C
-3835.3271 3917.0852 -3835.0759 3916.5942 -3834.8423 3916.8606 C
-3834.9519 3916.9351 -3835.1096 3916.9363 -3835.2192 3917.0103 C
-3834.9648 3917.3242 -3834.9353 3917.2444 -3834.7463 3917.2942 C
-3834.7649 3917.2871 L
-3834.3279 3917.4292 L
-3834.4392 3917.344 L
-3834.1162 3916.6472 -3833.7815 3917.2168 -3833.3464 3916.7603 c
-3833.7693 3917.1924 -3833.4163 3917.0103 -3833.4487 3917.313 C
-3833.3376 3917.3972 -3833.1687 3917.4915 -3833.2168 3917.5767 C
-3833.0112 3917.3323 -3832.8735 3917.7693 -3832.5833 3917.4119 C
-3832.5703 3917.5095 -3832.3633 3917.4214 -3832.4097 3917.6663 C
-3832.1423 3917.5896 -3832.4729 3917.4966 -3832.4504 3917.3743 C
-3832.0383 3917.0413 -3831.4817 3917.7783 -3830.8889 3917.3213 C
-3830.3777 3917.1331 -3830.2832 3916.8042 -3829.8088 3916.6404 C
-3829.6487 3916.7964 -3829.9399 3916.9956 Y
-3829.6816 3917.1392 -3829.4873 3917.1128 -3829.2439 3917.001 C
-3829.2932 3917.0862 -3829.2424 3917.1582 -3829.1682 3917.2678 C
-3828.9729 3917.2422 -3829.0376 3916.9126 -3828.78 3917.0564 C
-3828.8242 3917.1653 -3828.8809 3917.3391 -3828.9751 3917.448 C
-3828.7449 3917.3584 -3828.5176 3917.1763 -3828.2793 3917.0884 C
-3828.2161 3917.2583 -3828.4231 3917.3462 -3828.5071 3917.4573 C
-3828.2393 3917.3806 -3827.8132 3917.303 -3827.7305 3917.0342 C
-3827.9023 3916.9382 L
-3827.8047 3916.9253 -3827.8521 3917.1692 -3827.9241 3917.2183 C
-3828.1536 3917.4292 -3828.2551 3917.125 -3828.2681 3917.0271 C
-3828.0984 3916.9646 L
-3828.2727 3916.3926 -3828.78 3917.0564 -3829.1216 3917.0232 C
-3828.9792 3916.6072 L
-3829.3296 3916.9524 L
-3829.4041 3916.844 -3829.4551 3916.6118 -3829.2864 3916.5496 C
-3829.5313 3916.344 -3829.5032 3916.6975 -3829.7136 3916.4683 C
-3829.7368 3916.4326 -3829.7263 3916.4126 -3829.7048 3916.396 C
-3829.9441 3916.52 L
-3829.8972 3916.4326 -3829.9839 3916.2263 -3829.8369 3916.2864 C
-3830.2664 3916.0464 -3830.5295 3916.5984 -3830.6912 3916.2832 C
-3830.6553 3916.2576 L
-3831.2512 3916.3982 -3830.7129 3916.563 -3831.1599 3916.9214 C
-3831.4607 3916.1682 L
-3831.5193 3916.4734 L
-3831.5808 3916.4624 -3831.7024 3916.4395 -3831.6799 3916.3174 C
-3831.9087 3916.5264 -3831.6409 3916.4502 -3831.7737 3916.6475 C
-3832.0696 3916.3694 -3832.5896 3916.7776 -3832.6563 3916.2913 C
-3832.7625 3916.5232 -3832.3733 3916.4702 -3832.6892 3916.6316 C
-3832.7793 3916.1084 -3833.0544 3916.7212 -3833.3247 3916.4812 C
-3833.2417 3916.2112 -3832.9856 3916.3542 -3833.2561 3916.1133 C
-3833.4192 3916.5696 -3833.7825 3916.0132 -3834.0105 3916.1006 C
-3834.0212 3916.4639 -3834.5063 3916.2522 -3834.8889 3916.3733 C
-3834.8647 3916.251 -3835.6089 3916.1736 -3835.9648 3916.0422 C
-3835.9543 3915.9812 L
-3836.0232 3916.3484 -3836.3904 3916.2791 -3836.6577 3916.355 C
-3836.6472 3916.1353 -3836.5991 3916.0486 -3836.4543 3915.9502 C
-3836.7056 3915.9519 L
-3836.7649 3916.0696 -3836.8433 3916.1316 -3837.0063 3916.1736 C
-3836.9431 3915.8992 L
-3837.2776 3915.9143 -3837.6167 3916.2224 -3838.0471 3916.0391 C
-3838.0713 3916.2952 -3837.7048 3916.7522 -3838.1599 3916.9231 C
-3838.1768 3916.7847 -3838.1936 3916.5479 -3838.0745 3916.4912 c
-3838.1135 3916.5095 -3838.2136 3916.6062 -3838.2922 3916.5471 C
-3838.1104 3916.3142 L
-3838.3064 3916.2119 -3838.2129 3916.5088 -3838.3696 3916.4871 C
-3838.3665 3916.2896 -3838.4856 3916.3462 -3838.4631 3916.1895 C
-3838.4231 3916.1704 -3838.3264 3916.271 -3838.2664 3916.1936 C
-3838.4431 3916.1582 -3838.6567 3916.0413 -3838.7273 3915.8916 C
-3838.7119 3916.0039 -3838.7273 3916.1575 -3838.8567 3916.1831 C
-3839.1912 3916.1975 -3838.9712 3915.9456 -3839.1663 3915.844 C
-3839.2473 3915.9812 -3839.4607 3915.8391 -3839.4663 3916.1343 C
-3839.5642 3916.1328 -3839.5823 3915.9951 -3839.6201 3915.9153 C
-3839.7932 3916.0454 -3840.4287 3915.9524 -3840.2336 3916.2664 C
-3840.1892 3916.2871 L
-3840.1975 3916.2932 -3840.2073 3916.2935 -3840.2175 3916.3 C
-3840.2161 3916.3 -3840.2175 3916.3 -3840.2161 3916.3 C
-3840.2175 3916.3 L
-3840.7849 3916.5935 -3841.3962 3916.1328 -3841.9592 3916.2593 C
-3841.9583 3916.1604 L
-3842.2944 3916.2732 -3842.7063 3916.2271 -3842.9463 3916.4395 C
-3843.0457 3916.4392 -3843.1809 3916.2593 -3843.1384 3916.1416 C
-3843.3953 3916.2158 -3843.4241 3916.3267 -3843.7952 3916.1638 C
-3843.5369 3915.9915 -3843.8843 3916.0112 -3843.5305 3916.0376 C
-3843.8643 3915.9524 -3843.9399 3915.7942 -3844.2983 3916.0642 C
-3844.1763 3915.8113 -3844.5496 3915.7456 -3844.7083 3915.8213 C
-3844.4744 3916.0022 L
-3844.6528 3916.0391 -3844.8088 3916.0166 -3844.9673 3915.9951 C
-3844.8816 3915.6624 L
-3845.5647 3915.2576 -3846.1135 3916.3511 -3846.6335 3915.6736 C
-3846.8142 3915.9063 -3846.2625 3915.8374 -3846.4241 3916.1096 C
-3846.7383 3916.0647 -3847.0657 3915.5872 -3847.1641 3915.5862 C
-3847.5945 3915.4019 -3847.5657 3916.0723 -3848.0161 3915.9463 C
-3847.9585 3916.0647 -3847.9041 3916.3816 -3848.2407 3916.4934 C
-3848.5552 3916.4495 -3848.6272 3915.9956 -3848.4287 3915.9004 C
-3848.3533 3915.8904 -3848.3169 3915.9282 -3848.3201 3915.9683 C
-3848.2185 3915.9253 -3848.0852 3915.8743 -3848.2097 3915.7456 C
-3848.2505 3915.8643 L
-3848.4065 3915.7432 -3848.8391 3915.7559 -3848.7375 3915.5613 C
-3848.9751 3915.6743 -3848.8391 3915.7559 -3848.6631 3915.8174 C
-3849.0664 3915.6455 -3849.2932 3915.8123 -3849.7083 3915.6968 C
-3849.6423 3915.7622 -3849.5815 3915.9016 -3849.6472 3915.9004 C
-3850.2561 3915.7534 -3849.9153 3916.1255 -3850.3279 3916.1775 C
-3850.5623 3915.9966 -3850.2439 3915.7456 -3850.6592 3915.8972 C
-3850.9128 3915.7747 -3850.7129 3915.5823 -3850.6121 3915.4856 C
-3850.9905 3915.7144 -3851.3191 3915.3352 -3851.5352 3915.2932 C
-3851.3359 3915.1975 L
-3851.4551 3915.2544 -3851.5527 3915.2527 -3851.6521 3915.2522 C
-3851.5383 3915.4895 L
-3851.6553 3915.448 -3851.7544 3915.4473 -3851.7522 3915.3484 C
-3851.8728 3915.5039 -3851.6599 3915.7432 -3851.8992 3915.9558 C
-3852.0552 3915.8352 -3852.3743 3916.0852 -3852.4282 3915.7703 C
-3851.9375 3915.8772 -3852.4824 3915.4539 -3852.0671 3915.4031 C
-3852.1472 3915.4407 -3852.2449 3915.4392 -3852.3623 3915.3975 C
-3852.3799 3915.3623 -3852.3457 3915.3323 -3852.3137 3915.3142 C
-3852.7832 3915.0327 -3852.5295 3915.6704 -3853.0161 3915.6631 C
-3852.9543 3915.4856 -3853.1289 3915.3264 -3853.2083 3915.3643 C
-3853.0122 3915.3679 -3853.1145 3915.6604 -3853.2944 3915.7964 C
-3853.6064 3915.6582 -3853.6335 3915.8992 -3853.7969 3915.8831 C
-3853.6104 3915.948 L
-3853.6736 3916.1255 -3853.8296 3916.1023 -3854.0471 3916.1582 C
-3854.0657 3916.02 -3853.8496 3916.063 -3853.9272 3916.0022 C
-3854.1687 3916.3142 -3854.4729 3915.6792 -3854.8096 3915.8894 C
-3854.9656 3915.7693 -3854.8247 3915.5559 -3854.9617 3915.4744 C
-3855.3391 3915.7046 -3855.3704 3915.2312 -3855.7671 3915.4214 C
-3855.6528 3915.6599 -3855.6328 3915.6016 -3855.9121 3915.8342 C
-3855.26 3915.6663 L
-3855.6785 3916.0132 L
-3855.4817 3916.0166 -3855.2632 3915.8633 -3855.1453 3915.9038 C
-3855.3447 3916.0984 -3855.3242 3916.0391 -3855.23 3916.2371 C
-3855.4993 3915.8792 -3855.7639 3916.4456 -3856.0752 3916.2039 C
-3856.0657 3915.6133 L
-3856.5337 3915.3499 -3856.8972 3915.9163 -3857.5049 3915.7678 C
-3857.3096 3915.8704 L
-3857.3911 3916.105 -3857.6848 3915.9031 -3857.8816 3915.9983 C
-3857.8633 3915.8008 -3857.9863 3915.729 -3858.0703 3915.6062 C
-3858.0601 3915.7527 -3858.5151 3915.5928 -3858.5703 3915.9871 C
-3858.8416 3915.7271 L
-3859.3323 3915.6206 -3859.4016 3916.2896 -3859.8733 3916.2224 C
-3859.7312 3916.0078 -3859.9456 3915.8679 -3859.6296 3915.7144 C
-3859.7871 3915.7124 -3859.9287 3915.6763 -3859.9312 3915.813 C
-3860.0232 3915.6895 -3860.3679 3916.0791 -3860.5127 3915.8916 C
-3860.5791 3915.9783 -3860.6008 3916.1851 -3860.7776 3916.1687 C
-3860.7969 3916.1287 -3860.7769 3916.0713 Y
-3860.7776 3916.1687 -3861.0537 3916.2039 -3860.8992 3916.4224 C
-3861.3843 3915.8064 -3862.2551 3916.4673 -3862.6775 3915.9382 C
-3863.0212 3916.0044 -3863.4353 3916.0679 -3863.7473 3916.0823 C
-3863.7273 3916.0232 -3863.7463 3915.9839 -3863.6873 3916.0044 C
-3864.1177 3915.8208 -3863.9519 3916.5713 -3864.4417 3916.3662 C
-3864.6919 3916.0471 -3864.1816 3916.1936 -3864.3376 3916.0728 C
-3864.4055 3915.4231 -3864.9287 3916.1614 -3865.2583 3915.7822 C
-3865.1785 3915.7439 L
-3865.4304 3915.5232 -3865.7932 3915.99 -3866.2048 3915.9436 C
-3866.1848 3915.8862 -3866.2024 3915.8455 V
-3866.4839 3916.1768 -3867.0168 3916.2864 -3867.4128 3916.3784 C
-3867.2896 3916.1243 -3867.2329 3916.2439 -3867.3081 3915.9856 C
-3867.4856 3916.0222 -3867.2561 3916.4004 -3867.6104 3916.4727 C
-3867.7256 3916.3335 -3867.9812 3916.2119 -3868.0151 3915.9363 C
-3867.6809 3915.9214 L
-3867.8521 3915.5647 -3868.1135 3915.9336 -3868.2896 3915.8716 C
-3868.2671 3915.7158 L
-3868.7793 3915.7664 -3868.7864 3916.1592 -3869.3369 3916.1311 C
-3869.28 3916.2493 L
-3869.5808 3916.6382 -3869.5322 3916.0303 -3869.8323 3916.3196 C
-3869.9231 3915.9248 L
-3870.1216 3916.02 -3870.6184 3916.3064 -3870.9744 3916.3806 C
-3870.7727 3916.0879 -3870.3562 3915.9382 -3870.0984 3915.7644 C
-3870.2952 3915.7615 -3870.7671 3915.7935 -3870.8696 3915.9883 C
-3870.7903 3915.9502 -3870.6904 3915.8535 -3870.6121 3915.9143 C
-3870.8535 3916.2246 -3871.1711 3916.3772 -3871.5632 3916.3704 C
-3871.4937 3915.605 -3872.5852 3916.1775 -3872.8696 3915.5833 C
-3873.5632 3915.8662 -3874.2456 3915.4624 -3875.0537 3915.5078 C
-3874.7671 3916.1033 -3875.2896 3915.5247 -3875.24 3916.136 C
-3875.4282 3916.1753 -3875.5 3916.1653 -3875.5168 3916.1255 C
-3876.0872 3915.7603 L
-3876.2224 3915.5823 -3875.9082 3915.6255 -3875.9255 3915.4883 C
-3876.3376 3915.4414 -3876.0984 3915.229 -3876.3711 3915.0667 C
-3876.3152 3915.2854 -3876.5144 3915.3799 -3876.7493 3915.2964 C
-3876.4185 3915.5784 L
-3876.9944 3915.9038 -3876.9163 3915.0652 -3877.4968 3915.3875 C
-3877.3132 3915.1951 L
-3877.6111 3915.3086 -3878.4121 3915.1912 -3878.7041 3915.6824 C
-3878.7568 3915.6118 -3878.8264 3915.4446 -3878.6953 3915.4004 C
-3879.4072 3915.3267 -3880.28 3915.9231 -3880.8333 3915.6206 C
-3880.7793 3915.4712 L
-3880.9121 3915.5144 -3881.0105 3915.7522 -3881.1768 3915.6016 C
-3881.1682 3915.5398 -3881.1233 3915.4524 -3881.1848 3915.4436 C
-3881.2551 3915.4951 -3881.5376 3915.7056 -3881.7136 3915.6184 C
-3881.5632 3915.4502 L
-3882.2576 3915.2544 -3882.6289 3915.8599 -3883.2112 3915.9624 C
-3883.2097 3915.5222 -3883.7561 3915.3792 -3884.0288 3915.3079 C
-3884.0193 3915.2456 L
-3884.8279 3915.1912 -3885.3928 3915.6104 -3886.1416 3915.7832 C
-3886.6064 3915.3054 -3887.7161 3915.5833 -3888.4631 3915.3152 C
-3888.3489 3915.3953 -3888.4817 3915.6582 -3888.6145 3915.7024 C
-3888.7898 3915.6133 -3889.0991 3916.0078 -3889.0713 3915.604 C
-3889.0088 3915.6118 L
-3889.1409 3915.2158 -3889.5012 3915.3213 -3889.7825 3915.3103 C
-3889.8289 3915.8384 L
-3890.5647 3915.0703 -3891.7568 3916.1206 -3892.1584 3915.4326 C
-3892.3359 3915.5647 -3892.5559 3915.563 -3892.7319 3915.6951 C
-3892.7224 3915.4119 L
-3893.2144 3915.3396 -3893.46 3915.3042 -3894.0681 3915.3716 C
-3893.9441 3915.1692 L
-3894.2871 3915.1511 -3894.3772 3915.9856 -3894.6936 3916.0022 C
-3894.7888 3915.5796 L
-3895.3872 3915.5862 -3895.9929 3915.2151 -3896.5842 3915.5984 C
-3896.5745 3915.5366 -3896.5569 3915.4143 -3896.46 3915.3972 C
-3896.7417 3915.3862 -3897.5496 3915.1111 -3897.4473 3915.6912 C
-3897.4543 3915.3135 -3898.0647 3915.6543 -3898.3879 3915.8208 C
-3898.3376 3915.5422 L
-3898.6104 3915.8982 -3898.6191 3915.9956 -3899 3916.0942 C
-3899.0903 3916.0579 -3899.0791 3915.8711 -3898.9592 3915.9424 C
-3899.26 3915.7964 -3899.1936 3916.2063 -3899.5583 3916.0579 C
-3899.4224 3915.8799 L
-3899.7319 3915.8584 -3899.7073 3915.9539 -3899.8777 3916.1614 C
-3900.0723 3916.2732 -3900.4648 3916.0911 -3900.5105 3915.8391 C
-3900.5522 3915.9927 -3900.7217 3916.1982 -3900.9041 3916.1255 C
-3900.9287 3916.0303 -3900.8623 3915.9712 -3900.8289 3915.9424 C
-3901.3464 3915.7527 -3901.5984 3916.2664 -3901.9543 3915.9927 C
-3901.9617 3915.9004 -3901.9849 3915.8542 -3902.0144 3915.8264 C
-3901.6033 3915.8333 -3901.2722 3915.8484 -3901.3032 3915.8687 C
-3901.3032 3915.6118 -3901.6353 3915.5667 -3901.3711 3915.2119 C
-3901.6377 3915.4055 -3902.0935 3915.8264 -3902.4172 3915.7056 C
-3902.4329 3915.6807 -3902.4482 3915.6563 -3902.46 3915.6167 C
-3902.4265 3915.5879 L
-3902.5012 3915.5623 -3902.5681 3915.5862 -3902.6311 3915.6294 C
-3902.7344 3915.5872 -3902.8 3915.5559 -3902.8992 3915.552 C
-3902.9375 3915.3396 -3903.28 3915.4375 -3903.4456 3915.4272 C
-3903.4319 3915.7083 -3903.6487 3915.6631 -3903.4456 3915.8953 C
-3903.4719 3915.875 -3903.4143 3915.8616 -3903.3042 3915.8499 C
-3903.2793 3915.8416 -3903.25 3915.8374 -3903.2336 3915.8208 C
-3903.2368 3915.8286 -3903.2407 3915.8374 -3903.2449 3915.8455 C
-3903.1362 3915.8374 -3902.9944 3915.8311 -3902.8333 3915.8267 C
-3902.9641 3915.9695 -3903.1008 3916.0896 -3903.2839 3915.9336 C
-3903.3689 3916.1143 -3903.4624 3916.3 -3903.5151 3916.3872 C
-3903.7417 3915.9951 -3904.1785 3915.7832 -3904.2393 3915.5415 C
-3904.7449 3915.6992 -3905.4304 3915.6455 -3905.7483 3916.1736 C
-3905.8921 3916.2415 -3905.9136 3916.0222 -3905.9673 3915.9392 C
-3905.8843 3915.8862 -3905.7856 3915.8943 -3905.7407 3915.8184 C
-3906.0281 3915.9539 -3906.5923 3915.8711 -3906.6609 3916.24 C
-3907.0232 3916.0735 -3906.4573 3915.9004 -3906.9551 3915.9607 C
-3906.8879 3915.8479 L
-3907.8672 3915.2583 -3908.48 3916.7896 -3909.5657 3916.0327 C
-3909.4905 3916.0791 -3909.4529 3916.1006 -3909.4375 3916.1624 C
-3910.6753 3915.8286 -3911.9883 3916.4756 -3913.2097 3915.9463 C
-3913.5569 3915.8396 -3913.5945 3916.0752 -3913.8064 3916.2544 C
-3913.8816 3915.9524 L
-3914.2439 3916.3008 L
-3914.7576 3916.5559 -3915.1335 3915.5598 -3915.7839 3916.0422 C
-3915.7 3916.2456 L
-3915.9336 3916.2073 -3916.4399 3916.3655 -3916.4009 3916.1316 C
-3916.4248 3916.1687 -3916.4775 3916.3433 -3916.5688 3916.2371 C
-3916.5759 3916.0791 L
-3917.1497 3916.3499 L
-3917.5945 3916.2356 -3917.0801 3915.7227 -3917.7292 3915.6919 C
-3917.9705 3915.7527 -3918.4163 3916.1519 -3918.3257 3916.2576 C
-3918.2283 3916.2654 -3918.0769 3916.3562 -3918.0696 3916.5144 C
-3918.2903 3916.5967 L
-3918.3303 3917.0623 -3918.5 3917.5391 -3917.9583 3917.8643 C
-3917.5808 3917.5796 L
-3917.4592 3917.8054 L
-3917.7769 3917.8196 L
-3917.5967 3918.032 -3917.4824 3917.844 -3917.3545 3917.7151 C
-3917.3242 3917.8352 -3917.2712 3917.9192 -3917.1963 3917.9639 C
-3916.8257 3917.5193 L
-3916.7808 3917.7014 -3916.9919 3917.8806 -3916.7432 3917.9812 C
-3916.5696 3917.7747 -3916.9097 3917.5728 -3916.6223 3917.4373 C
-3916.4417 3917.6487 -3916.4944 3917.8213 -3916.2825 3917.6404 C
-3916.2527 3917.7603 -3916.2976 3917.8367 -3916.3816 3917.8894 C
-3916.1929 3917.7456 -3915.8823 3917.8286 -3915.7849 3917.5811 C
-3915.5967 3917.8423 -3915.1479 3917.5132 -3915.1665 3917.9539 C
-3915.1072 3917.8484 -3914.8342 3917.6079 -3914.6609 3917.5896 C
-3914.9775 3918.1172 -3914.0122 3917.6206 -3914.0959 3918.1863 C
-3913.8616 3917.7119 -3913.2495 3917.9756 -3912.8345 3917.7124 C
-3912.8577 3917.75 -3912.9033 3917.8264 -3912.9399 3917.8022 C
-3912.7063 3917.8416 -3912.6384 3917.9846 -3912.4883 3918.0742 C
-3912.4583 3917.6824 -3912.0945 3917.5928 -3911.8984 3917.3511 C
-3911.6121 3917.729 -3912.0723 3917.8113 -3911.9824 3918.1743 C
-3911.9968 3917.8567 -3911.4849 3917.8574 -3911.5823 3917.5928 C
-3911.3633 3917.8267 -3911.3936 3917.7063 -3911.2808 3918.0313 C
-3911.2424 3917.5413 -3911.0769 3917.948 -3910.8953 3917.6472 C
-3910.5784 3917.8887 -3910.8137 3918.1062 -3910.4656 3917.9573 C
-3910.3 3918.1072 -3910.6096 3918.2808 Y
f
1 D
-3902.3303 3917.4336 m
-3902.3303 3917.4363 -3902.3303 3917.4382 -3902.3303 3917.4392 C
-3902.4016 3917.4456 -3902.4624 3917.4512 -3902.5012 3917.4551 c
-3902.4656 3917.4512 -3902.4163 3917.4456 -3902.3303 3917.4336 C
f
-3901.6345 3917.4292 m
-3901.7192 3917.4182 -3901.8247 3917.4163 -3901.9363 3917.4182 C
-3901.9607 3917.3213 -3901.9343 3917.2212 -3901.8643 3917.2263 C
-3901.9023 3917.2913 -3901.7383 3917.3472 -3901.6345 3917.4292 C
f
-3903.1062 3915.4812 m
-3902.9961 3915.4414 -3902.9592 3915.4966 -3902.9441 3915.5542 C
-3902.9961 3915.5591 -3903.0569 3915.5686 -3903.1367 3915.5879 C
-3903.1399 3915.5984 -3903.1465 3915.6104 -3903.1497 3915.6223 C
-3903.1392 3915.5686 -3903.1272 3915.5183 -3903.1062 3915.4812 C
f
*U
0 D
-3903.3042 3915.8499 m
-3903.3201 3915.8562 -3903.3289 3915.8679 -3903.3496 3915.8704 C
-3903.3271 3915.8953 -3903.3057 3915.9163 -3903.2839 3915.9336 C
-3903.2705 3915.9038 -3903.2568 3915.8743 -3903.2449 3915.8455 C
-3903.2649 3915.8472 -3903.2856 3915.8479 -3903.3042 3915.8499 C
f
-3840.2336 3916.2664 m
-3840.2483 3916.26 L
-3840.2361 3916.271 -3840.2249 3916.2822 -3840.2175 3916.3 C
-3840.2175 3916.3 L
-3840.2273 3916.2864 -3840.2273 3916.2776 -3840.2336 3916.2664 C
f
-3892.0271 3917.9673 m
-3892.0281 3917.896 L
-3892.0889 3917.9583 L
-3892.0271 3917.9673 L
f
-3836.4016 3917.2312 m
-3836.3943 3917.2559 -3836.3799 3917.2815 -3836.3513 3917.303 C
-3836.3535 3917.2847 -3836.3752 3917.2593 -3836.4016 3917.2312 C
f
-3834.7463 3917.2942 m
-3834.5122 3917.3943 L
-3834.6135 3917.3374 -3834.6873 3917.3103 -3834.7463 3917.2942 C
f
-3833.4736 3917.4336 m
-3833.4575 3917.3843 -3833.4529 3917.3472 -3833.4487 3917.313 C
-3833.4497 3917.3123 -3833.4504 3917.3123 -3833.4512 3917.3113 C
-3833.4736 3917.4336 L
f
-3853.7092 3917.7639 m
-3853.7263 3917.7654 -3853.7432 3917.7693 -3853.7583 3917.7766 c
-3853.8735 3917.8311 -3853.7952 3917.8096 -3853.7092 3917.7639 C
f
-3847.6873 3917.1072 m
-3847.7512 3917.1582 -3847.8142 3917.2083 -3847.8809 3917.24 C
-3847.7737 3917.2615 -3847.6904 3917.2671 -3847.6873 3917.1072 C
f
-3860.4336 3918.1023 m
-3860.4329 3918.1006 -3860.4336 3918.0999 -3860.4329 3918.0974 C
-3860.4473 3918.0984 -3860.46 3918.0974 -3860.4744 3918.0974 C
-3860.4336 3918.1023 L
f
-3848.1609 3917.2351 m
-3848.0537 3917.2913 -3847.9641 3917.2791 -3847.8809 3917.24 C
-3847.9688 3917.2212 -3848.0723 3917.1924 -3848.1609 3917.2351 C
f
-3827.9575 3917.5613 m
-3827.8962 3917.5728 L
-3827.8972 3917.5542 -3827.8936 3917.5391 -3827.8889 3917.5276 C
-3827.9575 3917.5613 L
f
-3827.8889 3917.5276 m
-3827.8208 3917.4944 L
-3827.8521 3917.4944 -3827.8792 3917.4966 -3827.8889 3917.5276 C
f
-3827.6775 3917.4236 m
-3827.8208 3917.4944 L
-3827.7712 3917.4951 -3827.71 3917.5039 -3827.6775 3917.4236 C
f
-3829.6423 3917.4312 m
-3829.6616 3917.5332 L
-3829.6511 3917.5122 -3829.6443 3917.479 -3829.6423 3917.4312 C
f
-3830.1543 3917.4607 m
-3830.0322 3917.4839 -3829.8479 3917.6782 -3829.6775 3917.6143 C
-3829.6616 3917.5332 L
-3829.7417 3917.6848 -3830.0383 3917.2888 -3830.1543 3917.4607 C
f
-3832.2913 3916.2007 m
-3831.8623 3916.2822 L
-3831.9373 3916.1736 -3832.0359 3916.0276 -3831.8408 3916.0015 C
-3832.3816 3915.6775 -3831.7292 3916.2444 -3832.2913 3916.2007 C
f
-3833.6216 3916.0432 m
-3833.3911 3915.9927 -3833.6243 3915.8855 -3833.6121 3915.8242 C
-3833.7583 3915.9231 -3833.7937 3915.948 -3833.6216 3916.0432 C
f
-3843.2351 3916.0422 m
-3843.2119 3915.7864 L
-3843.3896 3915.8232 -3843.2136 3915.8855 -3843.2351 3916.0422 C
f
-3845.0728 3917.3643 m
-3844.8999 3917.5232 L
-3844.8176 3917.2888 L
-3845.0728 3917.3643 L
f
-3846.1584 3915.5422 m
-3846.0808 3915.5056 L
-3846.3772 3915.5984 L
-3846.1584 3915.5422 L
f
-3862.3042 3915.6331 m
-3862.2505 3915.948 L
-3862.1304 3915.8916 -3862.1052 3915.5376 -3862.3042 3915.6331 C
f
-3869.2744 3915.9539 m
-3869.3503 3915.7964 -3869.5464 3915.6951 -3869.6672 3915.8499 C
-3869.5105 3915.8716 -3869.3542 3915.9944 -3869.2744 3915.9539 C
f
-3890.1785 3915.4407 m
-3890.0383 3915.3352 L
-3890.3025 3915.4231 L
-3890.1785 3915.4407 L
f
U
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 5 p) -
(t. Flat/ Adobe Calligraphic Brush Tool/ Touch Calligraphic Bru) -
(sh/ Adobe ArtOnPath Brush Tool/ Charcoal - Pencil/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal - Pencil)
(1 / Unnamed 7/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 0 24 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(Black)
Pc
0 0.993347 1 0 1 0 0 Xa
(RGB Red)
Pc
0.06183 0 0.965423 0 1 1 0 Xa
(RGB Yellow)
Pc
0.626581 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.51809 0 0.125704 0 0 1 1 Xa
(RGB Cyan)
Pc
0.883879 0.768521 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.271061 0.816068 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168917 0.979644 0.927825 0.067292 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.00296 0.992859 0.971923 0.000885 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.799161 0.966949 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000214 0.500908 0.986023 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.348547 0.872557 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045441 0 0.932189 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188754 0 0.984192 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.500359 0.001617 0.993011 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746639 0 0.99765 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.864073 0.176333 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.903288 0.334081 0.988586 0.260441 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.762325 0 0.749203 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784115 0.0907 0.457252 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.697261 0.147799 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.874906 0.526604 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991974 0.964538 0.034211 0.004913 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.261753 0.244419 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.74554 0.984558 0.009857 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494453 0.992615 0.013214 0.001068 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348455 1 0.371618 0.108034 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.119234 1 0.4925 0.008789 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.970886 0.203769 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.228824 0.273991 0.399542 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398596 0.428931 0.525505 0.068055 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.504417 0.530724 0.609705 0.236027 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576074 0.60415 0.637018 0.419196 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226596 0.383764 0.636469 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315404 0.491493 0.741054 0.09897 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362402 0.574334 0.839933 0.226139 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391608 0.640558 0.93286 0.355779 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415717 0.700191 0.970581 0.491493 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477058 0.734737 0.837186 0.681422 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
Bb
2 (Sky) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sky)
Pc
Bb
2 (Orchid) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Orchid)
Pc
Bb
0 0 0 0 Bh
2 (Summer) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Summer)
Pc
Bb
0 0 0 0 Bh
2 (Golden Ring) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Golden Ring)
Pc
(Jive) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jive)
Pc
(Alyssa) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Alyssa)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.72607 0.666682 0.65243 0.782345 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.694331 0.632349 0.621027 0.583551 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653956 0.580194 0.568231 0.366552 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597711 0.511803 0.507713 0.201297 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516228 0.432044 0.432074 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426154 0.347417 0.353185 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.30695 0.241886 0.247776 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084993 0.061036 0.066285 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037079 0.024628 0.024628 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.63241 0.21915 0 0 0.247059 0.662745 0.960784 Xa
(R=63 G=169 B=245)
Pc
0.554314 0 0.965148 0 0.478431 0.788235 0.262745 Xa
(R=122 G=201 B=67)
Pc
0 0.508904 0.959899 0 1 0.576471 0.117647 Xa
(R=255 G=147 B=30)
Pc
0 0.964263 0.899229 0 1 0.113725 0.145098 Xa
(R=255 G=29 B=37)
Pc
0 0.661372 0.033204 0 1 0.482353 0.67451 Xa
(R=255 G=123 B=172)
Pc
0.254185 0.127077 0.115877 0 0.741176 0.8 0.831373 Xa
(R=189 G=204 B=212)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
0 R
0.749721 0.679194 0.670497 0.901457 0 0 0 XA
0 J 0 j 0.25 w 10 M []0 d0 XR
2.47239 -1.42729 m
1.53668 -67.9831 l
18.7139 -67.9831 l
18.7139 -42.6758 l
41.1405 -42.9805 l
40.7027 -66.9919 l
67.6429 -67.3355 l
61.1131 -60.5452 59.7446 -57.24 v
55.8291 -47.7818 57.713 -16.2184 y
59.8583 -2.94137 l
58.2412 -43.9672 62.5464 -56.5675 v
63.6248 -59.7232 68.9174 -67.1815 y
79.3438 -69.4385 82.8706 -69.5652 v
86.7003 -69.7031 94.5873 -69.6776 98.14 -68.0679 c
101.244 -66.6618 107.3966 -62.4555 108.8679 -59.0859 c
111.8024 -52.3658 110.5973 -29.223 y
111.9367 -5.50593 l
112.7594 -9.58191 l
114.0697 -31.241 l
115.0357 -47.3274 114.0697 -52.5414 v
113.6264 -54.9344 110.5973 -61.5102 y
107.1254 -67.9831 l
135.8981 -68.5415 l
147.746 -67.9533 151.2949 -66.1826 v
155.2493 -64.2089 162.4493 -57.9136 164.5144 -53.6506 c
166.8108 -48.9104 169.2163 -37.9448 168.6721 -32.5861 c
168.1408 -27.3514 165.2475 -16.7884 162.1586 -12.8166 c
159.5459 -9.45785 152.5876 -4.42216 148.761 -3.21184 c
144.5958 -1.89448 129.4956 -1.79354 y
130.0362 -13.9739 l
138.4091 -16.8533 141.1371 -18.0121 v
143.4684 -19.0021 148.211 -21.4634 149.7332 -23.6752 c
151.7548 -26.6118 152.472 -34.5632 152.1685 -38.256 c
151.8821 -41.7409 148.662 -48.4262 146.1688 -50.5338 c
143.6577 -52.6567 133.8982 -53.6506 y
130.6963 -53.6506 l
129.8892 -18.2363 l
127.0944 -1.79354 l
114.5803 -1.71323 l
94.2764 -1.79354 l
97.935 -36.7818 94.4768 -47.5427 v
93.7098 -49.9283 89.8776 -53.7082 87.6605 -54.2162 c
85.2088 -54.7778 79.5351 -53.0736 78.1426 -50.744 c
75.8801 -46.9576 76.834 -32.5753 y
77.2675 -15.5717 l
77.4624 -2.95211 l
62.2059 -1.79354 l
47.4514 -1.33206 l
41.3536 -1.79354 l
41.567 -24.6347 l
18.7207 -25.1965 l
19.8364 -1.33206 l
2.47239 -1.42729 l
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
